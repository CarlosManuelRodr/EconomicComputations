(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    201580,       4601]
NotebookOptionsPosition[    195106,       4488]
NotebookOutlinePosition[    195710,       4509]
CellTagsIndexPosition[    195604,       4504]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Trading strategies based on moving averages", "Title",
 CellChangeTimes->{{3.777400212661525*^9, 3.7774002224712753`*^9}, {
  3.781034044932564*^9, 
  3.7810340521324453`*^9}},ExpressionUUID->"43b831dd-9380-4570-8c05-\
05f3288b120c"],

Cell[CellGroupData[{

Cell["Inicializaci\[OAcute]n", "Chapter",
 CellChangeTimes->{{3.777400229667172*^9, 
  3.77740023163906*^9}},ExpressionUUID->"ae9a1b2b-8fcc-49c9-802c-\
32690bff9bdf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", 
   RowBox[{"\"\<AdvancedMapping`\>\"", ",", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ParentDirectory", "[", 
        RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ",", "\"\<Extra\>\"", 
       ",", "\"\<AdvancedMapping.wl\>\""}], "}"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Needs", "[", 
    RowBox[{"\"\<EconomicComputations`\>\"", ",", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ParentDirectory", "[", 
         RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ",", 
        "\"\<EconomicComputations.wl\>\""}], "}"}], "]"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Opciones", " ", "de", " ", "estilo"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"smallFontSize", " ", "=", " ", "13"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bigFontSize", " ", "=", " ", "15"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotSize", " ", "=", " ", "500"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colors", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"ColorData", "[", "\"\<Legacy\>\"", "]"}], "[", 
      "\"\<IndianRed\>\"", "]"}], ",", "Black", ",", "Blue", ",", 
     RowBox[{
      RowBox[{"ColorData", "[", "\"\<Legacy\>\"", "]"}], "[", "\"\<Olive\>\"",
       "]"}]}], "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.725813801477882*^9, 3.725813842354185*^9}, 
   3.7258145952114487`*^9, {3.725815029462809*^9, 3.725815050374353*^9}, {
   3.725822160813527*^9, 3.725822210293992*^9}, {3.725823753066257*^9, 
   3.725823758353553*^9}, {3.7258238497826433`*^9, 3.7258238546235313`*^9}, {
   3.725826159542289*^9, 3.725826159775069*^9}, {3.725886137582262*^9, 
   3.725886137825506*^9}, {3.7258912353102493`*^9, 3.725891240101152*^9}, {
   3.725908856840219*^9, 3.725908857152266*^9}, {3.7259089115580063`*^9, 
   3.725908972319603*^9}, {3.7259090027497673`*^9, 3.725909005775334*^9}, {
   3.725909180222677*^9, 3.7259091821578503`*^9}, {3.725909857689686*^9, 
   3.7259098579284143`*^9}, {3.725911306756922*^9, 3.725911361342228*^9}, {
   3.725912152652165*^9, 3.725912229638928*^9}, {3.726161944526227*^9, 
   3.726161945773011*^9}, {3.726162117625463*^9, 3.726162117919694*^9}, {
   3.7261623472179117`*^9, 3.726162354684567*^9}, {3.726240902388068*^9, 
   3.726240902728302*^9}, {3.7262409758805933`*^9, 3.7262410033188047`*^9}, {
   3.726241262768165*^9, 3.726241304212583*^9}, {3.726241408073407*^9, 
   3.7262414175265408`*^9}, 3.726323552579049*^9, {3.7263273579102097`*^9, 
   3.726327359364676*^9}, {3.726327490478724*^9, 3.726327492005521*^9}, {
   3.726328254122326*^9, 3.726328257125023*^9}, {3.726328292868544*^9, 
   3.726328302032453*^9}, {3.7263291584760113`*^9, 3.726329172180461*^9}, {
   3.726329598747867*^9, 3.7263296020649557`*^9}, {3.7263307200371113`*^9, 
   3.726330776967119*^9}, {3.726331621514995*^9, 3.726331622870336*^9}, {
   3.726347600616104*^9, 3.726347608614952*^9}, {3.7263521315766897`*^9, 
   3.726352137598084*^9}, {3.726410318377204*^9, 3.726410319653459*^9}, 
   3.7264104024623423`*^9, {3.738611169349203*^9, 3.7386111782316427`*^9}, {
   3.738611222933153*^9, 3.738611250476118*^9}, {3.7566544178947763`*^9, 
   3.75665441991775*^9}, {3.756654453745466*^9, 3.756654487319433*^9}, 
   3.7566547895902443`*^9, {3.75665485095689*^9, 3.7566548610389843`*^9}, {
   3.761332937165599*^9, 3.761332962440831*^9}, {3.761332995433766*^9, 
   3.7613330062208347`*^9}, 3.77547795015276*^9, {3.777400243950224*^9, 
   3.7774002501351957`*^9}, {3.781113813053053*^9, 3.781113815188466*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"9ce68d2d-e508-4460-8bed-94bb1ae32a6d"],

Cell[CellGroupData[{

Cell["Loaded packages info", "Subsection",
 CellChangeTimes->{{3.7380019972646837`*^9, 3.738002000538846*^9}, {
  3.777400269499103*^9, 3.777400277504736*^9}, {3.7810340600540247`*^9, 
  3.781034064156189*^9}},ExpressionUUID->"12ca49e4-3935-4b83-8343-\
d0bb4e5649db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "AdvancedMapping`*"}]], "Input",
 CellLabel->"In[25]:=",ExpressionUUID->"59beb081-dcf7-43c0-8846-e231cb53299b"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["AdvancedMapping`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], " ", 
              StyleBox["AdvancedMapping`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["EvaluateIfChanged", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-abcacb4d-3e57-44e7-95f8-e95d34d0d1db", {
                   "EvaluateIfChanged", "AdvancedMapping`"}, False},
                 ButtonNote->"AdvancedMapping`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["LinkParallelEvaluate", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-abcacb4d-3e57-44e7-95f8-e95d34d0d1db", {
                   "LinkParallelEvaluate", "AdvancedMapping`"}, False},
                 ButtonNote->"AdvancedMapping`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["NestApplyWhileList", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-abcacb4d-3e57-44e7-95f8-e95d34d0d1db", {
                   "NestApplyWhileList", "AdvancedMapping`"}, False},
                 ButtonNote->"AdvancedMapping`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ProgressParallelMap", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-abcacb4d-3e57-44e7-95f8-e95d34d0d1db", {
                   "ProgressParallelMap", "AdvancedMapping`"}, False},
                 ButtonNote->"AdvancedMapping`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["EvaluateOnce", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-abcacb4d-3e57-44e7-95f8-e95d34d0d1db", {
                   "EvaluateOnce", "AdvancedMapping`"}, False},
                 ButtonNote->"AdvancedMapping`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["MapIf", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-abcacb4d-3e57-44e7-95f8-e95d34d0d1db", {
                   "MapIf", "AdvancedMapping`"}, False},
                 ButtonNote->"AdvancedMapping`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["NestListIndexed", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-abcacb4d-3e57-44e7-95f8-e95d34d0d1db", {
                   "NestListIndexed", "AdvancedMapping`"}, False},
                 ButtonNote->"AdvancedMapping`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["ProgressParallelMapThread", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-abcacb4d-3e57-44e7-95f8-e95d34d0d1db", {
                   "ProgressParallelMapThread", "AdvancedMapping`"}, False},
                 ButtonNote->"AdvancedMapping`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["FoldWhile", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-abcacb4d-3e57-44e7-95f8-e95d34d0d1db", {
                   "FoldWhile", "AdvancedMapping`"}, False},
                 ButtonNote->"AdvancedMapping`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["MapIfElse", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-abcacb4d-3e57-44e7-95f8-e95d34d0d1db", {
                   "MapIfElse", "AdvancedMapping`"}, False},
                 ButtonNote->"AdvancedMapping`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ParallelMapThread", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-abcacb4d-3e57-44e7-95f8-e95d34d0d1db", {
                   "ParallelMapThread", "AdvancedMapping`"}, False},
                 ButtonNote->"AdvancedMapping`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ProgressParallelTable", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-abcacb4d-3e57-44e7-95f8-e95d34d0d1db", {
                   "ProgressParallelTable", "AdvancedMapping`"}, False},
                 ButtonNote->"AdvancedMapping`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["FoldWhileList", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-abcacb4d-3e57-44e7-95f8-e95d34d0d1db", {
                   "FoldWhileList", "AdvancedMapping`"}, False},
                 ButtonNote->"AdvancedMapping`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["MapPattern", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-abcacb4d-3e57-44e7-95f8-e95d34d0d1db", {
                   "MapPattern", "AdvancedMapping`"}, False},
                 ButtonNote->"AdvancedMapping`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ProgressMap", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-abcacb4d-3e57-44e7-95f8-e95d34d0d1db", {
                   "ProgressMap", "AdvancedMapping`"}, False},
                 ButtonNote->"AdvancedMapping`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ProgressTable", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-abcacb4d-3e57-44e7-95f8-e95d34d0d1db", {
                   "ProgressTable", "AdvancedMapping`"}, False},
                 ButtonNote->"AdvancedMapping`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["LinkEvaluate", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-abcacb4d-3e57-44e7-95f8-e95d34d0d1db", {
                   "LinkEvaluate", "AdvancedMapping`"}, False},
                 ButtonNote->"AdvancedMapping`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["NestApplyList", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-abcacb4d-3e57-44e7-95f8-e95d34d0d1db", {
                   "NestApplyList", "AdvancedMapping`"}, False},
                 ButtonNote->"AdvancedMapping`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ProgressMapThread", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-abcacb4d-3e57-44e7-95f8-e95d34d0d1db", {
                   "ProgressMapThread", "AdvancedMapping`"}, False},
                 ButtonNote->"AdvancedMapping`",
                 Evaluator->Automatic], ""}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.2375]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->{3.77740041189569*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"df75c713-92ee-47e0-90ef-f5f1154427da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "EconomicComputations`*"}]], "Input",
 CellChangeTimes->{3.738002019236318*^9},
 CellLabel->"In[26]:=",ExpressionUUID->"cb496632-c25b-46cd-8244-e4e933bd96c3"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["EconomicComputations`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], " ", 
              
              StyleBox["EconomicComputations`", 
               "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["AddKeyToMarket", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "AddKeyToMarket", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ExportDatabase", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "ExportDatabase", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Returns", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "Returns", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["AddToDataset", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "AddToDataset", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ExportMarket", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "ExportMarket", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["RightCutoff", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "RightCutoff", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CalculateCutoff", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "CalculateCutoff", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ExtremeEventThreshold", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "ExtremeEventThreshold", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["SelectDatedGaussianReturns", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "SelectDatedGaussianReturns", "EconomicComputations`"}, 
                   False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DatasetBuilderDialog", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "DatasetBuilderDialog", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["FindImportantDates", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "FindImportantDates", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SelectGaussianReturns", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "SelectGaussianReturns", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DatedReturns", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "DatedReturns", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["GetExtremeEventDates", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "GetExtremeEventDates", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SimpleReturns", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "SimpleReturns", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DatedSimpleReturns", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "DatedSimpleReturns", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["GetExtremeEventDateValues", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "GetExtremeEventDateValues", "EconomicComputations`"}, 
                   False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TrendDuration", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "TrendDuration", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DatedTrendDuration", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "DatedTrendDuration", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["KullbackLeibler", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "KullbackLeibler", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TrendReturns", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "TrendReturns", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DatedTrendReturns", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "DatedTrendReturns", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["KullbackLeiblerInTime", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "KullbackLeiblerInTime", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["UncorrelatedMultiscaleReturns", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "UncorrelatedMultiscaleReturns", "EconomicComputations`"}, 
                   False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 
                 StyleBox["DatedVelocityTrendReturns", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "DatedVelocityTrendReturns", "EconomicComputations`"}, 
                   False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["LeftCutoff", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "LeftCutoff", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["UncorrelatedReturns", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "UncorrelatedReturns", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 
                 StyleBox["DetendedMultiscaleReturns", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "DetendedMultiscaleReturns", "EconomicComputations`"}, 
                   False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["MultiscaleReturns", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "MultiscaleReturns", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["UpwardTrendDuration", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "UpwardTrendDuration", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DetrendedReturns", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "DetrendedReturns", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["PowerLawAndersonDarling", "InformationGridButton"],
                 
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "PowerLawAndersonDarling", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["VelocityTrendReturns", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "VelocityTrendReturns", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DownwardTrendDuration", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "DownwardTrendDuration", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["PricesFromReturns", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "PricesFromReturns", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], ""},
               {
                ButtonBox[
                 StyleBox["EventProbability", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "EventProbability", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["PricesFromSimpleReturns", "InformationGridButton"],
                 
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-136c4867-2782-48d1-b6af-30079f2b3532", {
                   "PricesFromSimpleReturns", "EconomicComputations`"}, False},
                 ButtonNote->"EconomicComputations`",
                 Evaluator->Automatic], ""}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.31666666666666665`]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->{3.7774004144927673`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"b1dd4bfa-e889-40f3-aa1c-c0b19d889e35"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*\\nStyleBox[\\\"PricesFromReturns\\\",\\\
nFontWeight->\\\"Bold\\\"]\\)[\\!\\(\\*\\nStyleBox[\\\"returns\\\",\\\
nFontSlant->\\\"Italic\\\"]\\)] return prices from logarithmic returns with \
lag 1.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "PricesFromReturns", "[", 
                    "EconomicComputations`Private`returns_", "]"}], ":=", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", "EconomicComputations`Private`acc", "}"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"EconomicComputations`Private`acc", "=", 
                    RowBox[{
                    "Accumulate", "[", "EconomicComputations`Private`returns",
                     "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Exp", "[", "#1", "]"}], "-", "1"}], "&"}], ")"}],
                     "/@", 
                    RowBox[{"(", 
                    RowBox[{"EconomicComputations`Private`acc", "-", 
                    RowBox[{
                    "Min", "[", "EconomicComputations`Private`acc", "]"}]}], 
                    ")"}]}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], \
"\<\"EconomicComputations`PricesFromReturns\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*\\nStyleBox[\\\"PricesFromReturns\\\",\\\
nFontWeight->\\\"Bold\\\"]\\)[\\!\\(\\*\\nStyleBox[\\\"returns\\\",\\\
nFontSlant->\\\"Italic\\\"]\\)] return prices from logarithmic returns with \
lag 1.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*\nStyleBox[\"PricesFromReturns\",\nFontWeight->\"Bold\"]\)[\!\(\*\n\
StyleBox[\"returns\",\nFontSlant->\"Italic\"]\)] return prices from \
logarithmic returns with lag 1.", "Documentation" -> None, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, EconomicComputations`PricesFromReturns, {
      EconomicComputations`PricesFromReturns[
         Pattern[EconomicComputations`Private`returns, 
          Blank[]]] :> 
       Block[{EconomicComputations`Private`acc}, 
         EconomicComputations`Private`acc = 
          Accumulate[EconomicComputations`Private`returns]; 
         Map[Exp[#] - 1& , EconomicComputations`Private`acc - Min[
           EconomicComputations`Private`acc]]]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "EconomicComputations`PricesFromReturns"], False]]], "Print",
 CellTags->
  "Info-136c4867-2782-48d1-b6af-30079f2b3532",ExpressionUUID->"0edb7e62-49c2-\
48c7-9543-54a490746bb3"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Load database", "Chapter",
 CellChangeTimes->{{3.777400301087185*^9, 3.777400304329691*^9}, {
  3.781034067556089*^9, 
  3.781034069932166*^9}},ExpressionUUID->"5cc92109-5078-4b33-9581-\
462906b374da"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DatedPrices", "[", 
    RowBox[{"dates_", ",", "prices_"}], "]"}], ":=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"dates", ",", "prices"}], "}"}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.777400483822969*^9, 3.777400497442871*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"41a03ed3-cc44-4089-b0af-8fbfee8b287e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"path", " ", "=", " ", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ",", 
      "\"\<Datasets\>\"", ",", "\"\<Prices\>\"", ",", "\"\<sp500v3.wdx\>\""}],
      "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"database", " ", "=", " ", 
   RowBox[{"Import", "[", "path", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.725908928874539*^9, {3.7386112566008368`*^9, 3.7386112689098263`*^9}, {
   3.7564739455548563`*^9, 3.756473966482794*^9}, {3.756477138657824*^9, 
   3.7564771389575453`*^9}, {3.76133308942835*^9, 3.761333091876583*^9}, {
   3.771960534143981*^9, 3.771960545447304*^9}, {3.772036063276965*^9, 
   3.7720360665464077`*^9}, {3.772036241194306*^9, 3.77203625287162*^9}, {
   3.775477961165186*^9, 3.775477969288271*^9}, 3.7754780131425*^9, {
   3.777400341397171*^9, 3.777400351848933*^9}, {3.777400447901471*^9, 
   3.777400460342659*^9}, {3.777400507434965*^9, 3.777400507705071*^9}, {
   3.777400572427231*^9, 3.7774005725833693`*^9}, {3.777400609877466*^9, 
   3.777400611273203*^9}, {3.78103415781357*^9, 3.781034163862665*^9}, {
   3.7811138446395483`*^9, 3.781113847554817*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"857b1afa-f812-49ea-9b91-0ec6c50440ec"],

Cell[BoxData[
 RowBox[{
  RowBox[{"database", " ", "=", " ", 
   RowBox[{"SortBy", "[", 
    RowBox[{"database", ",", 
     RowBox[{
      RowBox[{"#", "[", "\"\<Sector\>\"", "]"}], "&"}]}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellLabel->"In[10]:=",ExpressionUUID->"a945fed5-8709-4704-952f-b1479840fde7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Strategy definition", "Chapter",
 CellChangeTimes->{{3.777400289004139*^9, 3.777400292992384*^9}, {
  3.7810342000431147`*^9, 
  3.781034203754977*^9}},ExpressionUUID->"5eaae94e-1e68-48c4-8231-\
1a6f4f2cdf02"],

Cell["Fuctions to convert standard date to percentual year", "Text",
 CellChangeTimes->{{3.777401012979505*^9, 3.777401030650228*^9}, {
  3.781034230410857*^9, 
  3.781034252850028*^9}},ExpressionUUID->"e6879fdf-6bf8-4ea1-8fb6-\
31b0b864bb77"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DaysInYear", "[", "year_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"First", "[", 
      RowBox[{"DateDifference", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"year", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"year", ",", " ", "12", ",", " ", "31"}], "}"}]}], "]"}], 
      "]"}], " ", "+", " ", "1"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"YearPercentual", "[", "date_DateObject", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"QuantityMagnitude", "[", 
       RowBox[{"DateDifference", "[", 
        RowBox[{
         RowBox[{"DateObject", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"date", "[", "\"\<Year\>\"", "]"}], ",", " ", "1", ",", 
            " ", "1"}], "}"}], "]"}], ",", " ", "date"}], "]"}], "]"}], " ", 
      "/", " ", 
      RowBox[{"DaysInYear", "[", 
       RowBox[{"date", "[", "\"\<Year\>\"", "]"}], "]"}]}], "]"}], " ", "+", 
    " ", 
    RowBox[{"date", "[", "\"\<Year\>\"", "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"YearPercentual", "[", "date_String", "]"}], " ", ":=", " ", 
    RowBox[{"YearPercentual", "[", 
     RowBox[{"DateObject", "[", "date", "]"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DateFromYearPercentual", "[", "yearPercentual_", "]"}], " ", ":=",
    " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"year", ",", " ", "daysEllapsed", ",", " ", "date"}], "}"}], 
     ",", "\n", "\t", 
     RowBox[{
      RowBox[{"year", " ", "=", " ", 
       RowBox[{"IntegerPart", "[", "yearPercentual", "]"}]}], ";", "\n", "\t", 
      RowBox[{"daysEllapsed", " ", "=", " ", 
       RowBox[{"IntegerPart", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"yearPercentual", " ", "-", " ", "year"}], ")"}], " ", "*", 
         " ", 
         RowBox[{"DaysInYear", "[", "year", "]"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"date", " ", "=", " ", 
       RowBox[{"DatePlus", "[", 
        RowBox[{
         RowBox[{"DateObject", "[", 
          RowBox[{"{", 
           RowBox[{"year", ",", " ", "1", ",", " ", "1"}], "}"}], "]"}], ",", 
         " ", "daysEllapsed"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"Return", "[", "date", "]"}], ";"}]}], "\n", "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.781113995746006*^9, 3.781114034335812*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"e39654f6-1f97-45a1-bdd9-1aab9a194383"],

Cell["Calculate intersections between moving averages", "Text",
 CellChangeTimes->{{3.777401036234069*^9, 3.777401050493348*^9}, {
  3.781034257146192*^9, 
  3.781034264594303*^9}},ExpressionUUID->"b71f47ca-977c-4de9-9918-\
0073eefb754b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RootsInRange", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"f1_", ",", " ", "f2_"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"t_", ",", " ", "tmin_", ",", " ", "tmax_"}], "}"}], ",", " ", 
      "opts___"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p", ",", " ", "r", ",", " ", "pts", ",", " ", "x", ",", " ", 
        RowBox[{"f", " ", "=", " ", 
         RowBox[{"Function", "[", 
          RowBox[{"t", ",", " ", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"f1", "-", "f2"}], "]"}]}], "]"}]}]}], "}"}], ",", "\n", 
      "\t", "\n", "\t", 
      RowBox[{
       RowBox[{"p", " ", "=", " ", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"f", "[", "t", "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"t", ",", " ", "tmin", ",", " ", "tmax"}], "}"}]}], 
         "]"}]}], ";", "\n", "\t", 
       RowBox[{"pts", " ", "=", " ", 
        RowBox[{"Cases", "[", 
         RowBox[{
          RowBox[{"First", "[", "p", "]"}], ",", " ", 
          RowBox[{
           RowBox[{"Line", "[", 
            RowBox[{"{", "x__", "}"}], "]"}], "->", "x"}], ",", " ", 
          "Infinity"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"r", " ", "=", " ", 
        RowBox[{"Abs", "[", 
         RowBox[{"Subtract", "@@", 
          RowBox[{"Last", "@", 
           RowBox[{"PlotRange", "[", "p", "]"}]}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"pts", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{"First", ",", " ", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Split", "[", 
             RowBox[{"pts", ",", " ", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Sign", "[", 
                  RowBox[{"Last", "[", "#2", "]"}], "]"}], " ", "==", " ", 
                 RowBox[{"-", 
                  RowBox[{"Sign", "[", 
                   RowBox[{"Last", "[", "#1", "]"}], "]"}]}]}], " ", "&&", 
                " ", 
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{
                   RowBox[{"Last", "[", "#2", "]"}], "-", 
                   RowBox[{"Last", "[", "#1", "]"}]}], "]"}], " ", "<", " ", 
                 RowBox[{"r", "/", "2"}]}]}], "&"}]}], "]"}], ",", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "#1", "]"}], " ", "==", " ", "2"}], 
             "&"}]}], "]"}], ",", " ", 
          RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"pts", " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"FindRoot", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"f", "[", "t", "]"}], "==", "0"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"t", ",", " ", 
               RowBox[{"Sequence", "@@", "##"}]}], "}"}], ",", " ", 
             RowBox[{"Evaluate", "[", 
              RowBox[{"Sequence", "@@", 
               RowBox[{"FilterRules", "[", 
                RowBox[{
                 RowBox[{"{", "opts", "}"}], ",", " ", 
                 RowBox[{"Options", "@", "FindRoot"}]}], "]"}]}], "]"}]}], 
            "]"}], "&"}], ")"}], "/@", "pts"}]}], ";", "\n", "\t", "pts"}]}], 
     "\n", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RootsInRange", "[", 
     RowBox[{
      RowBox[{"f1_", "==", "f2_"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"t_", ",", " ", "tmin_", ",", " ", "tmax_"}], "}"}], ",", " ", 
      "opts___"}], "]"}], " ", ":=", " ", 
    RowBox[{"RootsInRange", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"f1", ",", " ", "f2"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"t", ",", " ", "tmin", ",", " ", "tmax"}], "}"}], ",", " ", 
      "opts"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Middle", "[", "l_List", "]"}], " ", ":=", " ", 
    RowBox[{"Part", "[", 
     RowBox[{"l", ",", " ", 
      RowBox[{"Floor", "[", 
       RowBox[{
        RowBox[{"Length", "[", "l", "]"}], "/", "2"}], "]"}]}], "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"VariableMovingAverage", "[", 
     RowBox[{"l_List", ",", " ", "f_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"subLists", ",", " ", "windows"}], "}"}], ",", " ", "\n", "\t", 
      RowBox[{
       RowBox[{"windows", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Ceiling", "[", 
            RowBox[{"f", "[", "#", "]"}], "]"}], "&"}], ",", " ", 
          RowBox[{"l", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{"subLists", " ", "=", " ", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"TakeList", "[", 
           RowBox[{"l", ",", " ", 
            RowBox[{"Map", "[", 
             RowBox[{"UpTo", ",", " ", "windows"}], "]"}]}], "]"}], ",", " ", 
          
          RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Middle", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], "]"}], ",", " ", 
            
            RowBox[{"Mean", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}]}], "}"}], 
          "&"}], ",", " ", "subLists"}], "]"}]}]}], "\n", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CrossoverTrading", "[", 
    RowBox[{"datedPrices_", ",", " ", "f1_", ",", " ", "f2_"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{
      "numericDatePrices", ",", " ", "avg1", ",", " ", "avg2", ",", " ", 
       "datesMin", ",", " ", "datesMax", ",", " ", "priceInterpolation", ",", 
       " ", "avg1Interpolation", ",", " ", "avg2Interpolation", ",", " ", 
       "\n", "\t\t", "intersectionDates", ",", " ", "x", ",", " ", "firstInt",
        ",", " ", "signals", ",", " ", "buySignals", ",", " ", "sellSignals", 
       ",", " ", "operations", ",", " ", "return", ",", " ", "result"}], "\n",
       "\t", "}"}], ",", " ", "\n", "\t", 
     RowBox[{
      RowBox[{"numericDatePrices", " ", "=", " ", 
       RowBox[{"MapAt", "[", 
        RowBox[{"YearPercentual", ",", " ", "datedPrices", ",", " ", 
         RowBox[{"{", 
          RowBox[{"All", ",", "1"}], "}"}]}], "]"}]}], ";", "\n", "\n", "\t", 
      
      RowBox[{"avg1", " ", "=", " ", 
       RowBox[{"f1", "[", "numericDatePrices", "]"}]}], ";", "\n", "\t", 
      RowBox[{"avg2", " ", "=", " ", 
       RowBox[{"f2", "[", "numericDatePrices", "]"}]}], ";", "\n", "\t", 
      RowBox[{"datesMin", " ", "=", " ", 
       RowBox[{"Max", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"avg1", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", " ", "1"}], "]"}], "]"}], ",", " ", 
          RowBox[{"avg2", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", " ", "1"}], "]"}], "]"}]}], "}"}], "]"}]}], ";",
       "\n", "\t", 
      RowBox[{"datesMax", " ", "=", " ", 
       RowBox[{"Min", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"avg1", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "1"}], ",", " ", "1"}], "]"}], "]"}], ",", " ", 
          RowBox[{"avg2", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "1"}], ",", " ", "1"}], "]"}], "]"}]}], "}"}], 
        "]"}]}], ";", "\n", "\n", "\t", 
      RowBox[{"priceInterpolation", " ", "=", " ", 
       RowBox[{"Interpolation", "[", "numericDatePrices", "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"avg1Interpolation", " ", "=", " ", 
       RowBox[{"Interpolation", "[", "avg1", "]"}]}], ";", "\n", "\t", 
      RowBox[{"avg2Interpolation", " ", "=", " ", 
       RowBox[{"Interpolation", "[", "avg2", "]"}]}], ";", "\n", "\t", "\n", 
      "\t", 
      RowBox[{"intersectionDates", " ", "=", " ", 
       RowBox[{"x", " ", "/.", 
        RowBox[{"RootsInRange", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"avg1Interpolation", "[", "x", "]"}], "==", 
           RowBox[{"avg2Interpolation", "[", "x", "]"}]}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"x", ",", " ", "datesMin", ",", " ", "datesMax"}], "}"}]}],
          "]"}]}]}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Verificar", " ", "que", " ", "la", " ", "primera", " ", 
        "intersecci\[OAcute]n", " ", "sea", " ", "una", " ", 
        "operaci\[OAcute]n", " ", "de", " ", "compra"}], " ", "*)"}], "\n", 
      "\t", 
      RowBox[{"firstInt", " ", "=", " ", 
       RowBox[{"First", "[", "intersectionDates", "]"}]}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"avg1Interpolation", "'"}], "[", "firstInt", "]"}], "-", 
          RowBox[{
           RowBox[{"avg2Interpolation", "'"}], "[", "firstInt", "]"}]}], "<", 
         "0"}], ",", " ", 
        RowBox[{"intersectionDates", " ", "=", " ", 
         RowBox[{"Drop", "[", 
          RowBox[{"intersectionDates", ",", " ", "1"}], "]"}]}]}], "]"}], ";",
       "\n", "\t", "\n", "\t", 
      RowBox[{"signals", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"DateFromYearPercentual", "[", "#", "]"}], ",", " ", 
            RowBox[{"priceInterpolation", "[", "#", "]"}]}], "}"}], "&"}], 
         ",", " ", "intersectionDates"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"buySignals", " ", "=", " ", 
       RowBox[{"signals", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"-", "1"}], ";;", "2"}], "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"sellSignals", " ", "=", " ", 
       RowBox[{"signals", "[", 
        RowBox[{"[", 
         RowBox[{"2", ";;", 
          RowBox[{"-", "1"}], ";;", "2"}], "]"}], "]"}]}], ";", "\n", "\n", 
      "\t", 
      RowBox[{"operations", " ", "=", " ", 
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"priceInterpolation", "[", "intersectionDates", "]"}], ",", 
         " ", "2"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"return", " ", "=", " ", 
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{"operations", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "-", 
         RowBox[{"operations", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], "]"}]}], ";", "\n",
       "\n", "\t", 
      RowBox[{"result", " ", "=", " ", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<BuySignals\>\"", "->", "buySignals"}], ",", " ", 
         RowBox[{"\"\<SellSignals\>\"", "->", "sellSignals"}], ",", " ", 
         RowBox[{"\"\<Return\>\"", "->", "return"}]}], "|>"}]}], ";", "\n", 
      "\t", 
      RowBox[{"Return", "[", "result", "]"}], ";"}]}], "\n", "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.777399842115972*^9, 3.777399911241643*^9}, 
   3.777401403821994*^9, {3.777401784883412*^9, 3.7774017916376543`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"947ee5d7-ddea-4d5a-89c3-7a87d59871f2"],

Cell[CellGroupData[{

Cell["Idea del algoritmo", "Subsection",
 CellChangeTimes->{{3.777401109005251*^9, 
  3.777401111045497*^9}},ExpressionUUID->"d668494f-ebdd-400b-8f0a-\
5887330195a8"],

Cell["Tomamos 100 muestras de precios.", "Text",
 CellChangeTimes->{{3.777402003202306*^9, 3.777402016547943*^9}, {
  3.781114200123662*^9, 
  3.7811142004510117`*^9}},ExpressionUUID->"9ea65954-9d69-4798-842c-\
832f62a933d9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"market", " ", "=", " ", 
   RowBox[{"First", "[", "database", "]"}]}], ";"}]], "Input",
 CellLabel->"In[43]:=",ExpressionUUID->"cbb481e0-9488-41a6-b1a5-8293263de439"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"datos", " ", "=", " ", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{"market", "[", "\"\<DatedPrices\>\"", "]"}], ",", "100"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.777401124293899*^9, 3.777401159337607*^9}, 
   3.7811140975567636`*^9, {3.781114191809882*^9, 3.7811141921395206`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"8038292a-dc32-4d03-a7f9-bfcc8f8a5d7c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"2003-01-31\"\>", ",", "12.87`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-02-03\"\>", ",", "12.61`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-02-04\"\>", ",", "11.74`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-02-05\"\>", ",", "11.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-02-06\"\>", ",", "11.07`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-02-07\"\>", ",", "10.54`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-02-10\"\>", ",", "10.25`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-02-11\"\>", ",", "10.34`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-02-12\"\>", ",", "9.23`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-02-13\"\>", ",", "8.85`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-02-14\"\>", ",", "9.47`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-02-18\"\>", ",", "9.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-02-19\"\>", ",", "9.35`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-02-20\"\>", ",", "9.4`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-02-21\"\>", ",", "9.66`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-02-24\"\>", ",", "9.23`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-02-25\"\>", ",", "9.33`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-02-26\"\>", ",", "9.24`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-02-27\"\>", ",", "9.7`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-02-28\"\>", ",", "9.65`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-03-03\"\>", ",", "9.52`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-03-04\"\>", ",", "9.26`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-03-05\"\>", ",", "9.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-03-06\"\>", ",", "8.59`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-03-07\"\>", ",", "8.45`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-03-10\"\>", ",", "8.01`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-03-11\"\>", ",", "8.01`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-03-12\"\>", ",", "8.43`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-03-13\"\>", ",", "8.46`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-03-14\"\>", ",", "8.69`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-03-17\"\>", ",", "9.1`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-03-18\"\>", ",", "8.97`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-03-19\"\>", ",", "9.25`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-03-20\"\>", ",", "9.53`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-03-21\"\>", ",", "9.93`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-03-24\"\>", ",", "9.43`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-03-25\"\>", ",", "9.77`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-03-26\"\>", ",", "9.7`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-03-27\"\>", ",", "9.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-03-28\"\>", ",", "9.52`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-03-31\"\>", ",", "9.32`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-04-01\"\>", ",", "9.3`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-04-02\"\>", ",", "9.76`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-04-03\"\>", ",", "10.12`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-04-04\"\>", ",", "9.85`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-04-07\"\>", ",", "10.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-04-08\"\>", ",", "9.79`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-04-09\"\>", ",", "9.6`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-04-10\"\>", ",", "9.82`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-04-11\"\>", ",", "9.7`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-04-14\"\>", ",", "9.99`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-04-15\"\>", ",", "10.08`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-04-16\"\>", ",", "10.12`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-04-17\"\>", ",", "10.15`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-04-21\"\>", ",", "10.24`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-04-22\"\>", ",", "10.77`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-04-23\"\>", ",", "11.35`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-04-24\"\>", ",", "11.08`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-04-25\"\>", ",", "11.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-04-28\"\>", ",", "11.3`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-04-29\"\>", ",", "11.46`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-04-30\"\>", ",", "11.4`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-05-01\"\>", ",", "11.6`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-05-02\"\>", ",", "11.96`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-05-05\"\>", ",", "11.63`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-05-06\"\>", ",", "11.75`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-05-07\"\>", ",", "11.65`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-05-08\"\>", ",", "11.39`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-05-09\"\>", ",", "11.87`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-05-12\"\>", ",", "12.2`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-05-13\"\>", ",", "11.92`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-05-14\"\>", ",", "11.96`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-05-15\"\>", ",", "12.39`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-05-16\"\>", ",", "12.8`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-05-19\"\>", ",", "12.14`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-05-20\"\>", ",", "12.32`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-05-21\"\>", ",", "12.45`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-05-22\"\>", ",", "12.88`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-05-23\"\>", ",", "13.06`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-05-27\"\>", ",", "13.26`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-05-28\"\>", ",", "13.2`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-05-29\"\>", ",", "13.22`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-05-30\"\>", ",", "13.75`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-06-02\"\>", ",", "13.7`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-06-03\"\>", ",", "13.41`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-06-04\"\>", ",", "13.64`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-06-05\"\>", ",", "13.56`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-06-06\"\>", ",", "13.85`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-06-09\"\>", ",", "13.87`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-06-10\"\>", ",", "14.01`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-06-11\"\>", ",", "14.31`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-06-12\"\>", ",", "14.17`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-06-13\"\>", ",", "13.74`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-06-16\"\>", ",", "14.28`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-06-17\"\>", ",", "14.35`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-06-18\"\>", ",", "14.55`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-06-19\"\>", ",", "14.33`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-06-20\"\>", ",", "14.55`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-06-23\"\>", ",", "13.98`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2003-06-24\"\>", ",", "13.4`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.777401160038438*^9, 3.7811139047918577`*^9, 
  3.781114098018208*^9, 3.78111419368753*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"04fc3e1b-f13b-4571-9dea-5e39d0488148"]
}, Open  ]],

Cell["\<\
Para poder computar una media m\[OAcute]vil es necesario pasar las fechas a \
fechas porcentuales.\
\>", "Text",
 CellChangeTimes->{{3.777402013180151*^9, 
  3.7774020350099154`*^9}},ExpressionUUID->"2b0bfd9f-f7f0-42e3-99f6-\
f5c8d8854c08"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"datosPorcentuales", " ", "=", " ", 
  RowBox[{"MapAt", "[", 
   RowBox[{"YearPercentual", ",", " ", "datos", ",", " ", 
    RowBox[{"{", 
     RowBox[{"All", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.777401181696744*^9, 3.777401187667996*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"5112d94e-2773-4840-b40b-3096684e52d1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2003.0821917808219`", ",", "12.87`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.0904109589042`", ",", "12.61`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.0931506849315`", ",", "11.74`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.0958904109589`", ",", "11.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.0986301369862`", ",", "11.07`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.1013698630136`", ",", "10.54`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.109589041096`", ",", "10.25`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.1123287671232`", ",", "10.34`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.1150684931506`", ",", "9.23`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.1178082191782`", ",", "8.85`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.1205479452055`", ",", "9.47`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.131506849315`", ",", "9.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.1342465753426`", ",", "9.35`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.13698630137`", ",", "9.4`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.1397260273973`", ",", "9.66`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.1479452054793`", ",", "9.23`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.150684931507`", ",", "9.33`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.1534246575343`", ",", "9.24`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.1561643835616`", ",", "9.7`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.158904109589`", ",", "9.65`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.1671232876713`", ",", "9.52`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.1698630136987`", ",", "9.26`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.172602739726`", ",", "9.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.1753424657534`", ",", "8.59`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.1780821917807`", ",", "8.45`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.186301369863`", ",", "8.01`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.1890410958904`", ",", "8.01`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.1917808219177`", ",", "8.43`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.194520547945`", ",", "8.46`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.1972602739727`", ",", "8.69`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.2054794520548`", ",", "9.1`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.2082191780821`", ",", "8.97`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.2109589041097`", ",", "9.25`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.213698630137`", ",", "9.53`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.2164383561644`", ",", "9.93`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.2246575342465`", ",", "9.43`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.227397260274`", ",", "9.77`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.2301369863014`", ",", "9.7`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.2328767123288`", ",", "9.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.2356164383561`", ",", "9.52`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.2438356164384`", ",", "9.32`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.2465753424658`", ",", "9.3`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.2493150684932`", ",", "9.76`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.2520547945205`", ",", "10.12`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.2547945205479`", ",", "9.85`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.2630136986302`", ",", "10.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.2657534246575`", ",", "9.79`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.268493150685`", ",", "9.6`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.2712328767122`", ",", "9.82`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.2739726027398`", ",", "9.7`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.282191780822`", ",", "9.99`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.2849315068493`", ",", "10.08`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.2876712328766`", ",", "10.12`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.2904109589042`", ",", "10.15`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.3013698630136`", ",", "10.24`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.304109589041`", ",", "10.77`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.3068493150686`", ",", "11.35`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.309589041096`", ",", "11.08`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.3123287671233`", ",", "11.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.3205479452056`", ",", "11.3`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.323287671233`", ",", "11.46`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.3260273972603`", ",", "11.4`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.3287671232877`", ",", "11.6`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.331506849315`", ",", "11.96`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.3397260273973`", ",", "11.63`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.3424657534247`", ",", "11.75`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.345205479452`", ",", "11.65`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.3479452054794`", ",", "11.39`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.3506849315067`", ",", "11.87`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.358904109589`", ",", "12.2`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.3616438356164`", ",", "11.92`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.3643835616438`", ",", "11.96`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.3671232876711`", ",", "12.39`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.3698630136987`", ",", "12.8`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.3780821917808`", ",", "12.14`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.3808219178081`", ",", "12.32`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.3835616438357`", ",", "12.45`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.386301369863`", ",", "12.88`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.3890410958904`", ",", "13.06`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.4`", ",", "13.26`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.4027397260274`", ",", "13.2`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.4054794520548`", ",", "13.22`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.4082191780822`", ",", "13.75`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.4164383561645`", ",", "13.7`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.4191780821918`", ",", "13.41`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.4219178082192`", ",", "13.64`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.4246575342465`", ",", "13.56`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.427397260274`", ",", "13.85`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.4356164383562`", ",", "13.87`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.4383561643835`", ",", "14.01`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.441095890411`", ",", "14.31`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.4438356164383`", ",", "14.17`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.4465753424658`", ",", "13.74`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.454794520548`", ",", "14.28`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.4575342465753`", ",", "14.35`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.4602739726026`", ",", "14.55`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.4630136986302`", ",", "14.33`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.4657534246576`", ",", "14.55`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.4739726027397`", ",", "13.98`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2003.4767123287672`", ",", "13.4`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.777401188440371*^9, 3.781113913092658*^9, 
  3.781114046463634*^9, 3.7811142591138144`*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"47168391-6481-46ed-bf5e-64adb95b6e57"]
}, Open  ]],

Cell["\<\
Con esto se puede calcular la media m\[OAcute]vil con diferentes ventanas\
\>", "Text",
 CellChangeTimes->{{3.7774020383813553`*^9, 
  3.7774020534938517`*^9}},ExpressionUUID->"01a23003-ab2c-4d03-98a9-\
b410a064dfa8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ma1", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{"DateFromYearPercentual", ",", 
     RowBox[{"MovingAverage", "[", 
      RowBox[{"datosPorcentuales", ",", "20"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "1"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7774019024156513`*^9, 3.777401912500985*^9}, 
   3.777401968464612*^9, {3.781114253500972*^9, 3.781114309724963*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"0cb6c586-ed45-4c30-8db1-7bee9a4cb560"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ma2", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{"DateFromYearPercentual", ",", 
     RowBox[{"MovingAverage", "[", 
      RowBox[{"datosPorcentuales", ",", "40"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "1"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7774019036143503`*^9, 3.777401913445908*^9}, {
  3.781114256860183*^9, 3.7811142716665373`*^9}, {3.78111431450467*^9, 
  3.781114318674515*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"faab589d-f5bd-436a-bf20-8789352159a4"],

Cell["\<\
El usuario puede introducir la media m\[OAcute]vil deseada al algoritmo. Aqu\
\[IAcute] se utiliza la media m\[OAcute]vil st\[AAcute]ndard en la primera \
funci\[OAcute]n y una media m\[OAcute]vil exponencial en la segunda funci\
\[OAcute]n.\
\>", "Text",
 CellChangeTimes->{{3.77740205743147*^9, 
  3.7774021255936937`*^9}},ExpressionUUID->"29d0404d-2e1d-430d-a662-\
19cc5b160f0f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"strategyResults", " ", "=", " ", 
  RowBox[{"CrossoverTrading", "[", "\[IndentingNewLine]", 
   RowBox[{"datos", ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"MovingAverage", "[", 
      RowBox[{"#", ",", "20"}], "]"}], "&"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"MovingAverage", "[", 
      RowBox[{"#", ",", "40"}], "]"}], "&"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.777401823360186*^9, 3.777401875564509*^9}, {
   3.777401931948845*^9, 3.777401945509267*^9}, {3.7774019871159573`*^9, 
   3.777401989550407*^9}, 3.777402107328148*^9, {3.781114055842407*^9, 
   3.781114058053829*^9}, {3.781114102636528*^9, 3.7811141151087437`*^9}, {
   3.781114180377297*^9, 3.7811142091133738`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"075664e4-f3b4-4b5b-98d6-add2b3eea66a"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"BuySignals\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Sun 27 Apr 2003\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2003", ",", "4", ",", "27"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", "11.29392157620669`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Thu 1 May 2003\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2003", ",", "5", ",", "1"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", "11.782671712615288`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Fri 23 May 2003\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2003", ",", "5", ",", "23"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", "13.083976368519567`"}], "}"}]}], "}"}]}], 
   ",", 
   RowBox[{"\<\"SellSignals\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Mon 28 Apr 2003\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2003", ",", "4", ",", "28"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", "11.443203209985663`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{RowBox[{
            StyleBox[
            "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
            "\"Mon 12 May 2003\""}],RowBox[{"DateObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"2003", ",", "5", ",", "12"}], "}"}], ",", "\"Day\"", 
              ",", "\"Gregorian\"", ",", 
              RowBox[{"-", "5.`"}]}], "]"}]},
         "DateObject",
         Editable->False], ",", "11.956234958890564`"}], "}"}]}], "}"}]}], 
   ",", 
   RowBox[{"\<\"Return\"\>", "\[Rule]", "0.32284488005424805`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.77740193645998*^9, 3.777401946281742*^9}, 
   3.777401990384317*^9, 3.7774021124673557`*^9, 3.781114058899432*^9, {
   3.781114103621216*^9, 3.781114115805935*^9}, {3.781114181608189*^9, 
   3.781114210003624*^9}},
 CellLabel->"Out[53]=",ExpressionUUID->"d098bc14-836b-4637-b58a-23df11315320"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MapAt", "[", 
  RowBox[{"DateObject", ",", "datos", ",", 
   RowBox[{"{", 
    RowBox[{"All", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.781114148080216*^9, 3.781114156779788*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"66b2ef76-36e4-42ad-9842-e575f65ec95d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Fri 31 Jan 2003\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2003", ",", "1", ",", "31"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "12.87`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Mon 3 Feb 2003\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2003", ",", "2", ",", "3"}], "}"}], ",", "\"Day\"", ",",
            "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "12.61`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Tue 4 Feb 2003\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2003", ",", "2", ",", "4"}], "}"}], ",", "\"Day\"", ",",
            "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "11.74`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Wed 5 Feb 2003\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2003", ",", "2", ",", "5"}], "}"}], ",", "\"Day\"", ",",
            "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "11.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Thu 6 Feb 2003\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2003", ",", "2", ",", "6"}], "}"}], ",", "\"Day\"", ",",
            "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "11.07`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Fri 7 Feb 2003\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2003", ",", "2", ",", "7"}], "}"}], ",", "\"Day\"", ",",
            "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "10.54`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Mon 10 Feb 2003\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2003", ",", "2", ",", "10"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "10.25`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Tue 11 Feb 2003\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2003", ",", "2", ",", "11"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "10.34`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Wed 12 Feb 2003\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2003", ",", "2", ",", "12"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "9.23`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Thu 13 Feb 2003\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2003", ",", "2", ",", "13"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "8.85`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Fri 14 Feb 2003\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2003", ",", "2", ",", "14"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "9.47`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Tue 18 Feb 2003\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2003", ",", "2", ",", "18"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "9.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Wed 19 Feb 2003\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2003", ",", "2", ",", "19"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "9.35`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Thu 20 Feb 2003\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2003", ",", "2", ",", "20"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "9.4`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Fri 21 Feb 2003\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2003", ",", "2", ",", "21"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "9.66`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Mon 24 Feb 2003\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2003", ",", "2", ",", "24"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "9.23`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Tue 25 Feb 2003\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2003", ",", "2", ",", "25"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "9.33`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Wed 26 Feb 2003\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2003", ",", "2", ",", "26"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "9.24`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Thu 27 Feb 2003\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2003", ",", "2", ",", "27"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "9.7`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Fri 28 Feb 2003\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2003", ",", "2", ",", "28"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "9.65`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7811141436648417`*^9, 3.781114157111607*^9}},
 CellLabel->"Out[49]=",ExpressionUUID->"99f8095d-f8b1-4590-9287-c28dffc618d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"MapAt", "[", 
      RowBox[{"DateObject", ",", "datos", ",", 
       RowBox[{"{", 
        RowBox[{"All", ",", "1"}], "}"}]}], "]"}], ",", "ma1", ",", "ma2", 
     ",", 
     RowBox[{"strategyResults", "[", "\"\<BuySignals\>\"", "]"}], ",", 
     RowBox[{"strategyResults", "[", "\"\<SellSignals\>\"", "]"}]}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Joined", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "True", ",", "False", ",", "False"}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Monochrome\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Date\>\"", ",", "bigFontSize"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Price\>\"", ",", "bigFontSize"}], "]"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Price\>\"", ",", "\"\<MA 20\>\"", ",", "\"\<MA 40\>\"", ",", 
      "\"\<Buy\>\"", ",", "\"\<Sell\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"FontSize", "\[Rule]", "smallFontSize"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"TicksStyle", "\[Rule]", "Large"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Black", ",", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Blue"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Orange"}], "}"}], ",", "Green", ",", "Red"}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotMarkers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "Automatic", ",", "None", ",", "None", ",", "Automatic", ",", 
      "Automatic"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "800"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{
  3.781114164601534*^9, 3.781114247152977*^9, {3.78111432470603*^9, 
   3.78111434073116*^9}, {3.781114418681422*^9, 3.7811144484136353`*^9}, {
   3.781114523611165*^9, 3.781114602999777*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"4e1abdab-bfdf-426e-a946-ff34389b7800"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], FontSize -> 13, 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{}], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1:eJxVlEtoE1EUhgehCAVxFl1Y1Dq1VdPa6mBduDB2kjbvRydJsSgFo/gAQToq
bixKxBe4SYSCtAsJVqUoloAgCoqxLkRpMSrajcKIUCJ1EdFWLAqe+889wgyE
8HHuPY///vc2HxhKH1qmKMpB+ol/+rKXd1Z93vrZcetJm0Fcq/NWfQ+bLs6n
doA1nXi4YTL0+fQmweZeYmcrOHeB+KZFGVo2Ci5NEmN5wwbBRucuuT7XKtga
IEZ4Elw8R7zoGcxPnVovuHKXuEt895sFKx+Ij4sGa4iXz3Zz/Rb0O9HN6xHX
3hHPTIsPbP4lTmMgrLeHDVc99TZxG+HCBNioGDwv2FoiPowP+4utPpk/DtbH
iYV83npwdoaYilFF7C/88nG/Tv/Nfjn/FsxXi/ll/jkNer7yy/114NJPN9tN
PVWfaNfzEaxGiL+JcvNg4ySxUDe0H/kr33ukPl2or6zpZT0R14O9fD6IZy1i
kX5wJeYpjPVyPbDWGGB29O0JyPmvIJ47FnDpVboWcJ2X/Szg0ssygtI/48hX
PEo8Nio+xw8jQdYT65WnQelXL/yjfw3y+SNePhLieojXroakH0ec/h+HWA+w
ORfi+k7/atjVv5oPSz8sgY1HYekXj+PnL2FXP8UVEfYHOPsgwn4CF+wI64X7
Ua6Pcv+4P7XtUc4P1vZFeR7nfn2Ksj5ge3mMzx+sboux/8HGYIznxX21Lv1f
D1bq4lXfczruvB+sb42zH8DZPXGeB1w4TxwWBnuB/OV7cX4/nPehI8H6eaDn
bmIc9yzipVzCVd++k+B8WK++T/B8eH+KmaSMhxCvnEnyeYGViSTfH7D+Ninn
mcL+7B/idTBQO/S81cd+Apuv+7hfcO53n7wfFrjUYrIem6HnDZPXg61pU74v
b7C+uGhyv4hXtBTXByuxFJ83uPAyxfqByz9SfN874Ie1abn/OlgLp6WeA2Dz
RJr9hf12LS3vbx5xdXWG64GNQEbq29iJ/ocy/P4hXhx1x/VV/fK9XED+rL+f
/dVu/AOzPyOo
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], FontSize -> 13, 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{6, 2}], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1:eJw11A1MjHEcB/DEsBZ7RhNmuUQk5kJr5u3+QnFdXQ7DrD3CtOYl85a8neVl
LSbSTNacmU1GmtfC7JiXvN9SooYw/PN6JHnn+/8+j2e73T577v73/f9/3+fC
05dMmR8YEBCQipd6V9eDMVJ8XDs2Nm1WXxuoDxwrxTfXi0P72tEFU+HA6K3d
HpVFKPsPw3O1GSNOZdCW+/Cu91ggjHb+hoX+0tenoY9yeapNCnU7rZhuXAP3
HPK4b/s5tM0H49euWKx01g84ouH7+sxetC9ZSFEZtvltanc6YDXcVuXpTOt3
4Oc5IWUJbeiCVrg3Pl7xJ5x57eOkiE07Nyk4kPctK+Go2Tsut3SknR74eMKz
nBBjvfIvcI0jXZvRw8gbFi/FFiwX1s/IuwzmwVmMvCXwm8iYjkeNvJ7r8LyR
T1O2hxp5e42XYkPmheWFRn7rRHh1E74wyMhbDA9Tl4v2XoHrDmaNDlpF+z/A
8fkLX/8sNfLGTzDXr6Pdi2B1nBtbjLyX4AqeF+ehvYND203vPHgobes20dx/
Iu3JhJPi8oQ+n/bthn2tKMAa2toEv8f2N+fTetcEKX6tVxuivQvg1gFY8LTR
j51woRr4E6MPr+DSa/a4vDbsk1tLlEIbfKLkY3+6cR5sVfmn0doO2KYGto22
VcJxan6XaU+nSVL8rcluivxE++LgKiwvLP2Ydxssf5Z+qnbQ+hn4dNXKi/tz
aG/QZCmC1QEfof3D4c/VGPhD2pkHd9hYFJ8fHMm8J/87iW7sYJfi1oEJZ5rX
0dpQu9mfMjprC1yLeDGS9pTD2Zx3f+att5t9mU1bhyRh/2jPrE20PhPevmdx
l1wP7T0Gj8K499yl/XVw6KO7ra62A9jnQIc5/1jaPd1h9j2dLnfDS0cH1R0s
oLVaOFHFvU7b/sLJqPuIL7THlSzFki653pvhUcy7Du6u+jOFtlbDTgak9V/J
/+dDe50pUmTsRAFaaH8O/BTxiiIG8nzvwVPVA6/T7u8p5vO2l250OKUoUoU/
T2vZTjPPMzrrttP8v+oZzbxf4R+qjy7aZ0mVQh1HUS5tXQGvKMQOymh9P1yP
43txlfY2w2ebf9dk34i2/QPCksfA
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], FontSize -> 13, 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{2, 2}], 
         Thickness[Large], 
         RGBColor[1, 0.5, 0]], 
        LineBox[CompressedData["
1:eJw1031IU1EYBvAhISQmlyyLCNG0UrJckamYtJNNW/ktiJXUEDOzzP0hapJh
REhY+UEoWNJKRCwEyRCV0hlhISRjGNKHOFsfV7ScZVhk1HOe3S6My+/unnOf
9z3nBOeVZJ700ul08fjJOy57qlDFbEZf4JW4EIN8cB7uSpquXONH69tg2+hd
Y69rk3T9Evzlwr6o46O0LXi/KvKUnNhHfXRQGezrta0moJNOt8LrV2T7bb9H
dy/CGD1guk07AxNUUSvMH+2NtGKC5+X8LbSlFT7dgC+209bncHNC7dnPD2jd
xgOqWPd6bCmrh9YnwuWDdzZEPvHkbYFlvBcjnrzPYDld1Bjt/grL8menPXkT
jKp42DrfMfKbri42avP7sx/OYbgmAA9CaGXOqNUbS1sMiarIlPNl0NYi+Gh+
3FRasae/Q/DeqbTrzTc8/Z2Bq2RD+mmzf5Iq5N/n3tO2U/By54IjZXUo8zbA
0VfRMAOd/ilJq6+ArlYOauMbaWc+XPf0R1juEK3Uwb8uFj0uddGGfli2e2Dl
ZuZdZdL6sZO2R5u0fhyj9dfgb46UPKWCNvfCN+UCt9I2n0P/v0e7d8ML8n2V
DjoB+1/Gjlq7hXl74MjJUO9LRrp7Eh4woaPltLLrsCrGMTynkzbkwqFvUcE7
2toN+0y0WeJ9tjLvGzhCLlA0rY9MVkVhgbxo8xF4hyyoibZ1JWv5X9LuCThG
9lcXxv5GpKjiu8wfQ1dnw/WyvhLaeR8eluejjVZewXuwvX0dtCU8VRWLf8Yr
ZrzDmTcLnuN5o+1VcJPcz2dovQOWx8O3kTYvw3J5ywZpW3qaKn5mudpvfaDd
lXBpIXb033DDPxEwYr8=
         "]]}}, {{
        Directive[
         PointSize[0.009166666666666668], FontSize -> 13, 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{}], 
         GrayLevel[0]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               DiskBox[{0, 0}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.009166666666666668], FontSize -> 13, 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], 
                 AbsoluteDashing[{}], 
                 GrayLevel[0]]}, StripOnInput -> False], TraditionalForm]], {
          0., 0.}, Automatic, 
          Offset[6.272]], CompressedData["
1:eJxVlEtoE1EUhkelCAUxiy4sak1t1bS2OlgXLoydpE0m706SYlECRvEBgnRU
3FiUiC9wkwgFaRcyWJWiWAKCKCjGuhClxahoNwoRoUTqIqKtWBQ89597hBmY
xce59zz++9/bfGAwdWiZoigH6V9C/1IFX/byzqrPWz8zZj5p04hrdd6q72HT
xbnkDrBbJR5qmNA/n94k2NhLbG8F5y4Q3zQpQ8tGwcUJYixv2CBY69wl1+da
BZsDxAhPgK1zxAueTH7y1HrB5bvEXeK73yxY+UB8XDRYQ7x0tpvrt6Df8W5e
j7j7HfH0lPjAxl/iFAbC+sqQ5qjnuk3cRjg/DtbKGs8LNheJD+PDfqvVJ/PH
wOoYsZDPWw/OThNTMaqI/YVfPu7X7r/ZL+ffgvlqUb/MP+uGnq/8cn8duPjT
yZWmnqpPtOv5CHaFib+JcnNg7SSxUFffj/zl7z1Sny7UV9b0sp6Iq8FePh/E
syaxSJ9ZiXkKo71cD+xuDDDb+vYE5PxXEM8dCzj0Kl4LOM6r8izg0MvUgtI/
Y8hnHSUeHRGf7YfhIOuJ9crToPSrF/5Rvwb5/BEvHdG5HuK1q7r047Dd/2Od
9QAbszrXt/t3hRz9u/Ih6YdFsPYoJP3isf38JeTox1oRZn+Asw/C7CdwoRJm
vXA/SvUR7h/3p7Y9wvnB7n0Rnse+X58irA+4sjzK5w92bYuy/8FaJsrz4r6a
l/6vByt1sarvOR133g9Wt8bYD+DsnhjPAy6cJw4Jg71A/tK9GL8f9vvQEWf9
PNBzNzGOewbxYi7uqF+5E+d8WO96H+f58P5Y6YSM64iXzyT4vMDKeILvD1h9
m5DzTGJ/9g/xOhioHXre6mM/gY3XfdwvOPe7T94PE1xsMViPzdDzhsHrweaU
Id+XN1hvLRjcL+Jld5Lrg5Voks8bXHiZZP3ApR9Jvu8d8MPalNx/HewOpaSe
A2DjRIr9hf2VWkre3zzirtVprgfWAmmpb2Mn+h9M8/uHuDXijKur+uV7OY/8
WX8/+6td+wfIFyOq
         "]]}, {
        Directive[
         PointSize[0.009166666666666668], FontSize -> 13, 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{6, 2}], 
         Thickness[Large], 
         RGBColor[0, 0, 1]]}, {
        Directive[
         PointSize[0.009166666666666668], FontSize -> 13, 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{2, 2}], 
         Thickness[Large], 
         RGBColor[1, 0.5, 0]]}, {
        Directive[
         PointSize[0.009166666666666668], FontSize -> 13, 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{6, 2, 2, 2}], 
         RGBColor[0, 1, 0]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               PolygonBox[
                
                NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                  1, 1 - 3^Rational[1, 2]}}, {{0, 
                  1}, {-1, -0.7320508075688772}, {
                  1, -0.7320508075688772}}]]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.009166666666666668], FontSize -> 13, 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], 
                 AbsoluteDashing[{6, 2, 2, 2}], 
                 RGBColor[0, 1, 0]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[7.6]], {{{3.2603904*^9, 11.29392157620669}}, {{3.260736*^9, 
         11.782671712615288`}}, {{3.2626368*^9, 13.083976368519567`}}}]}, {
        Directive[
         PointSize[0.009166666666666668], FontSize -> 13, 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{12, 2}], 
         RGBColor[1, 0, 0]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               PolygonBox[
                
                NCache[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                  1, -1 + 3^Rational[1, 2]}}, {{
                  0, -1}, {-1, 0.7320508075688772}, {
                  1, 0.7320508075688772}}]]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.009166666666666668], FontSize -> 13, 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], 
                 AbsoluteDashing[{12, 2}], 
                 RGBColor[1, 0, 0]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[7.68]], {{{3.2604768*^9, 11.443203209985663`}}, {{
         3.2616864*^9, 11.956234958890564`}}}]}}, {{
        Directive[
         PointSize[0.009166666666666668], FontSize -> 13, 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{}], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.009166666666666668], FontSize -> 13, 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{6, 2}], 
         Thickness[Large], 
         RGBColor[0, 0, 1]]}, {
        Directive[
         PointSize[0.009166666666666668], FontSize -> 13, 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{2, 2}], 
         Thickness[Large], 
         RGBColor[1, 0.5, 0]]}, {
        Directive[
         PointSize[0.009166666666666668], FontSize -> 13, 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{6, 2, 2, 2}], 
         RGBColor[0, 1, 0]]}, {
        Directive[
         PointSize[0.009166666666666668], FontSize -> 13, 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{12, 2}], 
         RGBColor[
         1, 0, 0]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.009166666666666668], FontSize -> 13, 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{}], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.009166666666666668], FontSize -> 13, 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{6, 2}], 
         Thickness[Large], 
         RGBColor[0, 0, 1]]}, {
        Directive[
         PointSize[0.009166666666666668], FontSize -> 13, 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{2, 2}], 
         Thickness[Large], 
         RGBColor[1, 0.5, 0]]}, {
        Directive[
         PointSize[0.009166666666666668], FontSize -> 13, 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{6, 2, 2, 2}], 
         RGBColor[0, 1, 0]]}, {
        Directive[
         PointSize[0.009166666666666668], FontSize -> 13, 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{12, 2}], 
         RGBColor[
         1, 0, 0]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.25296*^9, 7.6466666666666665`}, AxesStyle -> 
     GrayLevel[0], BaseStyle -> (FontSize -> 13), DisplayFunction :> Identity,
      Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         StyleBox["\"Price\"", 15, StripOnInput -> False], TraditionalForm], 
        None}, {
        FormBox[
         StyleBox["\"Date\"", 15, StripOnInput -> False], TraditionalForm], 
        None}}, FrameStyle -> GrayLevel[0], 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     FrameTicksStyle -> GrayLevel[0], GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> 800, 
     LabelStyle -> {FontFamily -> "Helvetica", 
       GrayLevel[0]}, 
     Method -> {
      "NoShowPlotTheme" -> "Monochrome", "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.25296*^9, 3.2654016*^9}, {7.6466666666666665`, 14.55}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {{}, Automatic}, TicksStyle -> Large}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Price\"", "\"MA 20\"", "\"MA 40\"", "\"Buy\"", "\"Sell\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 13, 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    GrayLevel[0]], {
                    LineBox[{{0, 6.272}, {40, 6.272}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 13, 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    GrayLevel[0]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 13, 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    GrayLevel[0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 6.272}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.08426020408163262] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 13, 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 13, 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 13, 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{2, 2}], 
                    Thickness[Large], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 13, 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{2, 2}], 
                    Thickness[Large], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 13, 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2, 2, 2}], 
                    RGBColor[0, 1, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 13, 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2, 2, 2}], 
                    RGBColor[0, 1, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 7.6}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.002105263157894735] -> 
                    Baseline)], #4}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 13, 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{12, 2}], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}}, {{
                    0, -1}, {-1, 0.7320508075688772}, {
                    1, 0.7320508075688772}}]]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 13, 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{12, 2}], 
                    RGBColor[1, 0, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 7.68}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.006354166666666661] -> 
                    Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Helvetica", 
          GrayLevel[0]}, Background -> Automatic, StripOnInput -> False], 
        TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "13"}], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", "}"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "13"}], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"6", ",", "2"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "13"}], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "13"}], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"6", ",", "2", ",", "2", ",", "2"}], "}"}], "]"}],
                    ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "13"}], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"12", ",", "2"}], "}"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "6.272`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}], ",", 
                    RowBox[{"Offset", "[", "7.6`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}}, {{
                    0, -1}, {-1, 0.7320508075688772}, {
                    1, 0.7320508075688772}}]]}], ",", 
                    RowBox[{"Offset", "[", "7.68`", "]"}]}], "}"}]}], "}"}]}],
            ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "False", ",", 
                 "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False]}], 
               "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.781114124856621*^9, 3.7811141659697847`*^9, 3.781114217905321*^9, {
   3.781114326748281*^9, 3.781114341439842*^9}, 3.781114449007551*^9, {
   3.781114538593557*^9, 3.7811146035778008`*^9}},
 CellLabel->"Out[76]=",ExpressionUUID->"bdb756e0-f9a8-4a97-abcc-7bf94343c97b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Prueba de estrategia SMA en componentes del S&P 500.", "Subsection",
 CellChangeTimes->{{3.781640847453803*^9, 
  3.781640867421687*^9}},ExpressionUUID->"397582b5-8a7f-4f16-9b4d-\
8928e9d2914e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SaveKernelState", "[", 
    RowBox[{"path_:", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        RowBox[{"StringJoin", "[", 
         RowBox[{
          RowBox[{"FileBaseName", "[", 
           RowBox[{"NotebookFileName", "[", "]"}], "]"}], ",", 
          "\"\<_state.mx\>\""}], "]"}]}], "}"}], "]"}]}], "]"}], ":=", 
   RowBox[{"DumpSave", "[", 
    RowBox[{"path", ",", "\"\<Global`\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LoadKernelState", "[", 
    RowBox[{"path_:", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        RowBox[{"StringJoin", "[", 
         RowBox[{
          RowBox[{"FileBaseName", "[", 
           RowBox[{"NotebookFileName", "[", "]"}], "]"}], ",", 
          "\"\<_state.mx\>\""}], "]"}]}], "}"}], "]"}]}], "]"}], ":=", 
   RowBox[{"Get", "[", "path", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.726158062913878*^9, 3.7261581680131493`*^9}, {
  3.726410260529633*^9, 3.72641026447418*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"0111f582-e87e-45f4-95b3-935cc3e3a096"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CrossoverSMAReturns", "[", 
    RowBox[{"marketIndex_", ",", "maWindow1_", ",", "maWindow2_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"CrossoverTrading", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"database", "[", 
        RowBox[{"[", "marketIndex", "]"}], "]"}], "[", "\"\<DatedPrices\>\"", 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"MovingAverage", "[", 
        RowBox[{"#", ",", "maWindow1"}], "]"}], "&"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"MovingAverage", "[", 
        RowBox[{"#", ",", "maWindow2"}], "]"}], "&"}]}], 
     "\[IndentingNewLine]", "]"}], "[", "\"\<Return\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TradeInMarket", "[", 
    RowBox[{"maWindow1_", ",", "maWindow2_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "i", "}"}], ",", 
     RowBox[{"ProgressParallelTable", "[", 
      RowBox[{
       RowBox[{"CrossoverSMAReturns", "[", 
        RowBox[{"i", ",", "maWindow1", ",", "maWindow2"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "database", "]"}]}], "}"}]}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ProbabilityOfPositive", "[", "data_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "x", "}"}], ",", 
     RowBox[{"Probability", "[", 
      RowBox[{
       RowBox[{"x", ">", "0"}], ",", 
       RowBox[{"x", "\[Distributed]", 
        RowBox[{"EmpiricalDistribution", "[", "data", "]"}]}]}], "]"}]}], 
    "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.781114625125271*^9, 3.781114787599972*^9}, {
  3.781114838855187*^9, 3.7811148603443937`*^9}, {3.781114897856381*^9, 
  3.781114931543798*^9}, {3.781115001211359*^9, 3.7811150491880283`*^9}, {
  3.781115425455957*^9, 3.781115439716359*^9}, {3.781116701325616*^9, 
  3.781116701641658*^9}, {3.7816401450316963`*^9, 3.7816401675605164`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"10cce47a-763e-4d6f-b76e-a1e1a134a3fe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tradingResults", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"w1", ",", "w2", ",", 
       RowBox[{"TradeInMarket", "[", 
        RowBox[{"w1", ",", "w2"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"w1", ",", "10", ",", "200", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"w2", ",", 
       RowBox[{"w1", "+", "10"}], ",", "200", ",", "10"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7811147971918497`*^9, 3.7811147980079527`*^9}, {
  3.7811161703367043`*^9, 3.781116229416831*^9}, {3.78111627233358*^9, 
  3.7811162771734962`*^9}, {3.7811167060015593`*^9, 3.781116706225613*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"3d4db97a-d798-4f12-a1dd-b025f7eb74e8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SaveKernelState", "[", "]"}]], "Input",
 CellChangeTimes->{{3.781123044114147*^9, 3.781123044218051*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"cc99d564-df7c-4638-9095-00a3208e7ae4"],

Cell[BoxData[
 RowBox[{"{", "\<\"Global`\"\>", "}"}]], "Output",
 CellChangeTimes->{3.7811974150349083`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"55d6a031-b1da-430c-80aa-f8d9842ef334"]
}, Open  ]],

Cell["Probabilidad de retorno positivo", "Text",
 CellChangeTimes->{{3.781640895500815*^9, 
  3.7816409003012743`*^9}},ExpressionUUID->"4d1c1d8a-8edc-4732-97a5-\
fc028ad6e134"],

Cell[BoxData[
 RowBox[{
  RowBox[{"probabilityOfEarning", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"MapAt", "[", 
       RowBox[{"ProbabilityOfPositive", ",", "#", ",", 
        RowBox[{"{", 
         RowBox[{"All", ",", "3"}], "}"}]}], "]"}], "&"}], ",", 
     RowBox[{"DeleteCases", "[", 
      RowBox[{"tradingResults", ",", 
       RowBox[{"{", "}"}]}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.781640191289702*^9, 3.781640294566986*^9}, {
  3.781640327077525*^9, 3.781640345406891*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"acbb5254-86e9-4ca8-b3e8-0ac170feef87"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sparseArray", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "10"], "\[Rule]", 
         RowBox[{"#", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "&"}], ",", 
       "probabilityOfEarning", ",", 
       RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.781640724320956*^9, 3.781640729183442*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"b7c28bb4-4701-4b8f-beea-02b36503f48d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"array", " ", "=", " ", 
   RowBox[{"SparseArray", "[", 
    RowBox[{"Select", "[", 
     RowBox[{"sparseArray", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Last", "[", "#", "]"}], ">", "0.5"}], "&"}]}], "]"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.781640730769511*^9, 3.781640753216407*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"be376a55-f47f-493b-978e-b483c97d4cc3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixPlot", "[", 
  RowBox[{"array", ",", "\[IndentingNewLine]", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Probabilidad de retorno positivo\>\"", ",", "bigFontSize", ",", 
      "Black"}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Monochrome\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<W1 (%10)\>\"", ",", "bigFontSize"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<W2 (%10)\>\"", ",", "bigFontSize"}], "]"}]}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.781640491186904*^9, 3.781640494707615*^9}, {
  3.781640538901626*^9, 3.781640543490726*^9}, {3.781641008389636*^9, 
  3.78164115420638*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"a82c05a2-78cc-4b1d-ba1f-972caad9f073"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    RasterBox[CompressedData["
1:eJztWHlMk2ccRkVwCkRFxQ4vGAIbh26KhCn+5NQ4doljOpehwNCJpmgkOjkr
OjyQwFAEFBUkNOKGKA4Xz0KBtrQgDBGUw0IpCt+LByCodXEs+/tZ8iUu1IU/
mjRP3rzHc/ze3/tZBQlXfT/GwMDAfOg3Zej39//mq0bRXVvV5LFi2nzRuge0
Whvpa72wmUbwtwv/5IdzEVsDGBWfPDLpveZ6kmxau0lYUq53+xzB/x0XWHu5
Okk4Gti737suu5KaWk7pcnNK6YKqwLxWwygl8nWJiFqIXMRnmvLkerf/Efwf
HOmFcrpnX8cxw9uM3Gwy5rYubibZgFtLqseIvsONj5Obi1bGMVqiXDbd5FUD
lXvmdtSkVZBNwPzJ024y+tPUK6fLoYnkB6bM1tyRUY/b4OMYD0a79y9Nclbd
phLdgvwbAeW0cVBm5HaUUVRb2nEDk7tUcV6RIxol07vz/l/xpPFem5MdGbls
fzj+42t1dCPJjJmyMrLp/9Gxx4JRlmBqw+Rf/qBshfcFvz1llJ8eqFsXxujV
pe4jFuwOldXH2M5xrIDzIN31jYe3HUc5El18MOpKLUeN4gjblRUqcl1m5586
Wkqr6uYfq+vnqGzA7tnxhBpihotGh5dKqdw2KtEun9H1QTbrmeU9ks14vP6j
LTLq9kxU+Wo4yqsMGlfSXU3JOQX5oiApxPWNn7cFR33O8lEvs82zOPKhgjjt
mgqyFaT4ydtLqFvlbhMl5Cgnw65hilxCspBtr1O6JFSYcnLL6QKO7IOOB30b
Lac9kdNziz1LoR9QTpFP9I03fcOvBtdvWG/EyGH/rNCGjFry2Xh97XfWZbBO
In2RjjmywJnW8RzFnMiKm+0spUmD8rPPV5fA+ZGv0Hh943O4cFTfUF867ZX4
zCX1UB2+YLVO1NdK9tpDDnf8FDBH6J5F41GfjMaj+1rfeB6uuppR9tRA581o
Qa/sy9jnGsqckRgRzqlIkZobZnuf0TbVRTtR1X2a6R4jrDulgLoHh5xr8mxn
9FNacpJI0EoLD2c8aHwhh/zz7YcRjvyjb/y/KRzpwhdH7xeUL6Qjes8iP/ge
TPUPbGB08n1vc4lxO2n73aTlS5VwfrRPfdOFL474Qf0nX57V32RKI+8xOmtW
5CtxaiOd91eLlemV8H2K1kXzI13QPiMdshektzAq6rPaLfFX0+Sj4UU1vQq4
rr7phXDkZ8T/c6tky9p6RoLLiS9u7mine36OxtIUJeQztTftUE8jI5sTOkdJ
Zhs9ObE8Vs5Vkk9ma/iWvYxWZYsfXQ7WUKxxm7IvWAX1QvMgXVCdR/oiHPlN
33Q08s/viXbmaGJeNfkotaTeV1hoM9TvSNfqVnjOZXTm3TVjNJ4dZC/eUOk8
rwryieqt5dh6+7m5jNp3WbivFmioN2rCTpc5KoijeZDuT4VKdYuU0fYvEg49
qW6nkF4X653NSrhP5E9naZbunWZGzqLN6yUSNRn3BA1W+fCvG8OlI8qXxV6z
uzVajuLDdoXmN3SQ1zWTHeeKq2B+0TwoL3xzinyF1hXOe/h7UQgjqcL1tGWB
hkx/Lp5zUYz9g86LxiMekK/+ax2RP9H+oy63uddt4sgh70Bo3mktxSfUuk1I
r4bn4psv5POeR4YpB8YyMvd6eMn3cAf99qHr7J7tVRBH50L1Fu0T+QTphXhD
531TOvL9/ob4QblDdQnlBfkB8cP3vkbzLzNI2HEkh6NT7a6SgAgtvdzdLPbw
rYbvZXQu5BPUtyP/8NWx/6DTfUFjF8V93T9PWN5J403OjzMMrYG5Qz7k25ci
3ZG+6P5C9Ra9fy3Coh0/LeXI6YrYrO8DLYU9MfKPH10N/YDy/uuGgUyXzm4S
HCxfNNWgk2IXd05Sf34L9ksoj3z9j3REuggmTig1jewmkf2LwcDPOsn7av+S
ws5b0Ld86zPiB50LfR9A9yzSkW8dRnlEuiC/8e2r0brIJ38ByUllSg==
     "], {{0, 0}, {
     20, 19}}, {0, 1}], BaseStyle -> GrayLevel[0], Frame -> True, FrameLabel -> {
      FormBox[
       StyleBox["\"W2 (%10)\"", 15, StripOnInput -> False], TraditionalForm], 
      
      FormBox[
       StyleBox["\"W1 (%10)\"", 15, StripOnInput -> False], TraditionalForm]},
     FrameStyle -> GrayLevel[0], FrameTicks -> {{{{18.5, 
         FormBox["1", TraditionalForm]}, {14.5, 
         FormBox["5", TraditionalForm]}, {9.5, 
         FormBox["10", TraditionalForm]}, {4.5, 
         FormBox["15", TraditionalForm]}, {0.5, 
         FormBox["19", TraditionalForm]}}, {{18.5, 
         FormBox["1", TraditionalForm]}, {14.5, 
         FormBox["5", TraditionalForm]}, {9.5, 
         FormBox["10", TraditionalForm]}, {4.5, 
         FormBox["15", TraditionalForm]}, {0.5, 
         FormBox["19", TraditionalForm]}}}, {{{0.5, 
         FormBox["1", TraditionalForm]}, {4.5, 
         FormBox["5", TraditionalForm]}, {9.5, 
         FormBox["10", TraditionalForm]}, {14.5, 
         FormBox["15", TraditionalForm]}, {19.5, 
         FormBox["20", TraditionalForm]}}, {{0.5, 
         FormBox["1", TraditionalForm]}, {4.5, 
         FormBox["5", TraditionalForm]}, {9.5, 
         FormBox["10", TraditionalForm]}, {14.5, 
         FormBox["15", TraditionalForm]}, {19.5, 
         FormBox["20", TraditionalForm]}}}}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], 
    Method -> {
     "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
      "RangePadding" -> Scaled[0.05]}, PlotLabel -> FormBox[
      StyleBox["\"Probabilidad de retorno positivo\"", 15, 
       GrayLevel[0], StripOnInput -> False], TraditionalForm]],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             RasterBox[CompressedData["
1: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
SNZ8QrWL53TM8Cf8H3TxvM4=
              "], {{
                Rational[-15, 2], (-180)/GoldenRatio}, {
                Rational[15, 2], 180/GoldenRatio}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], (-180)/GoldenRatio}, {
                  Rational[-15, 2], (-180)/GoldenRatio}, {
                  Rational[-15, 2], 180/GoldenRatio}, {
                  Rational[15, 2], 180/GoldenRatio}, {
                  Rational[15, 2], (-180)/GoldenRatio}}, {{
                7.5, -111.24611797498106`}, {-7.5, -111.24611797498106`}, \
{-7.5, 111.24611797498106`}, {7.5, 111.24611797498106`}, {
                7.5, -111.24611797498106`}}]]}, {
              CapForm[None], {}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                
                LineBox[{{7.5, -111.24611797498106`}, {7.5, 
                 111.24611797498105`}}], 
                Directive[
                 AbsoluteThickness[0.2], 
                 Opacity[0.3], 
                 GrayLevel[0]], StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{7.5, -111.24611797498106`}, 
                    Offset[{4., 0}, {7.5, -111.24611797498106`}]}, {{
                    7.5, -66.85754349409982}, 
                    Offset[{4., 0}, {7.5, -66.85754349409982}]}, {{
                    7.5, -22.46896901321847}, 
                    Offset[{4., 0}, {7.5, -22.46896901321847}]}, {{7.5, 
                    21.919605467662876`}, 
                    Offset[{4., 0}, {7.5, 21.919605467662876`}]}, {{7.5, 
                    66.30817994854416}, 
                    Offset[{4., 0}, {7.5, 66.30817994854416}]}, {{7.5, 
                    110.69675442942551`}, 
                    Offset[{4., 0}, {7.5, 110.69675442942551`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -111.24611797498106`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.16\"", 0.16, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -66.85754349409982}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.32\"", 0.32, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -22.46896901321847}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.48\"", 0.48, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 21.919605467662876`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.64\"", 0.64, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 66.30817994854416}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.80\"", 0.8, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 110.69675442942551`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                   StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                 False], {
                 Directive[
                  AbsoluteThickness[0.2], 
                  GrayLevel[0.4]]}, StripOnInput -> False]}, "GraphicsAxes", 
              StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
            PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], ImageSize -> 
            NCache[{Automatic, 360/GoldenRatio}, {
              Automatic, 222.49223594996212`}], BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"Rainbow\"", ",", "#1"}], "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.5`", ",", "1.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", 
             FractionBox["360", "GoldenRatio"]}], ",", 
           RowBox[{"Ticks", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"0.599753086419753`", ",", "0.16`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.6995061728395061`", ",", "0.32`"}], "}"}], ",", 
                 
                 RowBox[{"{", 
                   RowBox[{"0.7992592592592591`", ",", "0.48`"}], "}"}], ",", 
                 
                 RowBox[{"{", 
                   RowBox[{"0.8990123456790122`", ",", "0.64`"}], "}"}], ",", 
                 
                 RowBox[{"{", 
                   RowBox[{"0.5`", ",", "0.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.9987654320987652`", ",", "0.8`"}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"\"PinningPoint\"", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"\"SmoothRange\"", "\[Rule]", "False"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.781641026593503*^9, 3.7816411546720047`*^9}},
 CellLabel->"Out[94]=",ExpressionUUID->"08460c59-4bcd-4147-87d9-723dd719c57a"]
}, Open  ]],

Cell["Media", "Text",
 CellChangeTimes->{{3.781640903149105*^9, 
  3.781640903660684*^9}},ExpressionUUID->"0139049d-ad77-477b-8698-\
946257eb7868"],

Cell[BoxData[
 RowBox[{
  RowBox[{"returnMean", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"MapAt", "[", 
       RowBox[{"Mean", ",", "#", ",", 
        RowBox[{"{", 
         RowBox[{"All", ",", "3"}], "}"}]}], "]"}], "&"}], ",", 
     RowBox[{"DeleteCases", "[", 
      RowBox[{"tradingResults", ",", 
       RowBox[{"{", "}"}]}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.781640911557261*^9, 3.78164092887317*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"38909abf-3150-4d39-bb10-d1b9e022ada2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"meanSparseArray", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "10"], "\[Rule]", 
         RowBox[{"#", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "&"}], ",", "returnMean", ",", 
       RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.781640956244156*^9, 3.781640960774108*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"9105f43d-78cd-427e-8d9f-9141274e9f33"],

Cell[BoxData[
 RowBox[{
  RowBox[{"meanArray", " ", "=", " ", 
   RowBox[{"SparseArray", "[", "meanSparseArray", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.781640969452944*^9, 3.781640972115562*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"0d6e876e-ac23-414a-9891-ce94a7cf95dc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixPlot", "[", 
  RowBox[{"meanArray", ",", "\[IndentingNewLine]", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Media de los retornos\>\"", ",", "bigFontSize", ",", "Black"}], 
     "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Monochrome\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<W1 (%10)\>\"", ",", "bigFontSize"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<W2 (%10)\>\"", ",", "bigFontSize"}], "]"}]}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{
  3.7816409761171494`*^9, {3.7816411655196457`*^9, 3.7816411758858423`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"f36ba947-5b3c-43be-bf01-3c069dcee3a3"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    RasterBox[CompressedData["
1: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
5hemS1bjvwCgoDKn
     "], {{0, 0}, {20, 19}}, {0, 1}], BaseStyle -> 
    GrayLevel[0], Frame -> True, FrameLabel -> {
      FormBox[
       StyleBox["\"W2 (%10)\"", 15, StripOnInput -> False], TraditionalForm], 
      
      FormBox[
       StyleBox["\"W1 (%10)\"", 15, StripOnInput -> False], TraditionalForm]},
     FrameStyle -> GrayLevel[0], FrameTicks -> {{{{18.5, 
         FormBox["1", TraditionalForm]}, {14.5, 
         FormBox["5", TraditionalForm]}, {9.5, 
         FormBox["10", TraditionalForm]}, {4.5, 
         FormBox["15", TraditionalForm]}, {0.5, 
         FormBox["19", TraditionalForm]}}, {{18.5, 
         FormBox["1", TraditionalForm]}, {14.5, 
         FormBox["5", TraditionalForm]}, {9.5, 
         FormBox["10", TraditionalForm]}, {4.5, 
         FormBox["15", TraditionalForm]}, {0.5, 
         FormBox["19", TraditionalForm]}}}, {{{0.5, 
         FormBox["1", TraditionalForm]}, {4.5, 
         FormBox["5", TraditionalForm]}, {9.5, 
         FormBox["10", TraditionalForm]}, {14.5, 
         FormBox["15", TraditionalForm]}, {19.5, 
         FormBox["20", TraditionalForm]}}, {{0.5, 
         FormBox["1", TraditionalForm]}, {4.5, 
         FormBox["5", TraditionalForm]}, {9.5, 
         FormBox["10", TraditionalForm]}, {14.5, 
         FormBox["15", TraditionalForm]}, {19.5, 
         FormBox["20", TraditionalForm]}}}}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], 
    Method -> {
     "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
      "RangePadding" -> Scaled[0.05]}, PlotLabel -> FormBox[
      StyleBox["\"Media de los retornos\"", 15, 
       GrayLevel[0], StripOnInput -> False], TraditionalForm]],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             RasterBox[CompressedData["
1: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
SNZ8QrWL53TM8Cf8H3TxvM4=
              "], {{
                Rational[-15, 2], (-180)/GoldenRatio}, {
                Rational[15, 2], 180/GoldenRatio}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], (-180)/GoldenRatio}, {
                  Rational[-15, 2], (-180)/GoldenRatio}, {
                  Rational[-15, 2], 180/GoldenRatio}, {
                  Rational[15, 2], 180/GoldenRatio}, {
                  Rational[15, 2], (-180)/GoldenRatio}}, {{
                7.5, -111.24611797498106`}, {-7.5, -111.24611797498106`}, \
{-7.5, 111.24611797498106`}, {7.5, 111.24611797498106`}, {
                7.5, -111.24611797498106`}}]]}, {
              CapForm[None], {}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                
                LineBox[{{7.5, -111.24611797498106`}, {7.5, 
                 111.24611797498105`}}], 
                Directive[
                 AbsoluteThickness[0.2], 
                 Opacity[0.3], 
                 GrayLevel[0]], StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{7.5, -111.24611797498106`}, 
                    Offset[{4., 0}, {7.5, -111.24611797498106`}]}, {{
                    7.5, -73.72520448087121}, 
                    Offset[{4., 0}, {7.5, -73.72520448087121}]}, {{
                    7.5, -36.204290986761436`}, 
                    Offset[{4., 0}, {7.5, -36.204290986761436`}]}, {{7.5, 
                    1.3166225073483417`}, 
                    Offset[{4., 0}, {7.5, 1.3166225073483417`}]}, {{7.5, 
                    38.837536001458176`}, 
                    Offset[{4., 0}, {7.5, 38.837536001458176`}]}, {{7.5, 
                    72.18945910733353}, 
                    Offset[{4., 0}, {7.5, 72.18945910733353}]}, {{7.5, 
                    109.71037260144337`}, 
                    Offset[{4., 0}, {7.5, 109.71037260144337`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -111.24611797498106`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["9", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -73.72520448087121}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["18", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -36.204290986761436`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["27", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 1.3166225073483417`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["36", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 38.837536001458176`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["44", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 72.18945910733353}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["53", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 109.71037260144337`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                   StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                 False], {
                 Directive[
                  AbsoluteThickness[0.2], 
                  GrayLevel[0.4]]}, StripOnInput -> False]}, "GraphicsAxes", 
              StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
            PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], ImageSize -> 
            NCache[{Automatic, 360/GoldenRatio}, {
              Automatic, 222.49223594996212`}], BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"Rainbow\"", ",", "#1"}], "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.5`", ",", "1.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", 
             FractionBox["360", "GoldenRatio"]}], ",", 
           RowBox[{"Ticks", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"0.5843196018366865`", ",", "9.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.6686392036733729`", ",", "18.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.7529588055100593`", ",", "27.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.8372784073467459`", ",", "36.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.9122291645349115`", ",", "44.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.5`", ",", "0.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.9965487663715981`", ",", "53.`"}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"\"PinningPoint\"", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"\"SmoothRange\"", "\[Rule]", "False"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.781640976647009*^9, 3.7816411763402357`*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"c08f5f44-2757-4531-b102-9a31600548a1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1538, 833},
WindowMargins->{{0, Automatic}, {0, Automatic}},
FrontEndVersion->"12.0 for Linux x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info-136c4867-2782-48d1-b6af-30079f2b3532"->{
  Cell[36764, 849, 10987, 268, 89, "Print",ExpressionUUID->"0edb7e62-49c2-48c7-9543-54a490746bb3",
   CellTags->"Info-136c4867-2782-48d1-b6af-30079f2b3532"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info-136c4867-2782-48d1-b6af-30079f2b3532", 195422, 4498}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 239, 4, 99, "Title",ExpressionUUID->"43b831dd-9380-4570-8c05-05f3288b120c"],
Cell[CellGroupData[{
Cell[844, 30, 166, 3, 70, "Chapter",ExpressionUUID->"ae9a1b2b-8fcc-49c9-802c-32690bff9bdf"],
Cell[1013, 35, 3853, 74, 213, "Input",ExpressionUUID->"9ce68d2d-e508-4460-8bed-94bb1ae32a6d",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[4891, 113, 267, 4, 55, "Subsection",ExpressionUUID->"12ca49e4-3935-4b83-8343-d0bb4e5649db"],
Cell[CellGroupData[{
Cell[5183, 121, 139, 2, 31, "Input",ExpressionUUID->"59beb081-dcf7-43c0-8846-e231cb53299b"],
Cell[5325, 125, 10984, 254, 184, "Output",ExpressionUUID->"df75c713-92ee-47e0-90ef-f5f1154427da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16346, 384, 186, 3, 31, "Input",ExpressionUUID->"cb496632-c25b-46cd-8244-e4e933bd96c3"],
Cell[16535, 389, 20226, 458, 368, "Output",ExpressionUUID->"b1dd4bfa-e889-40f3-aa1c-c0b19d889e35"],
Cell[36764, 849, 10987, 268, 89, "Print",ExpressionUUID->"0edb7e62-49c2-48c7-9543-54a490746bb3",
 CellTags->"Info-136c4867-2782-48d1-b6af-30079f2b3532"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[47812, 1124, 207, 4, 70, "Chapter",ExpressionUUID->"5cc92109-5078-4b33-9581-462906b374da"],
Cell[48022, 1130, 411, 10, 47, "Input",ExpressionUUID->"41a03ed3-cc44-4089-b0af-8fbfee8b287e",
 InitializationCell->True],
Cell[48436, 1142, 1375, 26, 71, "Input",ExpressionUUID->"857b1afa-f812-49ea-9b91-0ec6c50440ec",
 InitializationCell->True],
Cell[49814, 1170, 325, 9, 47, "Input",ExpressionUUID->"a945fed5-8709-4704-952f-b1479840fde7",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[50176, 1184, 215, 4, 70, "Chapter",ExpressionUUID->"5eaae94e-1e68-48c4-8231-1a6f4f2cdf02"],
Cell[50394, 1190, 243, 4, 36, "Text",ExpressionUUID->"e6879fdf-6bf8-4ea1-8fb6-31b0b864bb77"],
Cell[50640, 1196, 2581, 68, 274, "Code",ExpressionUUID->"e39654f6-1f97-45a1-bdd9-1aab9a194383"],
Cell[53224, 1266, 238, 4, 36, "Text",ExpressionUUID->"b71f47ca-977c-4de9-9918-0073eefb754b"],
Cell[53465, 1272, 11646, 295, 1198, "Code",ExpressionUUID->"947ee5d7-ddea-4d5a-89c3-7a87d59871f2"],
Cell[CellGroupData[{
Cell[65136, 1571, 166, 3, 55, "Subsection",ExpressionUUID->"d668494f-ebdd-400b-8f0a-5887330195a8"],
Cell[65305, 1576, 225, 4, 36, "Text",ExpressionUUID->"9ea65954-9d69-4798-842c-832f62a933d9"],
Cell[65533, 1582, 201, 4, 31, "Input",ExpressionUUID->"cbb481e0-9488-41a6-b1a5-8293263de439"],
Cell[CellGroupData[{
Cell[65759, 1590, 398, 8, 31, "Input",ExpressionUUID->"8038292a-dc32-4d03-a7f9-bfcc8f8a5d7c"],
Cell[66160, 1600, 8279, 205, 312, "Output",ExpressionUUID->"04fc3e1b-f13b-4571-9dea-5e39d0488148"]
}, Open  ]],
Cell[74454, 1808, 250, 6, 36, "Text",ExpressionUUID->"2b0bfd9f-f7f0-42e3-99f6-f5c8d8854c08"],
Cell[CellGroupData[{
Cell[74729, 1818, 366, 7, 31, "Input",ExpressionUUID->"5112d94e-2773-4840-b40b-3096684e52d1"],
Cell[75098, 1827, 8345, 205, 266, "Output",ExpressionUUID->"47168391-6481-46ed-bf5e-64adb95b6e57"]
}, Open  ]],
Cell[83458, 2035, 227, 5, 36, "Text",ExpressionUUID->"01a23003-ab2c-4d03-98a9-b410a064dfa8"],
Cell[83688, 2042, 529, 11, 31, "Input",ExpressionUUID->"0cb6c586-ed45-4c30-8db1-7bee9a4cb560"],
Cell[84220, 2055, 556, 12, 31, "Input",ExpressionUUID->"faab589d-f5bd-436a-bf20-8789352159a4"],
Cell[84779, 2069, 392, 8, 36, "Text",ExpressionUUID->"29d0404d-2e1d-430d-a662-19cc5b160f0f"],
Cell[CellGroupData[{
Cell[85196, 2081, 851, 16, 124, "Input",ExpressionUUID->"075664e4-f3b4-4b5b-98d6-add2b3eea66a"],
Cell[86050, 2099, 3351, 82, 76, "Output",ExpressionUUID->"d098bc14-836b-4637-b58a-23df11315320"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89438, 2186, 300, 6, 31, "Input",ExpressionUUID->"66b2ef76-36e4-42ad-9842-e575f65ec95d"],
Cell[89741, 2194, 9894, 264, 140, "Output",ExpressionUUID->"99f8095d-f8b1-4590-9287-c28dffc618d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99672, 2463, 2406, 57, 308, "Input",ExpressionUUID->"4e1abdab-bfdf-426e-a946-ff34389b7800"],
Cell[102081, 2522, 41034, 884, 524, "Output",ExpressionUUID->"bdb756e0-f9a8-4a97-abcc-7bf94343c97b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[143164, 3412, 200, 3, 55, "Subsection",ExpressionUUID->"397582b5-8a7f-4f16-9b4d-8928e9d2914e"],
Cell[143367, 3417, 1284, 34, 73, "Input",ExpressionUUID->"0111f582-e87e-45f4-95b3-935cc3e3a096",
 InitializationCell->True],
Cell[144654, 3453, 2172, 54, 186, "Input",ExpressionUUID->"10cce47a-763e-4d6f-b76e-a1e1a134a3fe",
 InitializationCell->True],
Cell[146829, 3509, 785, 18, 31, "Input",ExpressionUUID->"3d4db97a-d798-4f12-a1dd-b025f7eb74e8"],
Cell[CellGroupData[{
Cell[147639, 3531, 208, 3, 31, "Input",ExpressionUUID->"cc99d564-df7c-4638-9095-00a3208e7ae4"],
Cell[147850, 3536, 187, 3, 35, "Output",ExpressionUUID->"55d6a031-b1da-430c-80aa-f8d9842ef334"]
}, Open  ]],
Cell[148052, 3542, 176, 3, 36, "Text",ExpressionUUID->"4d1c1d8a-8edc-4732-97a5-fc028ad6e134"],
Cell[148231, 3547, 626, 15, 31, "Input",ExpressionUUID->"acbb5254-86e9-4ca8-b3e8-0ac170feef87"],
Cell[148860, 3564, 779, 22, 47, "Input",ExpressionUUID->"b7c28bb4-4701-4b8f-beea-02b36503f48d"],
Cell[149642, 3588, 430, 11, 31, "Input",ExpressionUUID->"be376a55-f47f-493b-978e-b483c97d4cc3"],
Cell[CellGroupData[{
Cell[150097, 3603, 1126, 25, 170, "Input",ExpressionUUID->"a82c05a2-78cc-4b1d-ba1f-972caad9f073"],
Cell[151226, 3630, 18751, 359, 383, "Output",ExpressionUUID->"08460c59-4bcd-4147-87d9-723dd719c57a"]
}, Open  ]],
Cell[169992, 3992, 147, 3, 36, "Text",ExpressionUUID->"0139049d-ad77-477b-8698-946257eb7868"],
Cell[170142, 3997, 549, 14, 31, "Input",ExpressionUUID->"38909abf-3150-4d39-bb10-d1b9e022ada2"],
Cell[170694, 4013, 765, 21, 47, "Input",ExpressionUUID->"9105f43d-78cd-427e-8d9f-9141274e9f33"],
Cell[171462, 4036, 283, 5, 31, "Input",ExpressionUUID->"0d6e876e-ac23-414a-9891-ce94a7cf95dc"],
Cell[CellGroupData[{
Cell[171770, 4045, 1052, 24, 170, "Input",ExpressionUUID->"f36ba947-5b3c-43be-bf01-3c069dcee3a3"],
Cell[172825, 4071, 22229, 411, 383, "Output",ExpressionUUID->"c08f5f44-2757-4531-b102-9a31600548a1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

