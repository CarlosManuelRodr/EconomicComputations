(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    276550,       5299]
NotebookOptionsPosition[    271151,       5200]
NotebookOutlinePosition[    271495,       5215]
CellTagsIndexPosition[    271452,       5212]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["MA-Trader", "Title",
 CellChangeTimes->{{3.783279797707006*^9, 
  3.7832797999309807`*^9}},ExpressionUUID->"4a54942e-ffd0-4f7e-a6e5-\
2d237eed6905"],

Cell[CellGroupData[{

Cell["Initialization", "Chapter",
 CellChangeTimes->{{3.78257125686062*^9, 
  3.782571259562874*^9}},ExpressionUUID->"8a9ca2a5-c0f5-47dd-a8e8-\
0872618aa284"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Opciones", " ", "de", " ", "estilo"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"smallFontSize", " ", "=", " ", "13"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bigFontSize", " ", "=", " ", "15"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotSize", " ", "=", " ", "500"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"colors", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"ColorData", "[", "\"\<Legacy\>\"", "]"}], "[", 
        "\"\<IndianRed\>\"", "]"}], ",", "Black", ",", "Blue", ",", 
       RowBox[{
        RowBox[{"ColorData", "[", "\"\<Legacy\>\"", "]"}], "[", 
        "\"\<Olive\>\"", "]"}]}], "}"}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[1]:=",ExpressionUUID->"81215aad-53bf-40ab-b18d-a1a505c87309"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", 
   RowBox[{"\"\<AdvancedMapping`\>\"", ",", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ParentDirectory", "[", 
        RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ",", "\"\<Extra\>\"", 
       ",", "\"\<AdvancedMapping.wl\>\""}], "}"}], "]"}]}], "]"}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.782571793185369*^9, {3.783279998229601*^9, 3.78328000205842*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"abbbb87b-4cd3-44b7-9e28-9da59c70ca1d"],

Cell[CellGroupData[{

Cell["Apple Data", "Subsection",
 CellChangeTimes->{{3.783112559700427*^9, 
  3.783112561532723*^9}},ExpressionUUID->"68e346b3-259b-4e43-85f1-\
eb11ea932d84"],

Cell[BoxData[
 RowBox[{
  RowBox[{"datedPrices", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ParentDirectory", "[", 
        RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ",", 
       "\"\<Datasets\>\"", ",", "\"\<Prices_CSV\>\"", ",", "\"\<S&P500\>\"", 
       ",", "\"\<NASDAQ:AAPL.csv\>\""}], "}"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7829426367674*^9, 3.782942693158263*^9}, {
  3.7832800584528933`*^9, 3.783280106500914*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"6f87622b-4f11-40a5-aec1-3d31827c73f9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "datedPrices", "]"}]], "Input",
 CellChangeTimes->{{3.783112615432469*^9, 3.783112616852375*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"617a9cc4-32ac-4641-b104-8d6a2a69125f"],

Cell[BoxData["3977"], "Output",
 CellChangeTimes->{3.7831126169953203`*^9, 3.78328011145166*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"3113fb73-b50d-456c-81f6-527de11ef388"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["RandomData", "Subsection",
 CellChangeTimes->{{3.7831125637320223`*^9, 
  3.78311256568449*^9}},ExpressionUUID->"c6363a01-c59e-44cb-a829-\
2b0a11d4a26f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"datedPrices", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<MarketData\>\"", 
       ",", "\"\<FAKE\>\"", ",", "\"\<fake_stock.csv\>\""}], "}"}], "]"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.783112648453073*^9, 3.783112654577445*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"ce2217f4-0c75-4e25-927e-293ac8bf0d45"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "datedPrices", "]"}]], "Input",
 CellLabel->"In[35]:=",ExpressionUUID->"3b9882e6-6908-41e5-a925-14da9e77ed87"],

Cell[BoxData["3001"], "Output",
 CellChangeTimes->{3.7831126609668283`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"d9010f93-5c83-43bc-a99c-2451ad228ad6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Market data", "Subsection",
 CellChangeTimes->{{3.7832818359475822`*^9, 
  3.783281837299765*^9}},ExpressionUUID->"b70a467b-2966-49db-bba2-\
cd10279535b8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"files", " ", "=", " ", 
   RowBox[{"FileNames", "[", 
    RowBox[{"\"\<*.csv\>\"", ",", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ParentDirectory", "[", 
         RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ",", 
        "\"\<Datasets\>\"", ",", "\"\<Prices_CSV\>\"", ",", 
        "\"\<S&P500\>\""}], "}"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"database", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Name\>\"", "\[Rule]", 
         RowBox[{"FileBaseName", "[", "#", "]"}]}], ",", 
        RowBox[{"\"\<DatedPrices\>\"", "\[Rule]", 
         RowBox[{"Import", "[", "#", "]"}]}]}], "|>"}], "&"}], ",", "files"}],
     "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.783281862260193*^9, 3.783281947667039*^9}, {
  3.783282047445004*^9, 
  3.783282048404293*^9}},ExpressionUUID->"8b73b6c4-fd8e-49cd-86a3-\
62a277a9f070"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"path", " ", "=", " ", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ",", 
      "\"\<Datasets\>\"", ",", "\"\<Prices\>\"", ",", "\"\<sp500v3.wdx\>\""}],
      "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"database", " ", "=", " ", 
   RowBox[{"Import", "[", "path", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.725908928874539*^9, {3.7386112566008368`*^9, 3.7386112689098263`*^9}, {
   3.7564739455548563`*^9, 3.756473966482794*^9}, {3.756477138657824*^9, 
   3.7564771389575453`*^9}, {3.76133308942835*^9, 3.761333091876583*^9}, {
   3.771960534143981*^9, 3.771960545447304*^9}, {3.772036063276965*^9, 
   3.7720360665464077`*^9}, {3.772036241194306*^9, 3.77203625287162*^9}, {
   3.775477961165186*^9, 3.775477969288271*^9}, 3.7754780131425*^9, {
   3.777400341397171*^9, 3.777400351848933*^9}, {3.777400447901471*^9, 
   3.777400460342659*^9}, {3.777400507434965*^9, 3.777400507705071*^9}, {
   3.777400572427231*^9, 3.7774005725833693`*^9}, {3.777400609877466*^9, 
   3.777400611273203*^9}, {3.78103415781357*^9, 3.781034163862665*^9}, {
   3.7811138446395483`*^9, 3.781113847554817*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"92329e06-7ef4-4543-bea3-dc8346f4eea5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"database", " ", "=", " ", 
   RowBox[{"SortBy", "[", 
    RowBox[{"database", ",", 
     RowBox[{
      RowBox[{"#", "[", "\"\<Sector\>\"", "]"}], "&"}]}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellLabel->"In[9]:=",ExpressionUUID->"9db3b944-0358-4ba2-aa6d-10165afdac04"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["1-SMA Crossover Strategy", "Chapter",
 CellChangeTimes->{{3.78257125686062*^9, 3.782571259562874*^9}, {
  3.7831126055162363`*^9, 3.783112608100415*^9}, {3.7832798327234173`*^9, 
  3.783279853595045*^9}},ExpressionUUID->"26a427a5-bb3d-402a-9006-\
0200059e1618"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SMA1Strategy", "[", 
     RowBox[{"datedPrices_", ",", " ", "window_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "ma", ",", "prices", ",", "paddedDatedPrices", ",", "lookingFor", ",", 
        
        RowBox[{"buy", "=", 
         RowBox[{"{", "}"}]}], ",", " ", 
        RowBox[{"sell", "=", 
         RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ma", " ", "=", " ", 
        RowBox[{"MovingAverage", "[", 
         RowBox[{
          RowBox[{"datedPrices", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "window"}], "]"}]}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"prices", "  ", "=", " ", 
        RowBox[{"Drop", "[", 
         RowBox[{
          RowBox[{"datedPrices", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
          RowBox[{"window", "-", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"paddedDatedPrices", " ", "=", " ", 
        RowBox[{"Drop", "[", 
         RowBox[{"datedPrices", ",", 
          RowBox[{"window", "-", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]",
        "\[IndentingNewLine]", 
       RowBox[{"lookingFor", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"First", "[", "ma", "]"}], "<", 
           RowBox[{"First", "[", "prices", "]"}]}], ",", "\"\<SellSignal\>\"",
           ",", "\"\<BuySignal\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "lookingFor", " ", "\[Equal]", " ", "\"\<SellSignal\>\""}], " ", 
             "&&", " ", 
             RowBox[{
              RowBox[{"ma", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ">", 
              RowBox[{"prices", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{"sell", ",", 
               RowBox[{"paddedDatedPrices", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"lookingFor", " ", "=", " ", "\"\<BuySignal\>\""}], 
             ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "lookingFor", " ", "\[Equal]", " ", "\"\<BuySignal\>\""}], " ", "&&",
              " ", 
             RowBox[{
              RowBox[{"ma", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "<", 
              RowBox[{"prices", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{"buy", ",", 
               RowBox[{"paddedDatedPrices", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"lookingFor", " ", "=", " ", "\"\<SellSignal\>\""}], 
             ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", 
           RowBox[{"Length", "[", "ma", "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<BuyEvents\>\"", "\[Rule]", "buy"}], ",", 
         RowBox[{"\"\<SellEvents\>\"", "\[Rule]", "sell"}], ",", 
         RowBox[{"\"\<TotalEarnings\>\"", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Total", "[", 
             RowBox[{"sell", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "-", 
            RowBox[{"Total", "[", 
             RowBox[{"buy", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ")"}]}]}], 
        "|>"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DatedMovingAverage", "[", 
    RowBox[{"datedPrices_", ",", "window_"}], "]"}], ":=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Drop", "[", 
       RowBox[{
        RowBox[{"datedPrices", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"window", "-", "1"}]}], "]"}], ",", 
      RowBox[{"MovingAverage", "[", 
       RowBox[{
        RowBox[{"datedPrices", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "window"}], "]"}]}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SMA1StrategyPlot", "[", 
    RowBox[{"datedPrices_", ",", "window_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ma", ",", "strategyResults"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ma", " ", "=", " ", 
       RowBox[{"DatedMovingAverage", "[", 
        RowBox[{"datedPrices", ",", "window"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"strategyResults", " ", "=", " ", 
       RowBox[{"SMA1Strategy", "[", 
        RowBox[{"datedPrices", ",", " ", "window"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"datedPrices", ",", "ma", ",", 
          RowBox[{"strategyResults", "[", "\"\<BuyEvents\>\"", "]"}], ",", 
          RowBox[{"strategyResults", "[", "\"\<SellEvents\>\"", "]"}]}], 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Joined", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"PlotTheme", "\[Rule]", "\"\<Monochrome\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Date\>\"", ",", "bigFontSize"}], "]"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Price\>\"", ",", "bigFontSize"}], "]"}]}], "}"}]}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"LineLegend", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<Price\>\"", ",", 
               RowBox[{"\"\<MA \>\"", "<>", 
                RowBox[{"ToString", "[", "window", "]"}]}], ",", 
               "\"\<Buy\>\"", ",", "\"\<Sell\>\""}], "}"}], ",", 
             RowBox[{"LegendFunction", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Framed", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"Background", "\[Rule]", 
                   RowBox[{"Opacity", "[", 
                    RowBox[{"0.6", ",", "White"}], "]"}]}]}], "]"}], "&"}], 
               ")"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", "11"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
        RowBox[{"BaseStyle", "\[Rule]", 
         RowBox[{"FontSize", "\[Rule]", "smallFontSize"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"TicksStyle", "\[Rule]", "Large"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Blue"}], "}"}], ",", "Red", ",", "Green"}],
           "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"PlotMarkers", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "Automatic", ",", "None", ",", "Automatic", ",", "Automatic"}], 
          "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"ImageSize", "\[Rule]", "800"}], ",", "\[IndentingNewLine]", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
        RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"\"\<Total earnings: \>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"strategyResults", "[", "\"\<TotalEarnings\>\"", "]"}], 
           "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StrategyEarnings", "[", 
    RowBox[{"datedPrices_", ",", "maxWindow_"}], "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"w", ",", 
       RowBox[{
        RowBox[{"SMA1Strategy", "[", 
         RowBox[{"datedPrices", ",", "w"}], "]"}], "[", 
        "\"\<TotalEarnings\>\"", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"w", ",", "2", ",", "maxWindow"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"EarningsMatrix", "[", "maxWindow_", "]"}], ":=", 
   RowBox[{"ProgressParallelTable", "[", 
    RowBox[{
     RowBox[{"StrategyEarnings", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"database", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<DatedPrices\>\"", "]"}], 
       ",", "maxWindow"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "database", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EarningsMatrix", "[", 
     RowBox[{"maxWindow_", ",", "from_", ",", "to_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"StrategyEarnings", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"database", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<DatedPrices\>\"", 
            "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"from", ",", "to"}], "}"}]}], "]"}], 
         "\[IndentingNewLine]", ",", "maxWindow"}], "\[IndentingNewLine]", 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "database", "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "All", ",", "2"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Middle", "[", 
    RowBox[{"l_List", " ", "/;", " ", 
     RowBox[{
      RowBox[{"Length", "[", "l", "]"}], ">", "1"}]}], "]"}], ":=", 
   RowBox[{"Part", "[", 
    RowBox[{"l", ",", 
     RowBox[{"Floor", "[", 
      RowBox[{
       RowBox[{"Length", "[", "l", "]"}], "/", "2"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Middle", "[", 
     RowBox[{"l_List", " ", "/;", " ", 
      RowBox[{
       RowBox[{"Length", "[", "l", "]"}], "==", "1"}]}], "]"}], ":=", 
    RowBox[{"First", "[", "l", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ticks", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Middle", "[", 
         RowBox[{"Last", "[", "#", "]"}], "]"}], ",", 
        RowBox[{"First", "[", "#", "]"}]}], "}"}], "&"}], ",", 
     RowBox[{"Normal", "[", 
      RowBox[{"PositionIndex", "[", 
       RowBox[{"database", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "\"\<Sector\>\""}], "]"}], "]"}], "]"}], "]"}]}],
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"EarningsMatrixPlot", "[", 
    RowBox[{
    "maxStrategyWindow_", ",", "maxTimeWindow_", ",", " ", "maxRange_"}], 
    "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "partitions", ",", "earnings", ",", "min", ",", "max", ",", "plts"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"partitions", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"First", "[", "#", "]"}], ",", 
            RowBox[{"Last", "[", "#", "]"}]}], "}"}], "&"}], ",", 
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"1", ",", "maxRange"}], "]"}], ",", "maxTimeWindow", ",", 
           "1"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"earnings", " ", "=", " ", 
       RowBox[{"ProgressParallelMap", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"EarningsMatrix", "[", 
           RowBox[{"maxStrategyWindow", ",", 
            RowBox[{"First", "[", "#", "]"}], ",", 
            RowBox[{"Last", "[", "#", "]"}]}], "]"}], "&"}], ",", 
         "partitions"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"min", ",", "max"}], "}"}], "=", 
       RowBox[{"Through", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Min", ",", "Max"}], "}"}], "[", 
         RowBox[{"Flatten", "[", "earnings", "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"plts", " ", "=", " ", 
       RowBox[{"ProgressTable", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"MatrixPlot", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"earnings", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"min", ",", "max"}], "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"FrameTicks", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"ticks", ",", "None"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"Automatic", ",", "None"}], "}"}]}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"PlotTheme", "\[Rule]", "\"\<Monochrome\>\""}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"None", ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Window\>\"", ",", "bigFontSize"}], "]"}]}], 
             "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"ImageSize", "\[Rule]", "800"}]}], "\[IndentingNewLine]", 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "earnings", "]"}], ",", "1"}], "}"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "plts", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7832799541255503`*^9, 3.783279982348974*^9}, {
   3.7832801963729753`*^9, 3.783280236092703*^9}, {3.7832806739923563`*^9, 
   3.783280677304346*^9}, {3.7832807409743767`*^9, 3.783280862981254*^9}, {
   3.783280898013467*^9, 3.783280948627709*^9}, {3.783281002551043*^9, 
   3.783281002668502*^9}, {3.78328106027454*^9, 3.783281159211834*^9}, {
   3.783281206126109*^9, 3.783281206346187*^9}, {3.783281386603675*^9, 
   3.783281432425012*^9}, {3.783281494216825*^9, 3.783281495797839*^9}, {
   3.7832821111091757`*^9, 3.783282152497499*^9}, {3.7832840761693277`*^9, 
   3.7832841077360153`*^9}, {3.7832841425256567`*^9, 3.783284189647032*^9}, 
   3.783284415088483*^9, {3.783284593494673*^9, 3.783284596332139*^9}, {
   3.78328463063766*^9, 3.7832846324744797`*^9}, 3.7832847181157084`*^9, {
   3.78328481866117*^9, 3.783284821280677*^9}, {3.783354302324651*^9, 
   3.7833543026209383`*^9}, {3.7833544725872993`*^9, 3.783354700538231*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"57419040-032d-42fa-a791-ce970ce8df9a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"plts", " ", "=", " ", 
   RowBox[{"EarningsMatrixPlot", "[", 
    RowBox[{"200", ",", "504", ",", "1500"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.783354714270172*^9, 3.783354737013692*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"f9cf9240-452b-4f11-8b07-fba30fa3a5f6"],

Cell[BoxData[
 DynamicBox[ToBoxes[
   If[
    OptionValue[{
     "ShowInfo" -> True, "Label" -> "Evaluating...", Parallelize}, {}, 
     "ShowInfo"], 
    AdvancedMapping`Private`DetailedIndicator[
    AdvancedMapping`Private`indexProgress$63310, 
     Length[CompressedData["
1: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
N1Ozu6nZQ5maPbSp2cOYmj2sqdnDmZo9vKnZI5iaPaKp2SOZmj2yqdmjmJo9
qqnZo5maPbqp2WOYmj2mqdljmZo9tqnZ45iaPa6p2eOZmj2+qdkTmJo9oanZ
E5maPbGp2ZOYmj2pqdmTmZo9uanZU5iaPaWp2VOZmj21qdnTmJo9ranZ05ma
Pb2p2TOYmj2jqdkzmZo9s6nZs5iaPaup2bOZmj27qdlzmJo9p6nZc5maPbep
2fOYmj2vqdnzmZo9v6nZC5iavaCp2QuZmr2wqdmLmJq9qKnZi5mavbip2UuY
mr2kqdlLmZq9tKnZy5iavayp2cuZmr28qdkrmJq9oqnZK5mavbKp2auYmr2q
qdmrmZq9uqnZa5iavaap2WuZmr22qdnrmJq9rqnZ65mavb6p2RuYmr2hqdkb
mZq9sanZm5iavamp2ZuZmr25qdlbmJq9panZW5mavbWp2duYmr2tqdnbmZq9
vanZO5iavaOp2TuZmr2zqdm7mJq9q6nZu5mavbup2XuYmr2nqdl7mZq9t6nZ
+5iava+p2fuZmr2/qdkHmJp9oKnZB5mafbCp2YeYmn2oqdmHmZp9uKnZR5ia
faSp2UeZmn20qdnHmJp9rKnZx5mafbyp2SeYmn2iqdknmZp9sqnZp5iafaqp
2aeZmn26qdlnmJp9pqnZZ5mafbap2eeYmn2uqdnnmZp9vqnZF5iafaGp2ReZ
mn2xqdmXmJp9qanZl5mafbmp2VeYmn2lqdlXmZp9tanZ15iafa2p2deZmn29
qdk3mJp9o6nZN5mafbOp2beYmn2rqdm3mZp9u6nZd5iafaep2XeZmn23qdn3
mJp9r6nZ95mafb+p2Q+Ymv2gqdkPmZr9sKnZj5ia/aip2Y+Zmv24qdlPmJr9
pKnZT5ma/bSp2c+Ymv2sqdnPmZr9vKnZL5ia/aKp2S+Zmv2yqdmvmJr9qqnZ
r5ma/bqp2W+Ymv2mqdlvmZr9tqnZ75ia/a6p2e+Zmv2+qdkfmJr9oanZfzU1
+2+mZv/d1Ox/mJr9kanZH5ua/Ymp2Z+amv2Zqdmfm5r9hanZX5qa/U9Ts/9l
avZXpmZ/bWr2N6Zmf2tq9nemZn9vavYPpmb/aGr2v03N/o+p2T+Zmv2zqdn/
NTX7f6Zm/2Jq9q+mZv9mavbvpmb/YWr2n6ZmD/5JEGz2kK5m/8XV7AFXs5ur
2d3V7KFczR7a1exhXM0e1tXs4VzNHt7V7BFczR7R1eyRXM0e2dXsUVzNHtXV
7NFczR7d1ewxXM0e09XssVzNHtvV7HFczR7X1ezxXM0e39XsCVzNntDV7Ilc
zZ7Y1exJXM2e1NXsyVzNntzV7ClczZ7S1eypXM2e2tXsaVzNntbV7OlczZ7e
1ewZXM2e0dXsmVzNntnV7FlczZ7V1ezZXM2e3dXsOVzNntPV7LlczZ7b1ex5
XM2e19Xs+VzNnt/V7AVczV7Q1eyFXM1e2NXsRVzNXtTV7MVczV7c1ewlXM1e
0tXspVzNXtrV7GVczV7W1ezlXM1e3tXsFVzNXtHV7JVczV7Z1exVXM1e1dXs
1VzNXt3V7DVczV7T1ey1XM1e29XsdVzNXtfV7PVczV7f1ewNXM3e0NXsjVzN
3tjV7E1czd7U1ezNXM3e3NXsLVzN3tLV7K1czd7a1extXM3e1tXs7VzN3t7V
7B1czd7R1eydXM3e2dXsXVzN3tXV7N1czd7d1ew9XM3e09XsvVzN3tvV7H1c
zd7X1ez9XM3e39XsA1zNPtDV7INczT7Y1exDXM0+1NXsw1zNPtzV7CNczT7S
1eyjXM0+2tXsY1zNPtbV7ONczT7e1ewTXM0+0dXsk1zNPtnV7FNczT7V1ezT
XM0+3dXsM1zNPtPV7LNczT7b1exzXM0+19Xs81zNPt/V7Atczb7Q1eyLXM2+
2NXsS1zNvtTV7Mtczb7c1ewrXM2+0tXsq1zNvtrV7Gtczb7W1ezrXM2+3tXs
G1zNvtHV7Jtczb7Z1exbXM2+1dXs21zNvt3V7Dtczb7T1ey7XM2+29Xse1zN
vtfV7Ptczb7f1ewHXM1+0NXsh1zNftjV7EdczX7U1ezHXM1+3NXsJ1zNftLV
7KdczX7a1exnXM1+1tXs51zNft7V7BdczX7R1eyXXM1+2dXsV1zNftXV7Ndc
zX7d1ew3XM1+09Xst1zNftvV7HdczX7X1ez3XM1+39XsD/B/zFPgiA==
      "]], 
     AdvancedMapping`Private`startTime$63310, 
     OptionValue[{
      "ShowInfo" -> True, "Label" -> "Evaluating...", Parallelize}, {}, 
      "Label"]], 
    AdvancedMapping`Private`DefaultIndicator[
    AdvancedMapping`Private`indexProgress$63310, 
     Length[CompressedData["
1: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
N1Ozu6nZQ5maPbSp2cOYmj2sqdnDmZo9vKnZI5iaPaKp2SOZmj2yqdmjmJo9
qqnZo5maPbqp2WOYmj2mqdljmZo9tqnZ45iaPa6p2eOZmj2+qdkTmJo9oanZ
E5maPbGp2ZOYmj2pqdmTmZo9uanZU5iaPaWp2VOZmj21qdnTmJo9ranZ05ma
Pb2p2TOYmj2jqdkzmZo9s6nZs5iaPaup2bOZmj27qdlzmJo9p6nZc5maPbep
2fOYmj2vqdnzmZo9v6nZC5iavaCp2QuZmr2wqdmLmJq9qKnZi5mavbip2UuY
mr2kqdlLmZq9tKnZy5iavayp2cuZmr28qdkrmJq9oqnZK5mavbKp2auYmr2q
qdmrmZq9uqnZa5iavaap2WuZmr22qdnrmJq9rqnZ65mavb6p2RuYmr2hqdkb
mZq9sanZm5iavamp2ZuZmr25qdlbmJq9panZW5mavbWp2duYmr2tqdnbmZq9
vanZO5iavaOp2TuZmr2zqdm7mJq9q6nZu5mavbup2XuYmr2nqdl7mZq9t6nZ
+5iava+p2fuZmr2/qdkHmJp9oKnZB5mafbCp2YeYmn2oqdmHmZp9uKnZR5ia
faSp2UeZmn20qdnHmJp9rKnZx5mafbyp2SeYmn2iqdknmZp9sqnZp5iafaqp
2aeZmn26qdlnmJp9pqnZZ5mafbap2eeYmn2uqdnnmZp9vqnZF5iafaGp2ReZ
mn2xqdmXmJp9qanZl5mafbmp2VeYmn2lqdlXmZp9tanZ15iafa2p2deZmn29
qdk3mJp9o6nZN5mafbOp2beYmn2rqdm3mZp9u6nZd5iafaep2XeZmn23qdn3
mJp9r6nZ95mafb+p2Q+Ymv2gqdkPmZr9sKnZj5ia/aip2Y+Zmv24qdlPmJr9
pKnZT5ma/bSp2c+Ymv2sqdnPmZr9vKnZL5ia/aKp2S+Zmv2yqdmvmJr9qqnZ
r5ma/bqp2W+Ymv2mqdlvmZr9tqnZ75ia/a6p2e+Zmv2+qdkfmJr9oanZfzU1
+2+mZv/d1Ox/mJr9kanZH5ua/Ymp2Z+amv2Zqdmfm5r9hanZX5qa/U9Ts/9l
avZXpmZ/bWr2N6Zmf2tq9nemZn9vavYPpmb/aGr2v03N/o+p2T+Zmv2zqdn/
NTX7f6Zm/2Jq9q+mZv9mavbvpmb/YWr2n6ZmD/5JEGz2kK5m/8XV7AFXs5ur
2d3V7KFczR7a1exhXM0e1tXs4VzNHt7V7BFczR7R1eyRXM0e2dXsUVzNHtXV
7NFczR7d1ewxXM0e09XssVzNHtvV7HFczR7X1ezxXM0e39XsCVzNntDV7Ilc
zZ7Y1exJXM2e1NXsyVzNntzV7ClczZ7S1eypXM2e2tXsaVzNntbV7OlczZ7e
1ewZXM2e0dXsmVzNntnV7FlczZ7V1ezZXM2e3dXsOVzNntPV7LlczZ7b1ex5
XM2e19Xs+VzNnt/V7AVczV7Q1eyFXM1e2NXsRVzNXtTV7MVczV7c1ewlXM1e
0tXspVzNXtrV7GVczV7W1ezlXM1e3tXsFVzNXtHV7JVczV7Z1exVXM1e1dXs
1VzNXt3V7DVczV7T1ey1XM1e29XsdVzNXtfV7PVczV7f1ewNXM3e0NXsjVzN
3tjV7E1czd7U1ezNXM3e3NXsLVzN3tLV7K1czd7a1extXM3e1tXs7VzN3t7V
7B1czd7R1eydXM3e2dXsXVzN3tXV7N1czd7d1ew9XM3e09XsvVzN3tvV7H1c
zd7X1ez9XM3e39XsA1zNPtDV7INczT7Y1exDXM0+1NXsw1zNPtzV7CNczT7S
1eyjXM0+2tXsY1zNPtbV7ONczT7e1ewTXM0+0dXsk1zNPtnV7FNczT7V1ezT
XM0+3dXsM1zNPtPV7LNczT7b1exzXM0+19Xs81zNPt/V7Atczb7Q1eyLXM2+
2NXsS1zNvtTV7Mtczb7c1ewrXM2+0tXsq1zNvtrV7Gtczb7W1ezrXM2+3tXs
G1zNvtHV7Jtczb7Z1exbXM2+1dXs21zNvt3V7Dtczb7T1ey7XM2+29Xse1zN
vtfV7Ptczb7f1ewHXM1+0NXsh1zNftjV7EdczX7U1ezHXM1+3NXsJ1zNftLV
7KdczX7a1exnXM1+1tXs51zNft7V7BdczX7R1eyXXM1+2dXsV1zNftXV7Ndc
zX7d1ew3XM1+09Xst1zNftvV7HdczX7X1ez3XM1+39XsD/B/zFPgiA==
      "]]]], 
   StandardForm],
  Evaluator->"Local",
  ImageSizeCache->{220., {43., 49.}}]], "PrintTemporary",
 CellChangeTimes->{3.78335474922939*^9},
 CellLabel->
  "During evaluation of \
In[78]:=",ExpressionUUID->"8be7e683-5e83-431a-ab1a-3ffb1772d169"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2-SMA Crossover Strategy", "Chapter",
 CellChangeTimes->{{3.78257125686062*^9, 3.782571259562874*^9}, {
  3.7831126055162363`*^9, 3.783112608100415*^9}, {3.7832798327234173`*^9, 
  3.7832798395952377`*^9}},ExpressionUUID->"63794d6f-cd52-4dac-8047-\
2dfc6064dfe0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ma1", " ", "=", " ", 
   RowBox[{"Drop", "[", 
    RowBox[{
     RowBox[{"MovingAverage", "[", 
      RowBox[{
       RowBox[{"datedPrices", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "20"}], "]"}], ",", 
     "30"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ma2", " ", "=", " ", 
   RowBox[{"MovingAverage", "[", 
    RowBox[{
     RowBox[{"datedPrices", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "50"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7829428111029453`*^9, 3.7829428128225603`*^9}, {
   3.7829428500286217`*^9, 3.782942879884635*^9}, {3.782942974846703*^9, 
   3.782942980570903*^9}, {3.7829430942543716`*^9, 3.78294309566667*^9}, 
   3.782943152365836*^9, {3.7829432433093653`*^9, 3.782943285449436*^9}, {
   3.782943357732099*^9, 3.782943386736332*^9}, {3.782944221668847*^9, 
   3.782944231393548*^9}},
 CellLabel->
  "(Debug) In[11]:=",ExpressionUUID->"de2f322f-eed4-4ad4-bd71-e71ea18c88e0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{"ma1", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.7829442330578737`*^9, 3.7829442399770613`*^9}},
 CellLabel->
  "(Debug) In[13]:=",ExpressionUUID->"94dfce21-cd1a-4055-a333-ce5ef2f6eb56"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "14.486500000000001`", ",", "14.415`", ",", "14.334499999999998`", ",", 
   "14.249000000000002`", ",", "14.159500000000001`", ",", "14.0665`", ",", 
   "14.023500000000002`", ",", "13.975000000000001`", ",", 
   "13.926500000000003`", ",", "13.869500000000002`"}], "}"}]], "Output",
 CellChangeTimes->{3.782944240125881*^9, 3.782944374073935*^9},
 CellLabel->
  "(Debug) Out[13]=",ExpressionUUID->"99e640c6-0354-427f-a7af-6b8d99c5f8c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{"Drop", "[", 
    RowBox[{
     RowBox[{"datedPrices", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"50", "-", "30"}]}], "]"}], ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.782944261760873*^9, 3.7829442619047213`*^9}, 
   3.782944694405719*^9},
 CellLabel->
  "(Debug) (Dialog) \
In[20]:=",ExpressionUUID->"5eb7ecf8-7784-406d-a32a-862bbdbaa074"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "14.65`", ",", "14.56`", ",", "14.62`", ",", "14.56`", ",", "14.53`", ",", 
   "14.37`", ",", "14.23`", ",", "14.22`", ",", "14.72`", ",", "14.78`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7829442622688847`*^9, 3.7829443756412897`*^9, 
  3.7829446953258743`*^9},
 CellLabel->
  "(Debug) (Dialog) \
Out[20]=",ExpressionUUID->"c8333575-df04-457f-a661-89132f0e5f2f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{"datedPrices", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{
  3.782944688842182*^9},ExpressionUUID->"ed0f1c8d-4c03-4455-bfc0-\
0686c3125ed9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Take", "[", 
      RowBox[{"ma1", ",", "100"}], "]"}], ",", 
     RowBox[{"Take", "[", 
      RowBox[{"ma2", ",", "100"}], "]"}], ",", 
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{"Drop", "[", 
        RowBox[{
         RowBox[{"datedPrices", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"50", "-", "30"}]}], "]"}], ",", "100"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<MA1\>\"", ",", "\"\<MA2\>\"", ",", "\"\<Prices\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.782943052428317*^9, 3.782943214737769*^9}, {
  3.782943261949472*^9, 3.7829433428730507`*^9}, {3.7829433746208153`*^9, 
  3.7829433829048223`*^9}, {3.782944394080872*^9, 3.782944399304654*^9}},
 CellLabel->
  "(Debug) In[15]:=",ExpressionUUID->"185803b4-c1d0-4200-ad7a-9c8187c6f35c"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw9lAlIVEEcxhetMKmQsJSwUjGTrFx1zS7bzyvTbXUP3d3usEyLSIkSMbsJ
sYMy6UJCKqPbIqTIUszELKhEBLETk0qLyDIp6ZzxzeeDZfm9730z878mIDPX
luWm0+nWip/8155e42i30OLxA9OhXsC7KqmzsI3sgaARu4/FXyF7YUtO6eei
nWRvHNz44dclK9kXUStrkkcFkv1Q2BMc7jGK7A9DpHj6QhUH4kuRMWrlc3IQ
CuoqJoTVkoOxSizndoUcgpDlhxv6L5KnoSXwxcCOy+TpiPC46re0kjwTG+5t
KfMdYj0e54sNnpHDsUIsF+LH80XgmgjfexM5Es4xM26efkY2IC3TyzXHMENx
FIye7efyasmzMLe6Ob/OOFNxNCrzYjzbH5Bn4/LXVnOmJUzxHOSN3Vv/uJM8
V9P1esXzcFeEH5pNng+R7a+tp8kxmCLr84K8ANtkASeEKzYibvW7lsBlZOBf
W0FPcKniXcD+WPFBA/VY2LvOlzf2Uo+FTH+oT4TS4yCir24OVrwrDt/Ecb1C
qMdDpuvLVOrxKPMd5hgzkXoCtoty14yknqD5f3L/RJQ3+t/Y3M39EyG3y39N
fSGGO8QOT6gvRP8fEVAT9SRtvWbqSRjs7w7qi1B+Sjw91Bfh+dMf9q5+6sk4
Itph+T/qybgu++Ev9RTtfB48fwqkXDWUHxMOyHkIoG6CqO6ZxFnUF2v5MFNf
jDdph05syqRuRtgrMXFbqZtxZ9K+T9aT1FNhEuUobqKeit4LTaboHuppGCfn
d1ik0tPQLPt9smKdBe4yHQsUw6L9W/i9BXq5f5biegsGB7qIfit+i/YzH6Xf
ivDBeaPfCtn+FTX0W6GXehv9NqTI87+n3wafDlEAd4Py2/DQFF0S66+43qbl
I0qxzo6XAzs23EtQDDuOx4uML6Pfrs1PHv12XBTpKdlNfzreinIlkZEOUZ1b
fdvpT9fqsYf+dG2ed9KfgY/iOrtaRH8GuuU8DvkzkCvnmevXZ0CG17WVfoc2
T9n0O3BfHmAN/Q4E3NicU7qCfocWz2r6nVp/5tLvxHfZ/+vod0Jez8Ys+p24
3Sc+WE+/CyJa8YJ+F8TtFeNZTL8Lj2S/VNDvwkZ5f1bTvwRnBxcw4D9Kyp9Q

         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw9lAlQVHUcxzc8qdasmKKIK0EoLoENEAW+HMvhgnsfWropknk0aoppB6yz
bhoOaRbhrIhgamjGYAcjZbVGKDjKFBqKR1mEmeYxNbNBQPRe/L/tzM7uZz/v
8+bt//3+L3ThCkOJj0KhWCS95c/R152MtT7uiQFBMRA/4Lx9rTboIfJEnDna
6xfoS56Mb7+3/B43GC3YD6FNLz7/1k2yP3qTHvU8fYX8GLpW2Cd09pBDYDgS
5LrxHflxqMNLfdzt5DCcrFc3//kFeSoKYkdCh5vJkaiMvKn8son8JLwtFyqG
95GjUdmyzHegjhyLsZZJMR/tIk+DctWhLRcbyPFw3dAfCWojJ6CydFWA8v/r
T0T81cbwX8bw/6sQc9Z9NTCC/BTsl3LHrNOQk+CZVJO4Zw05GafL8796bRc5
BdHe6stvnyBPx+AzL7T98wc5FSUzftRWPhwreAYijOPe255Knongjr6MvXZy
GhyDqSs7N5PTkb7TvPuDD8kZcE79+vX3z5GBmpdq9kwZEOwAuqNKHvnZP074
THibdMvcyYIdmRjxll6p0dNnoSwwZXHOEvosREqnt1bQZ0O9Zfmvgwfos+GK
K9x/93H6HPy2NEpaAfocfCaNg76fXo3QN+UbME14NbYa14RVBwtW5CJEHqhY
+lw0HNckv5FJnwfXXGliTfR5qPKOt+9YTp+PfmPvvp0b6fMRXHxrblYtfQGc
HnkC6QugG/Jffa6LfhZS7yraqLxNPwunbnW0ZinjhddA2k21858Q7NBg0al5
mvY8+kIcHfeAX8Zz9IXYJF+wk74IB581GSLq6IvQsHc2HjxGL31f0Homqo9+
NuTxu2dsgvBamI5JRYhghxbX8qUNlEavw6uNzQvL5wiGDv11iz++vprH69Ct
up2i3iTYo4NbHqcd7PXokp8HB9jr8fm72+57uZm9HpuL513KbWWvh/VkwjeH
O9kbIG+HwPPsDdhQlS1NDHuD2A/sDXhHXqAh9kZI09syNCFR9EZIT4vhs/6C
HcbR/RUh2GPE/bbpn7QnCVaYsPKOq8OUyd40up5q9iZIu91ZW8TehLjLYeM3
mNmbESLPy3z2Ztz76f71J5awN6O4vCdt/Tr2Zvz137yxt6BvQX23ait7CxQ/
+PhW7GZvwbC83w6zt6BeviFt7K14xa8x76cL7K2QL/f0dfZWTLk4ULZ0iL10
vFPegCrR2xBePbKtLEAwbKiWbl9SlGCHDenXeg79PVOwxwb59Ae17OdAXo6q
YhX+BYMsqUo=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxdVD1oU1EYvQgF6WKHgBakPyol1rakTaxajf36kyZN0ybv5VfIUtEuDraI
S13e0k3I4lLpVnEpuLgEQQgFEaQOTiKIEASXOghSB6e+975zhncvhMt555z7
/dzvZvj+Y/fhGWPMA/8X7Lr+zH4+8ldhXPBBBneOnfYA8VlJ937d30wT91l8
TFqHJ/HmOeILqn8/BnxR/sWbrcOnxEOyFQqILwHTf0XPaxGPSBiuZwI4jp14
VDaC9Yv6MXHbAzvHX8YtHfeEld+kvNz1Vz/1U/CTT8qz2Jts9z9xSl5t+idc
pv665LrbvoL8tPod4huSDBf1N+W3EwjI37LizVjxbqM+4jsShlsnTlv13FX9
xijwrFxtBh29Biya70fwnmi8berncN/k51Af+XncB87z5q3zFzS/Lv0LWv9b
+hclbE+b/kXME/PPROfDy0BPfinaD29Jgmx7zyfAZ/F9EntW9a+BTQ77FPic
6PwDm2XMH/llva8D8nnVPyef1/69I7+i/BH5FcwX+YKE7f3E/ArKf2N+q+g/
/auYJ/rX0F/ya7gf8sVoPK+o/f/L80uKnwBLSestMp+S+neBOyWd9336He3n
CP0O6kH/PUeCaYpN0O9E4xlX5+cD/a729xHjg88g/46r85BgfWXMSxL+Mt4j
sFfGewPulPH/BGwqmH+cJxXMD/0VrSdPf8W632r0PKla/iryp7+q9zXM+DXN
/wf9NbzXFPw1recn/TUJn+cL+uuYF/rreA+MX5fwOe7RX4/GMw3oEU8aqv/O
+MB7wJ0G5hnY3MN9p+QUamaRJg==
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 12.687777777777777`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 100.}, {12.687777777777777`, 20.9}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"MA1\"", "\"MA2\"", "\"Prices\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7829430833367043`*^9, 3.7829432152005453`*^9}, {
   3.782943256652289*^9, 3.782943389244149*^9}, 3.782944400164625*^9},
 CellLabel->
  "(Debug) Out[15]=",ExpressionUUID->"429b7648-d0a2-4ae3-a6cd-093915cff718"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"First", "[", "ma1", "]"}], "<", 
  RowBox[{"First", "[", "ma2", "]"}]}]], "Input",ExpressionUUID->"14aae606-\
40e8-4bc4-ad75-935f7e8cde62"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"RandomReal", "[", "1", "]"}], "<", "0.5"}]], "Input",
 CellLabel->"In[41]:=",ExpressionUUID->"b9ddd3ec-0f38-4b2c-a56b-baf1ab046758"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.782945802017314*^9, 3.782945804682767*^9}},
 CellLabel->"Out[41]=",ExpressionUUID->"6f6bbe10-89cd-4bb2-980e-4375dbf443f9"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Centroid", "[", "matrix_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"matrix", ",", 
         RowBox[{"{", "1", "}"}]}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"matrix", ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], "}"}], ".", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", "matrix", "]"}], "]"}]}], "/", 
    RowBox[{"Total", "[", 
     RowBox[{"matrix", ",", 
      RowBox[{"-", "1"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReversePoint", "[", 
    RowBox[{"point_", ",", "max_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "}"}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "max"}], "}"}], "-", "point"}], ")"}]}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7831173985036707`*^9, 3.783117444972299*^9}, {
  3.78311800750535*^9, 3.783118007792194*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"db66d2cd-327f-4684-9824-73a28325379c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"DatedMovingAverage", "[", 
    RowBox[{"datedPrices_", ",", "window_"}], "]"}], ":=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Drop", "[", 
       RowBox[{
        RowBox[{"datedPrices", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"window", "-", "1"}]}], "]"}], ",", 
      RowBox[{"MovingAverage", "[", 
       RowBox[{
        RowBox[{"datedPrices", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "window"}], "]"}]}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SMA2Strategy", "[", 
    RowBox[{"datedPrices_", ",", " ", "window1_", ",", " ", "window2_"}], 
    "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "ma1", ",", "ma2", ",", "currentDatedPrices", ",", " ", "lookingFor", 
       ",", 
       RowBox[{"buy", "=", 
        RowBox[{"{", "}"}]}], ",", " ", 
       RowBox[{"sell", "=", 
        RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ma1", " ", "=", " ", 
       RowBox[{"Drop", "[", 
        RowBox[{
         RowBox[{"MovingAverage", "[", 
          RowBox[{
           RowBox[{"datedPrices", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "window1"}], "]"}],
          ",", 
         RowBox[{"window2", "-", "window1"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ma2", " ", "=", " ", 
       RowBox[{"MovingAverage", "[", 
        RowBox[{
         RowBox[{"datedPrices", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "window2"}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"currentDatedPrices", " ", "=", " ", 
       RowBox[{"Drop", "[", 
        RowBox[{"datedPrices", ",", 
         RowBox[{"window2", "-", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]",
       "\[IndentingNewLine]", 
      RowBox[{"lookingFor", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"First", "[", "ma1", "]"}], "<", 
          RowBox[{"First", "[", "ma2", "]"}]}], ",", "\"\<BuySignal\>\"", 
         ",", "\"\<SellSignal\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"lookingFor", " ", "\[Equal]", " ", "\"\<BuySignal\>\""}],
             " ", "&&", " ", 
            RowBox[{
             RowBox[{"ma1", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ">", 
             RowBox[{"ma2", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
           
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"buy", ",", 
              RowBox[{"currentDatedPrices", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"lookingFor", " ", "=", " ", "\"\<SellSignal\>\""}], 
            ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
            "lookingFor", " ", "\[Equal]", " ", "\"\<SellSignal\>\""}], " ", "&&",
             " ", 
            RowBox[{
             RowBox[{"ma1", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "<", 
             RowBox[{"ma2", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
           
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"sell", ",", 
              RowBox[{"currentDatedPrices", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"lookingFor", " ", "=", " ", "\"\<BuySignal\>\""}], 
            ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "ma2", "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<BuyEvents\>\"", "\[Rule]", "buy"}], ",", 
        RowBox[{"\"\<SellEvents\>\"", "\[Rule]", "sell"}], ",", 
        RowBox[{"\"\<TotalEarnings\>\"", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"sell", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "-", 
           RowBox[{"Total", "[", 
            RowBox[{"buy", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ")"}]}]}], 
       "|>"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MakeEarningsMatrix", "[", 
    RowBox[{"datedPrices_", ",", "from_", ",", "to_", ",", 
     RowBox[{"window_", " ", ":", " ", "100"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"windows", ",", "earnings", ",", "matrix"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"windows", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"w1", ",", "w2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"w1", ",", "1", ",", "window"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"w2", ",", "w1", ",", "window"}], "}"}]}], "]"}], ",", 
         "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"earnings", " ", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"SMA2Strategy", "[", 
            RowBox[{
             RowBox[{"Take", "[", 
              RowBox[{"datedPrices", ",", 
               RowBox[{"{", 
                RowBox[{"from", ",", "to"}], "}"}]}], "]"}], ",", " ", 
             RowBox[{"First", "[", "#", "]"}], ",", 
             RowBox[{"Last", "[", "#", "]"}]}], "]"}], "[", 
           "\"\<TotalEarnings\>\"", "]"}], "&"}], ",", "windows"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"matrix", " ", "=", " ", 
       RowBox[{"SparseArray", "[", 
        RowBox[{
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#1", "\[Rule]", "#2"}], "&"}], ",", 
           RowBox[{"{", 
            RowBox[{"windows", ",", "earnings"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"window", ",", "window"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"centroidMatrix", " ", "=", " ", 
       RowBox[{"SparseArray", "[", 
        RowBox[{
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"#2", ">", "0"}], ",", 
              RowBox[{"#1", "\[Rule]", "#2"}], ",", "Nothing"}], "]"}], "&"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"windows", ",", "earnings"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"window", ",", "window"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"MatrixPlot", "[", 
       RowBox[{"matrix", ",", "\[IndentingNewLine]", 
        RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Epilog", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PointSize", "[", "Large", "]"}], ",", 
           RowBox[{"Point", "[", 
            RowBox[{"ReversePoint", "[", 
             RowBox[{
              RowBox[{"Centroid", "[", "matrix", "]"}], ",", "window"}], 
             "]"}], "]"}]}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SMA2StrategyPlot", "[", 
    RowBox[{"datedPrices_", ",", "window1_", ",", "window2_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "ma1", ",", "ma2", ",", " ", "currentDatedPrices", ",", " ", 
       "strategyResults", ",", "plot"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ma1", " ", "=", " ", 
       RowBox[{"DatedMovingAverage", "[", 
        RowBox[{"datedPrices", ",", "window1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ma2", " ", "=", " ", 
       RowBox[{"DatedMovingAverage", "[", 
        RowBox[{"datedPrices", ",", "window2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"strategyResults", " ", "=", " ", 
       RowBox[{"SMA2Strategy", "[", 
        RowBox[{"datedPrices", ",", " ", "window1", ",", " ", "window2"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"strategyResults", "[", "\"\<BuyEvents\>\"", "]"}], 
          "\[Equal]", 
          RowBox[{"{", "}"}]}], " ", "&&", " ", 
         RowBox[{
          RowBox[{"strategyResults", "[", "\"\<SellEvents\>\"", "]"}], 
          "\[Equal]", 
          RowBox[{"{", "}"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"plot", " ", "=", " ", 
          RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"datedPrices", ",", "ma1", ",", "ma2"}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"PlotTheme", "\[Rule]", "\"\<Monochrome\>\""}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"FrameLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Date\>\"", ",", "bigFontSize"}], "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Price\>\"", ",", "bigFontSize"}], "]"}]}], 
              "}"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"PlotLegends", "\[Rule]", 
             RowBox[{"Placed", "[", 
              RowBox[{
               RowBox[{"LineLegend", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\"\<Price\>\"", ",", 
                   RowBox[{"\"\<MA \>\"", "<>", 
                    RowBox[{"ToString", "[", "window1", "]"}]}], ",", 
                   RowBox[{"\"\<MA \>\"", "<>", 
                    RowBox[{"ToString", "[", "window2", "]"}]}]}], "}"}], ",", 
                 RowBox[{"LegendFunction", "\[Rule]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Framed", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"Background", "\[Rule]", 
                    RowBox[{"Opacity", "[", 
                    RowBox[{"0.6", ",", "White"}], "]"}]}]}], "]"}], "&"}], 
                   ")"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", "11"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"BaseStyle", "\[Rule]", 
             RowBox[{"FontSize", "\[Rule]", "smallFontSize"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"TicksStyle", "\[Rule]", "Large"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Black", ",", 
               RowBox[{"{", 
                RowBox[{"Thick", ",", "Blue"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"Thick", ",", "Orange"}], "}"}]}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"PlotMarkers", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Automatic", ",", "None", ",", "None"}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"ImageSize", "\[Rule]", "800"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"PlotLabel", "\[Rule]", 
             RowBox[{"\"\<Total earnings: \>\"", "<>", 
              RowBox[{"ToString", "[", 
               RowBox[{"strategyResults", "[", "\"\<TotalEarnings\>\"", "]"}],
                "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Return", "[", "plot", "]"}], ";"}]}], "\[IndentingNewLine]",
        "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"strategyResults", "[", "\"\<BuyEvents\>\"", "]"}], 
         "\[Equal]", 
         RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"plot", " ", "=", " ", 
          RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"datedPrices", ",", "ma1", ",", "ma2", ",", 
              RowBox[{"strategyResults", "[", "\"\<SellEvents\>\"", "]"}]}], 
             "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"True", ",", "True", ",", "True", ",", "False"}], 
              "}"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"PlotTheme", "\[Rule]", "\"\<Monochrome\>\""}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"FrameLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Date\>\"", ",", "bigFontSize"}], "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Price\>\"", ",", "bigFontSize"}], "]"}]}], 
              "}"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"PlotLegends", "\[Rule]", 
             RowBox[{"Placed", "[", 
              RowBox[{
               RowBox[{"LineLegend", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\"\<Price\>\"", ",", 
                   RowBox[{"\"\<MA \>\"", "<>", 
                    RowBox[{"ToString", "[", "window1", "]"}]}], ",", 
                   RowBox[{"\"\<MA \>\"", "<>", 
                    RowBox[{"ToString", "[", "window2", "]"}]}], ",", 
                   "\"\<Sell\>\""}], "}"}], ",", 
                 RowBox[{"LegendFunction", "\[Rule]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Framed", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"Background", "\[Rule]", 
                    RowBox[{"Opacity", "[", 
                    RowBox[{"0.6", ",", "White"}], "]"}]}]}], "]"}], "&"}], 
                   ")"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", "11"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"BaseStyle", "\[Rule]", 
             RowBox[{"FontSize", "\[Rule]", "smallFontSize"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"TicksStyle", "\[Rule]", "Large"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Black", ",", 
               RowBox[{"{", 
                RowBox[{"Thick", ",", "Blue"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"Thick", ",", "Orange"}], "}"}], ",", "Green"}], 
              "}"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"PlotMarkers", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
              "Automatic", ",", "None", ",", "None", ",", "Automatic"}], 
              "}"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"ImageSize", "\[Rule]", "800"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Filling", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"4", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "2", "}"}], ",", "Green"}], "}"}]}], "}"}]}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"PlotLabel", "\[Rule]", 
             RowBox[{"\"\<Total earnings: \>\"", "<>", 
              RowBox[{"ToString", "[", 
               RowBox[{"strategyResults", "[", "\"\<TotalEarnings\>\"", "]"}],
                "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Return", "[", "plot", "]"}], ";"}]}], "\[IndentingNewLine]",
        "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"strategyResults", "[", "\"\<SellEvents\>\"", "]"}], 
         "\[Equal]", 
         RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"plot", " ", "=", 
          RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"datedPrices", ",", "ma1", ",", "ma2", ",", 
              RowBox[{"strategyResults", "[", "\"\<BuyEvents\>\"", "]"}]}], 
             "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"True", ",", "True", ",", "True", ",", "False"}], 
              "}"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"PlotTheme", "\[Rule]", "\"\<Monochrome\>\""}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"FrameLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Date\>\"", ",", "bigFontSize"}], "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Price\>\"", ",", "bigFontSize"}], "]"}]}], 
              "}"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"PlotLegends", "\[Rule]", 
             RowBox[{"Placed", "[", 
              RowBox[{
               RowBox[{"LineLegend", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\"\<Price\>\"", ",", 
                   RowBox[{"\"\<MA \>\"", "<>", 
                    RowBox[{"ToString", "[", "window1", "]"}]}], ",", 
                   RowBox[{"\"\<MA \>\"", "<>", 
                    RowBox[{"ToString", "[", "window2", "]"}]}], ",", 
                   "\"\<Buy\>\""}], "}"}], ",", 
                 RowBox[{"LegendFunction", "\[Rule]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Framed", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"Background", "\[Rule]", 
                    RowBox[{"Opacity", "[", 
                    RowBox[{"0.6", ",", "White"}], "]"}]}]}], "]"}], "&"}], 
                   ")"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", "11"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"BaseStyle", "\[Rule]", 
             RowBox[{"FontSize", "\[Rule]", "smallFontSize"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"TicksStyle", "\[Rule]", "Large"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Black", ",", 
               RowBox[{"{", 
                RowBox[{"Thick", ",", "Blue"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"Thick", ",", "Orange"}], "}"}], ",", "Red"}], 
              "}"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"PlotMarkers", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
              "Automatic", ",", "None", ",", "None", ",", "Automatic"}], 
              "}"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"ImageSize", "\[Rule]", "800"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Filling", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"4", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "2", "}"}], ",", "Red"}], "}"}]}], "}"}]}], ",",
             "\[IndentingNewLine]", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"PlotLabel", "\[Rule]", 
             RowBox[{"\"\<Total earnings: \>\"", "<>", 
              RowBox[{"ToString", "[", 
               RowBox[{"strategyResults", "[", "\"\<TotalEarnings\>\"", "]"}],
                "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Return", "[", "plot", "]"}], ";"}]}], "\[IndentingNewLine]",
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"datedPrices", ",", "ma1", ",", "ma2", ",", 
          RowBox[{"strategyResults", "[", "\"\<BuyEvents\>\"", "]"}], ",", 
          RowBox[{"strategyResults", "[", "\"\<SellEvents\>\"", "]"}]}], 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Joined", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "True", ",", "True", ",", "True", ",", "False", ",", "False"}], 
          "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"PlotTheme", "\[Rule]", "\"\<Monochrome\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Date\>\"", ",", "bigFontSize"}], "]"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Price\>\"", ",", "bigFontSize"}], "]"}]}], "}"}]}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"LineLegend", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<Price\>\"", ",", 
               RowBox[{"\"\<MA \>\"", "<>", 
                RowBox[{"ToString", "[", "window1", "]"}]}], ",", 
               RowBox[{"\"\<MA \>\"", "<>", 
                RowBox[{"ToString", "[", "window2", "]"}]}], ",", 
               "\"\<Buy\>\"", ",", "\"\<Sell\>\""}], "}"}], ",", 
             RowBox[{"LegendFunction", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Framed", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"Background", "\[Rule]", 
                   RowBox[{"Opacity", "[", 
                    RowBox[{"0.6", ",", "White"}], "]"}]}]}], "]"}], "&"}], 
               ")"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", "11"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
        RowBox[{"BaseStyle", "\[Rule]", 
         RowBox[{"FontSize", "\[Rule]", "smallFontSize"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"TicksStyle", "\[Rule]", "Large"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Blue"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Orange"}], "}"}], ",", "Red", ",", 
           "Green"}], "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"PlotMarkers", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "Automatic", ",", "None", ",", "None", ",", "Automatic", ",", 
           "Automatic"}], "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"ImageSize", "\[Rule]", "800"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Filling", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"4", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "2", "}"}], ",", "Red"}], "}"}]}], ",", 
           RowBox[{"5", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "2", "}"}], ",", "Green"}], "}"}]}]}], "}"}]}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
        RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"\"\<Total earnings: \>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"strategyResults", "[", "\"\<TotalEarnings\>\"", "]"}], 
           "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7829426136644373`*^9, 3.7829426325106087`*^9}, {
   3.7829427003176003`*^9, 3.7829427968055897`*^9}, {3.782943443583569*^9, 
   3.7829439219887857`*^9}, {3.782943969939996*^9, 3.7829440474382353`*^9}, {
   3.782944968598695*^9, 3.782944989109934*^9}, {3.7829453177398863`*^9, 
   3.7829453711295843`*^9}, 3.782945534557445*^9, {3.782945783581388*^9, 
   3.782945798043124*^9}, {3.7829458482956448`*^9, 3.782945849644623*^9}, {
   3.783093020190452*^9, 3.783093040324933*^9}, 3.7830931972888308`*^9, {
   3.7830934485188913`*^9, 3.783093485271656*^9}, {3.783093618199958*^9, 
   3.7830938147058277`*^9}, {3.783094004255475*^9, 3.783094105636403*^9}, {
   3.783094698977253*^9, 3.783094699159165*^9}, {3.783094793835369*^9, 
   3.783094805120523*^9}, {3.7830948736271143`*^9, 3.7830948938879623`*^9}, {
   3.783094927626992*^9, 3.783094962855626*^9}, {3.783095005210589*^9, 
   3.783095028876356*^9}, {3.7830951986315002`*^9, 3.783095242925398*^9}, {
   3.783095318483807*^9, 3.7830953953744793`*^9}, {3.783104157935446*^9, 
   3.7831041624205647`*^9}, {3.783104367000463*^9, 3.783104369933978*^9}, {
   3.783105361185523*^9, 3.7831053657447567`*^9}, {3.783105442103232*^9, 
   3.783105493631042*^9}, {3.7831055577745657`*^9, 3.7831055901422853`*^9}, {
   3.7831057722545137`*^9, 3.7831060158954697`*^9}, {3.783106215558392*^9, 
   3.783106305711852*^9}, {3.783106756727466*^9, 3.783106778574486*^9}, {
   3.783107359831112*^9, 3.78310736045865*^9}, {3.783118033442477*^9, 
   3.7831180375952263`*^9}, {3.783118068722205*^9, 3.783118114679346*^9}, {
   3.783118184965123*^9, 3.783118187894215*^9}, 3.783118290811928*^9, {
   3.783279918160943*^9, 3.783279931117201*^9}, {3.783281040922377*^9, 
   3.7832810418160753`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"cf2da8d3-1706-472e-88f7-4efc37b36216"],

Cell[BoxData[
 RowBox[{
  RowBox[{"partitions", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"First", "[", "#", "]"}], ",", 
        RowBox[{"Last", "[", "#", "]"}]}], "}"}], "&"}], ",", 
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"20", ",", "1000"}], "]"}], ",", "401", ",", "1"}], "]"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.783107069925282*^9, 3.78310709400476*^9}, {
  3.783107193305163*^9, 3.783107222611196*^9}, {3.7831076023452253`*^9, 
  3.783107648973508*^9}, {3.783107682986618*^9, 3.783107694509487*^9}, {
  3.78310944289116*^9, 3.783109447654182*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"4d58366c-3218-406e-a795-57fdb667cff6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MakeEarningsMatrix", "[", "\[IndentingNewLine]", 
  RowBox[{"datedPrices", ",", "\[IndentingNewLine]", 
   RowBox[{"First", "@", 
    RowBox[{"partitions", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Last", "@", 
    RowBox[{"partitions", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", "200"}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7831094867933207`*^9, 3.7831094876255293`*^9}, {
  3.783109521554964*^9, 3.783109527176207*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"4b0cf80c-9889-46b4-a266-4e10c8b6dd88"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    RasterBox[CompressedData["
1:eJzs3XlUjW//9//MQlISKZmKzFOmwssQEhESMpNZxgzJVIkkMssUknnKlOFT
mUOmREqlud0+9z7PY8uUjLfv+v3+uf/Y97o/63tdt+u6vi9r8bDesvc+z73/
eq7jOHbDyfOGTS1nYGDw8P///V9///9+vQOllFJKKaWUUkoppZRSSimllFJK
KaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJK
KaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJK
KaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJK
KaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJK
KaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJK
KaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJK
KaWUUkoppZRSSimllFJKKaWUUkoppfQ/33ep3ztf8BYI6tuyvVm6gpUxLY7W
Pab546+LUkoppZRSSimllP7P8tOeveocfwWq2N2Lp5wU+Lxpa8mazro//roo
pZRSSimllFJK6f8svTObXklZJzA9CJXNuwrEPwx43fWA9o+/LkoppZRSSiml
lFL6P8v95968G14iY36Qx27TMQJ3bLp6fK6s0zv/06+XUkoppZRSSimllP5n
mrTRfMbCIwJu7rEOJq46DFmhGp4QrsOziJD1LQwVbOv3fI7dVIHJoepTH6uz
U1FKKaWUUkoppZTSf46rxi3LSQsWeBc04Xp0T4GPvT+MLnNBC59r3394rhV4
dKbSvqttBKSCpGEZa/XP//R1UEoppZRSSimllNJ/b9ccdt3VYZ5AS5stFhva
6PDEKmh11/U6vXP716lBpyIEHA5u9h7nosOWOUPsW+zmOitKKaWUUkoppZRS
+t/T3unk0hVb1Khn2yKpfpYWWzoPy5i3WdE790oItgqIFvCcWKnPIncd2r76
GdzsADsVpZRSSimllFJKKf3vmaMUN/T8qUZla8/srlYynHs3uDnykgJ/216e
n+NU+Hl26svZrzUY+HIUrhfL+Koy6bwoUY3YoC/e+T+18GubsUB9WPnj10Ep
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
UGDDh8kGl0b+nnuOP186TMKgyBrh11wFinRX9jpNUpA5q4Xb29kSQiK7bUqY
KHCgel6TvicV7Dk74pNtUw2OGw6wejxNIDv/+7qytxSsyQrNGDhZo7dffRnr
033HUIFus6rsS7TW4Zj9rPr9VupQvlVxwIjeWpivaH7d2EuBzYBdTVssETAI
KTPOq6IGmjVbt/tekPE89toTw2pcZ0UppZRSSimllFL6r+qYCOXKykECCXti
4yLGKkjaPWFiwgQJiqnZqqTJApUPh80tjVaQFze8UltHDcqbJdstHixglmlo
a+SlwKGH3YW6iyRcvuDQNnOAwKy//M6cHaZAWv98nqavhHPmx2akDxQID/M4
1dFTgdc92yH+o/V3rYzctquejxKY3fimacuNCiqZzZ+cmSahyzTH4x/nCHiO
Tjs+MFWBbX5rp7cRGr3ziXMrdJ3gJ7Di68jx940EUuxCncJaauHecmYrsxEC
dap9rXy/gQ6G3u61Fq3iOitKKaWUUkoppZTSP23As/xyC8YIPCxjYFNvpwLR
2GD4tfeS3n5Vb2GqzfNuAppjb66Pbahg5v1PGUfuq5HuXzXlpbNA32bj4xIG
K7h5eUP9e44SsvqUWbtyiEDXuU3NPk5X4GUyt0yvlRLMTMKeVf39OG/tvoQv
t1bwbcxsuXG8GnGncuv59Ba4Z2Ouju6kIOzX8t7WP9Qou/GQY/3fj9N42Y9n
YdMUXD2uc4v0lTBtwpgr3cYJfDX51UG1T8G6iUnbxpfXoGRWrZ6BiwQee8yO
Mn33e16UqR2SrUGuSeC4A5sFfBYF/vTzEHjdf0PgBUn7x98HSimllFJKKaWU
0v/pTtlw/rjlLIGjIUs+BT9RELHzp3FOgAZnqkiRnVYKaB82u3bDTKB71/JX
T/TQIvB4gNWjYb9/Xj3m+XQfBY9D7m+NOiDhuGj4atbvedj7diHlFimwbtg/
t8JeCT8fngpd7CzQpoP9ssmuCkwGVp1n20V/v4ozDVx30EVgaddxT8NGKBhZ
PHrCLFcJRoOqO2ZNEPB4h76pRxV4z58Y6GCtwZFvRxp29hLo0yw10ilGwY2v
tSt/ctbgV8DhEdtXCPwVfzdqqKnAs6mJR6d00SK8R79N8dsFEj16tc2aKTDY
t3CflZX8x98HSimllFJKKaWU0v/pxgYVOk3cLnB5Ym2t7wyBw8bTtSvryOju
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
69A+Y2rDt7dknEtYNn1ANwEHr71XTn0WeueHjEZoGm4pQlTHGSO7uGrh8Cjh
wbAuCmosvGw/+KKELpVbFxb7y2hs9utxok7Ru45Iq4pe1S6qCF5B2xzDRmmR
vfWS2hj6u1aaWb2PTrKEtBnfAq5EyqhuFDy5Tznxt/uVy51f+UlPC/B+Rd1R
pXES8tY59TEeKMPl9tTiJHsJjzM7G5dzlJFU9uaEI/f1P46+rvV9d1GOZoAG
MQNvPI5KldElZV7ktUYCmzdvNnTrLkMkm09VihUkzjY3WJ4o4N5yZiuzEQJ1
qn2tfL+BDobe7rUWrWKnopRSSimllFJKqX53ZEUHNTHTop/ZrHsfByiIT1q2
//g0gZsNOh9KtFcgr695JGmlgLHHmbx99XR61yPp61fL3nRdkxuiQZV30/qO
+y5D1eOpzcYuAntHr7yUVVWLYXGDNvTrq2B/cMm67CkCH7o3XJGlKKhyM9t2
rkpgQlCPXQ/G6PCj85DZ1jsFmrh+e2o8T8CygVX1g81kfLJKckldL3A66PnE
/G4CaRUcw+sd12KXbVPUipWx22Tg3p1dBfzcy+0y/iT+9rxBqqqXapOMeydD
ji6vL1Azs7BKaKHA+W/j6u0YJfDxrLTkZiMdZh/tUfXQah2MzM7YF+/WwOz7
Bdeb5RQ82FU4Wvx+XevDX3R12q+Gtl4X34cFWphdi1N5bVNgoayZXPGUhH4X
apzqs1JG2ScrY8oq+vvV9g5G/4u9N4+rqf//fkOiSYQGZZ5CZQoZX4Y0oYxJ
NKKQyFBUJClCZChSSTJUylBSoUFUiOIKzfMe11iSlNDpn/M4/5x133fn+J7r
3L/f+uv5uJ7Xttqtvdv7sZ6P9+ezXkV20XCqPlDywp6FYPcz12zFJvT+IPVv
n0jj294Ho2tEDN68O/LE4hWLqxqpqV1tElSQ6WdsT1HQ3/oip96GQd/BqQNu
LSGR1xp1oa2Ehto5Nri5+/f7Ntt6omgthZ+Ttk/d7cbAuSJ87XMfFpnG892i
T7C4/uLxwCZdFsGDPn+9fpTiPP8Guw+HjX7N4lLpfdECxyZcWLH898vbTUiU
DdO0vchissOPuXUOLHaFtbmkyfL3B+TJkydPnjx58uTJkydPnjx5NqO4vSgm
+1gtlJleKoYRYlAfd4a4uJG4qPMu/FIfAfK37L/y7ZkU2bveZ45KppAfWleo
v7ARTNGR5x/MpVj3/S2O7KFQ03I3TWu+BJeWXOzQGU5BeuXIuFdaDNL6HNi/
dyMNGSrJI1mGRbCWya7Fn1jO++itmD+vY16pFKd9+6oH96Xx55Hx0Zo7DJpu
WgR625CI7Ghd0quBxpHt+4tMdVh8vuF/38ueQcMq4aSvYSxUr9QdapnSxLkO
ccrXRJedH1gE6L0bRW1vQsrlAtWzcdz+UWvom4gsCgKNvX5ZCQz2d4S/vnyD
5dyHiqtfzbQTU/oXCbgnZbQb7qUR/a3D456QgcyZXrbb5EiQfhcveyXT+JCZ
8V5eieXsV/EDVg10F0vwfcHRIb18KVAlWaGrNzDYcSgl5txCCjKvf1GbHRls
m9vV78JB7q41WyUz7O5ACjv3e1v9NGGwOfz8Xe/tLBRq7l0SPJWivCzrx8nv
FAxjyo2toxjs7acflz+YBfXBv66yk8WdJ5WKJ3Y04WDGr982ASzeJvWLTJ/K
ghB+XFsVQGH2h7n7wk6zGL7/8TKvZSzWqjU/W5TBPRf3t97P+oP/TPtRzKDx
q5Zp22cWtfmeSs5rmjh9Q0l5YJUvC7tPI8d9HcYiz6zt9D8WFKdXu63y+4I7
i2F3tXyau1+/wRGEi81L8l//O+bJkydPnjx58uTJkydPnjz/K3D6xzKRpn81
jm/ZvFxfQQw9HcHcYnUSRnF3pt+xqIGufm+v38vEmHpyh9qkeSSOKs8yXn2y
Hu+KdvpmrZXAWU7uvUoViWSFGXseLBUh9KnOsv4yJOx6S1TX7KcxWaCZ7XmN
gFOf0pmSAzRy5vuc3S9hEDXd5vmd1wRmul7R6X2exoTUcLW2Nga3J90dodRE
w1d/7pZtVixiqtMX68s1oTbxySQFVxLH4qZm2JI0sr8fbC/X455TMnr5y65m
mxR5AvG1Q/kURG7nb705xsA4buXXpyIKThmvTF1fMMg8s19+wH2W03PtN841
f2WQ/DjMrI2CsfOf7NdvGXQN8zCITuHuWhuFm+U0jzIo7rcr/uFdFrN9f5aJ
ZvW8a3F1J67zr6wp/h6SxKDaf8evE7ksOovygsuWN0Ep73TGsFwK2c/s2PRE
Bp+nn8h6EcPiueTuLqePFHZs2Nx3cyqDZ2R5duMdFjkqjXJXz7Bw2L8sytiE
xc518UfGvKRQ2dZnodXx7uMmbrxoOY7FNb145WkuFNaZftZ5vpdFc1mF15sG
Bq8LJqWPe0aCdq5qGOvEYpzG8kETdZpA5e02L/Xv5pOZrvMiWdRGP88df7L7
OO2xmxK309gprRSpPGKQMc56l+8rFrZyD/1lTZp67G1jvpBufixSzz152DCK
hVtzSqSRHQVD5/lxrbtZ2Gwqj1tRxmC8QN+oJppEyJIQg3obFmkmP5s7ut9n
ds86e09iCE5Pp/2B1mUWkSurtD1cWDTeSTxTNpSfH+PJkydPnjx58uTJkydP
njz/73g8SW558JNGuCR5D6k4L8XUBKu+1BUK2xa9ziwMaMCxguXhYY0S7HV0
jzg7jdsHPBq3e8nLBnS86X17XV8pnl0STJi+nMLRyw6LxMJ6DNCN8jQIksDQ
2vfBl58kHF5uHS1n24jDaqmmH7ZI4b1ozG59Lwqmi5vO/VKVYHDsguk+chSi
+95qNB3AcHptheUXHE+RmGpxqMzpJ40AOYG+3RyWs2vlJRBr5N0ZFHSOiFl1
g4XVhMZY/+lNUBt7pjZ/OoUZxU1LH9swaMi4/CvCncW0k/JCly8kLvzZs+no
BAZD3liLL6/hPk6m/vBxaw4zyFi7oKrzFotDe7ZmmBtwe0+VZb9iVGm0KxnX
vq9gkD9FsGtsJouLTvuM5l5h4TLV6/qCAyzG2l4d6WNAo/ja6oLgVgJvczSy
t8bRmLpB/rCiHMu5j/rz5Q935ZAkzjiWRZ2bwUBtR8u0HGsWZee/dj44RyBU
4e2ZRW40FjxX8TsqYPBifb3LjJMs5vhUtCbNZmH53TS/tfv94HTwhYx1LIvq
ZsUB8jdZGAxodI5MpLG0zdNkqTOJnS29qAQJjS5RTflCXRaL5lcs7ngowQzf
G8I59hS2qo5slV3GoO9BlwVG3a+Hs5diyKN1LOrfjxp9WbaJc72nb/j3+3Wr
aJT4raky62Sg/EtjisJHFq6PlpZ+v0njREfq6X8ms8i4XTLFjGZhHVztLHOJ
hc0u21WmW1lU7Jjm1alAc/o+0ZpvylIZFFcEzplRwEJbzTj2hmkT3LRKgq92
n3/f8bcaYw6y+FQw9KOmIc3ptTrdDct3df+3Z+GxNR8Y/NnR6T78DIkv8UTY
yEMszt16cCj9N4PD0VdVinpTmHzv06wSDxYWv9c/e9fOINjxip1MG8l3LZ48
efLkyZMnT548efLk+d+aw8xujHpA1GN8w9tl0jMS/HAZWuz+i8RC803px4IF
GE/c276pP4HaB5vvj6yj4DJXVUfeVIDvsQN87zZIUaw0ZNaoN9z9iqtTBSdr
XwrRaITZR3VH7dlSuEZVftN3opAbfOtI3lghCkN3R1XaElg45tGvpkE0p49T
mEo8q5Bi26jvASf70XAgph1QiOPuWnJkpIfKQBH8DfpOdxUQYF5bNFk60sjY
69i29gmFr7lrlqvcYbAmWT3lXRSLRWeCXtn1p3BIy1Zr5TIGc1crX0xx4u48
UVgMXUUSMrNzHPRSaZx/b0nfVmY5fcCL1ulH6wkouLMVSlE0zgRrb7ToYnAl
78Cgg4NJtAZXR1Zl0Ege8k8vt4Hc82M7BDHj9kWSYK/ffP60LwOdDx8stRax
KB48vrgtjMBJR3E+vY+GbZ+LYcvFDMw+rPDYeJhAeJyDiX7372+o5TlrbTUD
a5fqj7tWkbjIJMy9UUEjQtkmXDSW5dxf/W5WeoTORQYXNoYGy6WwqDaWtMcu
aMJhx1bFkr0kwrbYBg5iaBztq6RxcCqLJtfl8s9LpLhfPTThYh8aUYe3nHp0
u/vfD9XrtBomxZIvtYEbIylkCHs35jgz0E0PyGudx0KudWu7jGoTTLLGJiZ5
NGHGapkd8asIxDaEvFA2o2FQtTSms4iB0YJ/nE3kpDgemHpT5gKFwdpqub0d
GIz+lmL2bQgDe1QP/ceVhVhpfRrRfbye+o6moFW5niw87wfMWPeLwRsDTXv9
LhL9BSPKPAJZKIUE7hLOZNE6euW29BCKc06sp97eR+H+KRcWih9XD3r3kkFt
8ukFp3fy6w158uTJkydPnjx58uTJk+d/LQ5+onvh661yjNrUFLu8Qgi7rFu/
s8MJlGY5XvvSWo7ir/FutTIi2LzJHDQ6mEDS5gI4j67B9/TNpTPniPFxwJjY
kBncXSskyeV3UZUAOUn1xnqzCBSa+J5/1UFBac98+0VrGnFveNyNCVZS/MhK
c5jrQSFRfeyayvAGLFRzP0IzEqhOtn1uOoeCseVe2RNNjZBTNk2JeiiFZmxd
5NZ7FGSJW5a5T4Uw0Gs+EJtCYFH2xjFrjbi71nKzl2YHtgih19hZKTza/XyW
Be/8OY67d41cl/+oqEaMs21RDq5SEge1k11df9FQs3i4tdBbgnslXYN1llAw
nKR3dOJ0BjNzrml+nEtj8PSJP1qaGOyYqauw6i2LlrXjprZUUAjNSbvx8ikD
Q4V+fzQSWPhJ1SenjaOg8/L2vDXrGMg4+ryes5vF2p0h5Q6BDF7anRLYJrLY
VODD3Dds4lzPGD3kmuqidSIcctn6dJs8iZhLxMKGQzSey4pd6790n8eQpdG3
D1JIWPp85wtLBsGhaVf920UIihDEfXAmcVIi3rb9Ic3pKZ8tzKo6ASItPqZO
nENAz29HQPNPCsEjZNKLtna/P4ZGT81VJSEYQ+/Yd5RGS5uOllyZAPE/Ury8
ZhBQNJTs0WmnsCVO/1RfuQaUnRq0lYmQIPvwCdm2vhQKVZLaxQaN6PC09xtt
LMW0+6aTU10pTFkZoHznhAhS2y+ZL8aRUNptFDY2iEZJfcExnygKWlkdl2Wv
MmDKL+87EMrdD0PUM88nx0gQJIgtCrWicHTT25bGhQxn7+LyPe1aurMlLhf/
dL8/srR+ehQzGLW1zcz5CcvpuXoXl3fs8/B1cT2DPo9DhyvVsTimN8Fx20bu
3vVvf97w5MmTJ0+ePHny5MmTJ0+e/yOO+257e7lWOdIiDqfYXRHCyVFz1sAH
BPxHzJ3X72w5Wj39HAYXCeFRIyq/GcXte9q1XOdvuJdwthrhg06rNiqJQc/x
3rRTk8Rrk/Y2Y5kaqCiMdijTEyPYd+ShLl0Sx29+Sh/7rhJb0qo8R5wXoV3m
htyQYgIng3od7O9bjwrPlctULCQwyg5IMyknObsWl397Vkkl45sQn85lDXL+
REAnvT6jcCPd/fPkk8SzRSh4oRVh30Gg8rhPvy17aAyzka8gYoTYohP+8upt
AhWiTw0d82kgf4yDkZYEfTs27Z6kSOHFqnHtAwcxqGxWH5ubKoHpzKJkypHC
mDFpg2OMGKiVt/sPFYtxdNWzSE2GRNi2GcdndtF4ohYsKNrRCGOV3K+HtkrR
lX3u0NijFAY6CfeohjZgguPSh4aUBOuGFUTen0XB56bxy906Dahsy3tg/0CC
m+6zAgIGcfef6l4T9WLVBQhMivI2L5Bi68ynNTXp3H7Yh0INI9MG7MCv+fYv
JHj79Nyj2doU6getnvk2uhqvfYRJZqpi7N4YH35Dm+R8/FX31BUtk+qh80ca
emqEBOFD3z3pn0mCtGZPl5bVo++oNXtK/CTYKOPstb+N28eO8dfK6GrAvnc5
DwfpSCGXZ/W4dBP3fv5c92Gs/6pipqIoRfi8xj2plyiUTLlff92RgatlSPz6
7te7/qDxWfV7NNhtMVfv9mM5/UPFiSry0wg8maiw1NKQxsBvExf3z2P+mo96
UNG87gcN90Crq6qbWbwcN9eqrX8Tp9/5SXHvvMMsPgTqmgh7sThRpTo6QZmC
7mZF65a7LHTbEuMVLZuQnPrR7Nu1bjqa1x49xCL2WnmmVheDCf3VXrjKUQjq
3frS6hwLdfv0soQ1LH7HDHWcWEP9659bPHny5MmTJ0+ePHny5Mnzvya5uoRm
c3LyvNAKTJobth+zRSh8OvFx1TWC0zfurzuXEVKO7y2L3e0/CHHD+/phcSS3
Dw0LEyeXlmMdMS1geIsQqxcND/x8gYAworeoX2U1UmftmtJ/rBgheNV+aQKJ
DPfJic9nVsPZ0Fu3f6sIZ0ZFRNxWIDF+UdGKU+MrIV6dNnG1vQgJUy9NXZZC
cHat0Dt/Mk821+FIq+GM/b0l+LjtlYF1IgmZtIOvHtypQtY7x5ON70TI+dBe
/KaFQPrpH/eaR9TieluIYrWvGMd/DDAcb0vC+6Gu8TfXBsTlMuIznyWQP01v
mqlDcfaTrhbjUJc3dci8PcBC64cYU6JKB0feJqG4O+mdoLARjiqCjUSEFNPN
mi3VoilOL/ttz/STmxoRdTCv8rONFBpyhp69DlNIulFTXXi0AW/8nTNjaiW4
1xz5YLo+hfOnO65Zfa7HZF9HmXJfCb6/9jmx/DuJvttWbLc4XYuxsVOrqSgx
7tXLPOy9l0QsWxdm4FaDL2/+hMSsFGMostVXgETUsUvfC17Vw+jjhDM+HhIk
z/GyftLUfd5aPBUN+zTCwu3hcKXJUuz8tTihz+bu5588ID9iSD10I/3WHFKV
4IrHdNeaVO4+ydUb09fb3XqQVIVwtzWt1UUijO4vyPv+jcDTXe9PblpZDz23
qPqO6RIcUT466+prEtXHNLfk5jegZFfLIIt+Umi/K9K2M6agYUUlG4SK8F5x
4Mzh+iQsfhm/eHyORt/BqQNuLSGR1xp1oa2Ehto5Nrh5JMvZtabl58b1/i5C
Uvu3uV+2kRj38Ncewwc05+P/lufqVymFjQv6fSNxJKO1bP4cBnMeHTA+tZn7
8bLiCU0lwSyG1Q4NN1nchGbZmDrdi02YteKioaEvi6lvnw4M0mCx0TPzcLAp
xbnPPFfXWr3P1vhpAIv62On1WtNZXLOw7OMdxHctnjx58uTJkydPnjx58uT5
v8bFy2+PybYUITL/wIpd/UgssukySfWk8eiKwuj1BkI8WBqnOseFwLGUlIl+
6ty+V1X4YxWLWsyRJtjqBYtxql1kobKd5PQJSzswfXYVsjqW/7BPEqFizn1Z
lXqC03P1jUWR9zVmppbD3vdxzrwGIbrM5MSzrhBoqorbu2JhNY4wcR3P20Qw
mzb9GZR63rsWtiQ7HH5ZDfECW397bTEUczYy18eQnN7GxnXiU+86eGu0Cyc0
iIHGhM7zV7n3jZ80fW371bB67N/hHOawWYIVOZuLpteTnD5MNWlFmEoDZFt2
/14fI8GC8ORluvIUZkz4pvdMvx6LHqs5zR8twcbxTl9uZZHYmU9WPpjbiEG6
51Z9MZWiObPOzNKNgoeBg8b8gw2I1FAcM7dCAt1/3PZ2Tub22nFxoxRl62HK
LK8aJi/BOpH+4lUPueemYhKVppUn1GGwguqcw6wYywV+ql43SGT1nrXc4kIt
upaNNBdHi6GsSd2e6k7iVshinXdj6mAM4s/KN2JUF75dUBjUc881f9XuuFkz
pboGnyOGjRy7W4zOUvlG2bXcrwtX1/pbvqe96/4luiN6ogjDJ4w8kdlMoPXN
eLl5O7n31ec6DlfX4upXW+5X2l3ZzcJo6wMnyRcGHl6PLi+KJLF6c8L6yiUM
Wi/bJc4IZNF0P0+9a3QTxuTRJzZfYCGyd2kYZMvCwnrR3ZKfFIbd0qycd5VF
0lT5NvlDLBBh2WC3iMZ63Z16Qzaw0FD62T9/VBPk3dYPPeDLr0/kyZMnT548
efLkyZMnz/+uJHZkW6q2SaH2esHts+o0JvyMTgh5xHBeF3P5pSYz0zRKhRB+
mnM57iWBPh/yrctWcXuursLl9RInyPSeU48ZCgbXifESeLsJSNcXJMZPsykx
Qz3GOa4pvzpZgsgn22QMXnHP7XD5WuN++ccflsOu97eHbK0QX5IsjL/+D3pX
0bPqRzp0Bbao3rbWtBRB959++2PiCWw/6VhxpKsK60YJtYxEIrxx3zmttheJ
o8O25CT2r8OimdFt5Asxfu1P7ucSQKKfe+wGb+M6uMg4fXYqEePoDK+Lb85z
+7Ody5dGaVZji+7UcXdpERLeHN++RI5Eh8UpkfHreozar9bucUiCIe5bLRqb
Scga6WjtdKgHk1mQt3qhBKNLd1qtLyZx6Vrce5uZdTC8Ijev870Yf1RXrL10
ltubL3j4ScWkFpuNnzXNOCPG+Bed1o1bueedDBdnXR1bUglD63dCjQsi2Mw9
/WvxBwLjd0z5fbKxDnmPNlkd/SOGUitr+ieehOfFBGW3olqs9tI4rPtIjPIz
V+IOeP89377FbWeRQgOYBZh287oER4OGjbvYj+L0XP3qb/meznf1dO6Ly3N1
LS7P9XMbTYJG7fnDgN09LKqwiUXs0CW5Gx2b8F37o3nZKRaJgR8cBN0/r7zv
/PDhcRSsHlMvvaxY9KdMnDf5M2juM8mRyCWQqM6q2e9k4RU9xvXFWwbLXvZ6
GOtDomHQCdvr51kcPHDij0/3vys1OX0imeDnsnjy5MmTJ0+ePHny5Mnzvzrv
LZl29k06iRgjojJ7KIOmuoUnY0xYzNj9fu+TzwQWHmqYti2MhpxS8opNnQyn
P1i4uVTpKwF2+KTVO+/QKNIe6V8ryz0H8ijU51zHfSGcDQSFHYkEni2k1WwX
c/vbP+3GHntej7Ve8pZF7hJcaPqxlKFJTn9wgndo6rQGFK1qJJQfS/AyI+3a
yiEUpxfe95TNRRW+PDiQN/ihCNdMjMbda+Ce48quGbiBkVTh5MSy/ZG1Iixv
/j2O+E1g/eapnoXXK7CYfYlvhiKceZtd4hlJwL2KnhB3txyJqc8mXqsUwuuY
/Ie14QR+9PH7uelJBZQlH6SREEHZfHKt6w1uz9XHdHTc1qsmleOF65rpi2uE
eNDnyz7vq93HUR/zw66mHIWB4hFO34U4nTbh29sQArOU6zqe7CrHgqzA00uy
hDCJVliWdJPgnCv7Wh7vcuBmDST1oTHbNotRxrLHB5mSWFAt2KF1oALLz9r8
atQVIWjS+KAVoQSmVX4wIyrKMINOUnDwFKKz00JuaQYBzyM/DRi2Co5vC+rD
6kWI05EOU+sikO425Zbgag0+THH59MhaDPW6jU6exuRf81z9rb46bcop3Uq8
arkTZu4ogtKOI+PdHxNIvdTke+lCA1bkrF2yiJDga0PVHT8DCln+5RFdJ8Rw
WBU+K/4JCafKD/GLa+m/5rXXzB5+YKMES6XlGvp6FB7EkTam4xlO39Ou1dPe
9bf6Fddc1slTl0Yo7Gex3/dVyHGSwbvFgklfPpKcXYtrLuvf/hzlyZMnT548
efLkyZMnT55/h3uu9HVadpPCjP0THTOuMUiSTr444AqL18fmFHjcoWEXefvH
O10WWjWZoz0Zbt/TrvV+vmnB1EoSdx9HTZg+icGnsqa+U9exnL5ePnuSSyCB
2MeJlhd20Bh24PyuJ/UMZ9c6Euj9zP5mPRY7Hlgk7yRBMV6XTxCS2O7X58kw
jXr0W+ies2+IBO33tRwV0ki4rpY9MWlXHYJyKxMOV4sxIkJHXBBKYoScX8JV
QTXekVfbn48Xw9LSRkNfp/s6et9vt4lMNRpv5Ofv1RFjgP3XOW8nkWBZrRDZ
W5W47px86bW/COsMU0RWrwkMfGp62EdSjvqMhYYbfgpBlCXMmn2eQMJPSmO2
XSXCf/w23rBXBPfFMs5vnnN776s3e49qKYfRlRrpmS4hILdx8blgAnPn56cl
7y5HSo33kHnZQlh5bRlke5OA7NjZLqNjy+BZ0CQctFmIX/dq1nx/QYCcsPrQ
+roymNxaNqSflxDT/YYl7EwnMGznda9z38qwX77FmPEXovnlKP2lqQTS0rQz
Rr4tw13tGCudPUI4Ob3cUP+MgOvNuyFG28ug32cjabxQiHv9G04dKOz2cpmx
LpqVCA0y72zcLMI5Uwvx3EcEfi/7mROWVQ5HT4O6EpEQ6wI8xueEEtATncy+
5lCHvUr3q/MqxLA9c7FgymXyr/lKj0lO//yuwVPTDWHHPMRY5KKkHLaRxCjb
8M27TStgptOSUTJKhMDTZxeOOkegsC9R12lfAfXRXY4+E0WQV/hhOvQigXnv
nYMcaoUonbyheEP36zpe3WTPjdX0X/M97VqH40XhAkgQ35ZdUD2SQtzdwUZ2
w7m7FpfnWg/I5Z+9q3TaYEbhfY58mOwOBtKnuwYHHv576w255rLOHrsWOHs9
i9ze0yPeezFIs1UfndT9d7/7TkfUsr0sqrtys2S7Pxcm2UrTznWfp3/785Un
T548efLkyZMnT548efaMpoubzv1SlWBw7ILpPnIUovveajQdwODZXGvvy3ok
ZO/sT7rxmsa+vF67Z2qynL6nXSv6kjJh7E6jrEl2YuYAFs3fCu+FV3H7R+IH
RkO8KahZGJteOsFAvqHhqzCIu2uNDNAMf6dDgm0yqqPyaKSk7loZrs5ydq1c
y/bbEVr1aKy119utJoGNuO/GOencXeu97PiL5II6WK4w6PfwgxhZYxr36Z0j
odixvt/T43VY90yydrRAjJhhoV+fh5O4/2tCya/SWrjoGy+vTxHjaoTe6wFH
SFwJaP9Wub4a5uLU2G2/RSh6FJVvMJDbc91fT/Wf6Sp+C2ux/GLwmGOnxHB+
tG2uiROJj1Lr0zVPanHCT/HDiQQx1itMifL17D7OjnNxavvLUHzRK+jcMiHG
0W8jD7whOH38L4+PrjfKQO8a55C9SYgG6SE/x1wCv+ZEiPR9y2Ajytf1MhPi
sjQ66UIBgVqjjo+Z58rhW7JC5FwsxIUbK+7NiuKe7+La9/5vea7uJ9y+sybf
pRIPk6YMkd8vwtTVVwO3ZnF3swMPJ+V29RbBS+eZjnw1ASX32c/oLfRf89l/
5s/OSxTB+fekwD3zSWz4PbzseljPPVe/4vIXhup1Wg2TYsmX2sCNkRQyhL0b
c5y5/d/qV3+ra+3clx0i7f7/1RXq9fVXGASfW7LO8geBkCUhBvU2LNJMfjZ3
XGJg96yz9ySGQFja3MebXrLwHu2ncdquCR/nP6iZeIvfF4snT548efLkyZMn
T548/22GR9clhW2QQtuM9P+cSUHmiWHsXW8GI9flPyqqEeNsW5SDq5TEQe1k
V9dfNKfvadeyyRd+fO1CILVj/D//bKTRduaAwstShtP3tGstuLv+nWsIhYHJ
D87GhjBQPO6zYOAF7q5l91hw75ifGCcS41/ff0ziz01RyuAaGrfPlSZF5omw
oLf/bC8zEk+/3FRvu05j65jO1Kzf9RBOa52IKxJETevdpNeH4uxXmQOCZ3mv
qsOS2DVLbT+LUbdr66nvISSK24tiso/VQpnppWIYIQb1cWeIixu3P2P1Omj1
xirExvm5ZT4RYfibh1NviAhktOTouRXU4kCZjsKMB2J4rE1KNvYiOf3P3pmJ
ppfqsHxQ3/MfJGLkOg3tFxBJYm/nh8YSlXqoidcGvFKRoGx7xIqlj7n7mMv6
DU05yhXo/KT+aKCyCMvivWcvCiI419MlVbCym+Qq4P7rrNY+eRG6TG3zt58m
0OYl/1N+Yx02bTymMqhMjGjvn3cvXCQ5Pdf55PJ7E+dteVxVCQvljuT3l0TQ
NBulXf2R4PTVckNrThJ1iFlrlndIRoI9uhWLptzjntdal/zNTvBJBFGU7yrt
tSRunP+hoXGL7rHn6lfGlntlTzQ1Qk7ZNCXqoRSasXWRW+9RnN7gQ/Dp16EC
qC9+E9NPmUBXW/VLSUPP/ZY0+STxbBEKXmhF2HcQqDzu02/LHhoa67eMqFQW
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
4ZkFx4LWMpzefPbE6VOqRSj9FhlUaEXiRelh/fo7NKfn6lqOi5P/HLMnkBvb
/8rYdTQ+L21p7fjEve6sp56rB/bUzza3mhE8VoIflofiylQoNITdUa4YzEDW
Wq2/zVkJzvvNOxNgTsHn6dT49NkMBtUtSJyeIITFsSe/lycQ+Km34UfuIprT
h10nFefvEKKjsn/AuQACK/N+HGzS4fZ+8dLhZfEClIa0BNhpELid81ZwW9rz
/dC4ut+ZGOWgB0/EUNpoGp71D4nJZ8smfWVpzrlBLs91f1Uuf/7aW/tLLVLM
G79q9sWhNPJyUx87PWQQdP/PrkpFAdIfh/xzM0eK+pRVJdLHFAyWDhOOViBQ
quYS1DiGxvuXZwtXpjP/+vcMT548efLkyZMnT548ef6v8nt9m11/+XLIbMhR
2HdOiJSObb7SRwSsfm2dEK1eBmv35PlG6kLkvN+ofKGU6HHXspp1PeWpcjl6
/3NsWFaIENVXtEfoPeLuV1y+jnX+pb+3FlpXhJ9Oh4lRGCT1urGL7LHvae8a
0OiUFG4vwIVQnY8/WClKlakVCh+51y3GD1g10F0swfcFR4f08qVAlWSFrt7A
YLJAM9uz+3w49SmdKTlAI2e+z9n9EgYPNZUvhxwg4N8yw9vbjoa3Yt3Q9EoG
xI5sS9U2KdReL7h9Vp3GhJ/RCSGPGDS6Cld7JUlgVf3Qc6EthV6VBn/KljAw
/O47ulWFhAZF6zWk0bCoFisuVmFxs2Cr7cAXJC5Fyqm5DWMwUCcncoc593pA
jcpTau67xSjY7CuwiiexuaL9olUp9/X7iVszTw/dLcLK3c937VUnIevq5jvX
j8a0xomxKkMbsUdf59toAynktzX/7uVIofi0n8ya0gZkaOgF3RsohcPmjybs
Cgrn+xTffOFRD8nIqf0dzSQY69nn5rEvJPrvLXlvfrwBt8dZTY6sl0Bp0snb
dlMp2GemObe9FeAG5bJPfQqByfXFc/O//b2uxeUfhfqc67gvhLOBoLAjkcCz
hbSa7eKe+yz/8oiuE2I4rAqfFf+EhFPlh/jFtT33XF3rP927uH4vrn7V067l
nuZGaBU0YoXNkzOzwqXYP3fTNJ8oqsddi6tf9bRr9XSebanJzDSN7s9B4ac5
l+NeEujzId+6bBW351oPyDVnxfV5omdd65+X0Ihrj91cpwVJkaRDdXy/RGF7
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
Xl32yHd2F2DhzwVGzxXJHnuufsU1xzVU8ZXiP0VluBvu4HzQXYjgLq//g703
j6rx+/+/M6ZICiVljkqGkCGpJwmJlKEoCiWSUqZUoqRIEhKVipBkSBQhigYN
RETz3JmH6zpUSird5/vnvda9f2ud+/Ze78/n/p6/nqvHap061znn2vv1OHu/
9k/NTPL6rmiOoq9sViXUijemLXFhot2ZMs17zYOz+QC58d8r8e2gVZHxSSaK
1e7afnjKw2G5r4xbyVWYXJ6adqmWiTN2W+MHRJO55vsItvXpKrT/fmNV+J6J
NUtnGdjH82Ac6TUnfkAVhPHa/d6HMuF3JKb27RMeHJjNWnLV1ZidbJb9ZDUL
j55Uz3W9w0PCg2F6VfcaMVJeeaE3zcYKRoCyzw0+Rs6obd0wrAmLTZ1UihU4
ODzzsfXoND5EXzOfh5c2Qal43jxNPw7mv2A63W/jE/cZkfzAUNvhs5KbOWg4
Y7nK4pgAunnTjjzbSBH7upPWafz22P3MyYyJ/RFfOs4fFF+XYzfMjMYLiV7r
b/kuogdb+nzInjktGFfuoaxlysWnww76Z1wF0C8NO1sYyYDq0qIEWQUe+jrq
cjnNAqQp7389ZhsDz1oXOfYKuThULmNT/0mAYzdX5rppN6OmI//R9kcc3PSc
HxSkROYkf0XiRo9vrZ45uRrURsOgASosnDGf/Sb9NA+/d9lNCvWuw767M719
ZdnYP2bt2Hkqknswkr8ineP53+61JPVXkvJRxz92bkmuQ72esm/vKDam78GL
xeP5CArfHu3qXIclRmX1yv3ZoH+Nq+1RlpyT/FU60/tH4rZ6MA40b2pdxUZ7
x5L+p5bwiVxNzv+Jh38tdnTeXz8yh4Wci3FW24Q8Ik/pmVbWU9GAPbNWrmhK
YyPq2szC4X584vUk+V6S19I3vXfU7yIX46bqfp7QIMDFhRtqPcIp4jqrsqYC
///pZ6ae1XV5YBQFqurygUORNEZH3pMviKOxqTAvo+ccjblyZXW1h6X7E6Up
TWlKU5rSlKY0pSnNfzI1fXY5+ZRWQ7Vt7I/elSyIbpqMLL3NQ0LX7l495yYM
ONh+aeBSDppYMl6iUj42bZ3t9T6+GkvpXLQtYiG0OLvMK5YHt84lQzUvVOCp
SVHKkW8MVJs/968WkLmkXmvCSzm18S8qYPvS/X4Ql4F19dT6IywyF3kEz7Zs
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
zv9YFYrDIox83jHRuDCqTeEGuf+VfXTCyFW5VXBsbafHc5nwmzTz3YBIHqwd
vXbtz69EYkLjyrp9TBi8k8+IfcXDZzuHRWZLq7D/87wYv2QmMo0euponkznJ
X5lPaflas7UOmiGJI7b3sTCbd/rVTiU+UjhHu/x+1cL7RHvKagYLuxf5L34i
w8dJtRGrFvRUYkdBnNv0M0wsUvFz5abxoO/2J0NpSi0uXOBv+5XEgt0Y/3dV
dTyJ1ymR1pn80x7M5kCvuxZVh5Yb7955aLMxfPuPhcU6fCLXEFGOOgcasdPp
veqhBjb8y5Tr2q6Q/ZWk12GfofX9e+fqEK10VrllGBvChb62e9Uk55L6qOaT
81lldA38jm5aqx/NQrTLuq3K3/7eeq3/bb7r2Rj1o9qiZoSPCzZ4Np6L/Hmb
QlZuIq+b+lv8fvy61Z6dzfA/fOuw0xQumMfK44dvFhB52NiWC2M2s/H+1+iE
lXF8bDHYvkq3VPy8PHsne3oz4BwTcLJ/LxcG7P1hjlUCeI2JHDGLakK/Uy+f
tISJ3+cJfXnxvXwiJ/krSfknvwvjpgawMOw1a13BZPH7e57djY7TQiIn+at2
DfX0uRv4SL5VOXhjnRC24348D5hKYxRs2GUvBChxWpYud5dCOq9f8q94GiZ5
Y7oK3ITosRj9MmcYjfBXTU/31Uj9lTSlKU1pSlOa0pSmNP//lQO3qAyxO8dB
eMDi0CBzAY69nJ38fAGFw3epg1d4bNiJ7smNEvHxK07j6A4ZitjfOCyqcVy9
ajM6zEIXDbjDgUPTXNv2oQIE9H/UsDG8Hi+9DAb3WrOxpfStSa0pX2KvJcN6
yj8cUYMHipGb1U6wMPe73ufwfLLXInFJvRaJq05Tlv3cWI7bq7YF3DrBgK1r
yNK5snykTdbM2ji2Ei0f/N5GjWGiJjyrYUoFj8iNthrdOalQCRMju8nrlZnY
8eDb+ylVPDzUoLMNl1bA7/2A/eUpDAjGfjfQ/sXD8MBxTZojq6AaoqK5K4IJ
ZXXu202p5H5WpPVUnrXCaXeTqvDgaaZWTA0TPv5ypRuieTCz0lVQsaxCsP+a
3FepTCzvYa/tvkM+f5B0ziOJk/wVqd973I+G+GFydXAtV+J1clg4EyBj5TNA
XP+Wxo1/zq2EeWz+vBvHmQjKPMttfcaDc8CAZ2PHNEHWyPPNgVEc/EpR3ymf
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
uFf9NPPUKXRxE95/tOJiYOTrZxMzBVh652bgUB8KN2Kdv1y7REPv8nLnbhMR
Ukct7CuMEBG5cHdt8xRHGppjVihpaYsgyHczrwgUwXG+V7LRfSGOWJXl+8+m
USPcuExJREPVm61uOI6C1dUuK39PGrLW5R+ejBYROclrBc8OZySWCHHsTfCI
VhMa2cxBOTd+0xDdXBfsa8dHbFf7sn7NQvg5H/xopk2jZPaP8gHjxPfRzoUL
lovH6Vn6fUtvjyT7K1JfrH97niJNaUpTmtKUpjSlKc3/Xbn629zyn1dpXFb/
qDXIi8YJvciAF4ZCjN+ROmfueyHqdmZoV+zmQOZucoGKVgWmRDinLssVQrlo
SvY4cd1Xd2VY4Jnr5Yiwf7Nu9nsKH5bQviZlNCZkNArfW4rQ2F15p2kZD9+4
garOJkI8sauMHCz+vTWGi7sWV3Bx9sQg1bBBQvx5vPJ4/R2K6LVehAR+Vn/E
hXzj43UNtABPJ7gbOkVTeKSQccspg4ue+Z/OhrUJULGHttKNpYhei8R35DpN
GmzfAm+Vp2al27jwNZ7sNstHQKy/SP1kan5nCe1mNGJbu0qJzAc2Ymt2bHMO
5SOha3evnnMTBhxsvzRwKQdNLBkvUSkfz4LkuodaNONEu47cyDwOQoo1P38R
11UkTjrnbmm+a4u9VhVM6Hwb8zgmvtjTK2Y+5CH/UMP1xu1VULbc4tX2nCl+
vQ71brvNw6Dm5333q8vhay3ySzjGgGpf8jWtIXy43n56Su5MJYbP+/P0kwUT
otHMKbPf8bDjx/rwubZViE27VfvoKRO3x7le2JNI5lVjZ/eYl1ahSOmO6DjN
xLDGvpE9l8i+S1J/ReKk9SQkL0rikp5nJ6nXknR9F8lf/bwYu9S7uA65DWu/
245nY3/nMsb7KWT+3F33NiOqHqW6e74+3sKGauNmR6+VZL55VVSbhXMLXN2/
nDq+k4u407dPdhyTvJ88iUv6Oc3+Y7gg/wELu3t1gveLr6N177jK+CtCBCRz
x1UmM1BxoTXIYYz49X5TzEjkCohcUq/1n7a+65/2WiRO6kNI6hMlKbce71de
8L4JPSMH7/b04cAr2cJUsZUvsc8cVbFXlLmdA310bKybI0CpaJ/nCG0KbQu2
aLE2CPBbx3m2mzuF3dXRG14do4n8sK7iwEcxQly6FbVuyjQaUdvWq5zkkfkU
r0aDJ5U0vIK4W2NcRfhau0p7430RMpvOGpZr0bg/ISVvjqwI5icKZyz1EME/
VHG6rbwQgzO0b48vp5DI2Gm99SVN5HM/+sfbHBeiqdty9ngVGp/XMBq7G2mi
vyLtB5S0Lxap3/u/PX+RpjSlKU1pSlOa0pTm/z/z1Ay3oi8FQvyYLdettIWD
rjWcmv5UOVbdmbY14psQz/Y5MuZHcrDcZS0vrLoCM/Zc26X8TgjVnXLH3a04
2PBW92Xbp3IsMTA0uF4oxIGEI4MvbuVg7s924ze/y+F2pytuuQeNur6crIFN
FHTsuRnnn/GJnOS1ZhRaZOxV5qHIPSjvopYQlLxC06hMClrfjGOuuLBw4P2H
nsOjxfX/3FMhw/zJXitBwZo/6SIHifNdNi+yEGBxcUHhhkUU8ft3Ur2cJ3/1
AeNLC8ZszJ3XcJ2Ljpf5hp4JAnStO8NaWdiEiQdVfh05ysEoT6d1Ld/5RD7V
Rbf3dEsj8h/b2hz/w8awdtrsTzLZd2X3lWvnmzYjLH7Yp13ZHOw5eTtTTl2A
JId3q4yzahGav3/2uTIWTKx21WR18MAoWD6wY3o9hrmfvc0xYOPC+Jc50/Ul
r1uZKV4Dc1CL8keH8kemshCzylTzfjOZ/y2v1TE7R81scA2cx4t2HLNhQUFn
4t0BKWRO8lfdgmIrbU8GDpk4rdz0i4sx1ymva+UCVHRuXVN/lIWxzkUjx4zn
I0RQdXZWkJDI/9O8lqT8c+2cEYHzmmDtYjpbNIUD1fld4g8qmdcE512qFzFw
okdeN2gpD54j9qUGyAiJ/kpS/m95rb/luyTlj6/KT9qkz8Qjk7vKC/fw4J+W
phWgKvxr3u9vre+StO8TyV9JyknvW5K/Ip0PSOLe1QYBzeL7qPz33Svse4Rg
G3/UPLeIhsvlE8nX8gW4tm3dtrQUCgtd3dOpm2R++9vq5qsDBNixe/a66KUU
fJd6HVDdSeNiQHJwcZcAk4fQM3I/UNi5cfv0D+lkvu3u/K0la2lMe1b3UUVD
BK7m1777x8jrtUhc0v2Jk9rSVreNorAddaO/7KPBHrYpg6cswvBeNTpwKgUT
SiVs5hEa2vE2zT5jRAialLx9/FkhUtq3VRVo0NhUsk7wnUFjwHW1osqnFD5V
By+cW0BDQ2XlrRtmon99XiNNaUpTmtKUpjSlKc3/7oy73jLnbDYTZi3jltk8
46HnI72MWiEEq22K3Kq9Qkx4OHVNoTwN3VMd2cbVNI73FvRfMIDGoMlme0+0
0tg5taqp1VGEjJVj7vb/JsTnsmuHcy5x8GLhfX1WaQW8ZHM5udlCOEzXzP2m
z8GFE1eM9zqWQ8/8x5OSPeL5NjOssTSPQrz6ivjZbmR/NWN6drhqMI2O6K1T
A+bSWPniY/qYMPG8/9XYxdWDhdAZZTBf8yuFZQ+Obp/1giZ6rXm6IfHpUQL0
H1JSYBVJYUZxz/qqCBrcVlkPe3H9zF3WqXs8T4DA+YkpsSfIXovEPTPceeoF
LVhj9yx0fjQXBw1s9Y7FCYg8JOWPa81QBp6nX/hy8w0XTWkWZdx0AXoO/DTL
/iTmCVeMP8zkgS9ytt3xU0Bcx1UyuHqJp4CJhgUJFc8/8TDIY/vt/tZC+L46
tWCCTgtmnthQ6Q0uHs2oH/9mjwBXlB+uuaLYjIGtbr2bEjhYEv1k+Qw5AYZ4
lJWYn2xGoqbN9NgmDobpnE50mC34a/5KUq9F8leSei3SOWWkvmqmS77sXjWY
i5PBT2/KXBRgpIZKTv8dFPH8Mkm9Fslj/NO+S2fOhl9RV5pw0GX3lR1bOVjz
ZuvHOU18TMwIft8Y34Rdb059Hr6DAzfZ+pauFj7a3Bq7M/cxUeH368eZ0zyk
9jS7akwXIinc80asfTOcbu3y9yjhoMRWq3vnFMFf428r0/TOyTTBbY2N+0RZ
Dn48NDWf+IhP5Ien+UY+1WvGR4sWnkI6B7kvMmLWjhJgvOMKrU2ZLTixM7k5
7BIXoheU5uloMv9bvutveTCS15KUS+q7HsToTX7Fb8H3zWNZ3Idc2EWY+RUl
kznJX5HOK/xbXNJzBpe8OXJHP4QL3U8KVw5UC+Ah+vzu7jkK+W+PRR8Vv9+j
5TN3Ns6k0D7hgHqnNY2DVcvsLuvz8Yq7PiTygxAL5ldsPq9OI4CrOj1DUwDt
3MTF6zdSkNl5rHChG5mTvBZpHdd0048CVRMhBoWYzr3ZTuHssZQJo0vInLQ/
MeucwScDfxqHi1fvtdYQZ/rhxZ7iv3clwyDdNpeG76SAMWcdRPhs+Khe67YI
324Epvhsp9BswdT5cYWG8tXGo626ZH81a+Qfvc5PFFp+qJt1fKPR8M5r2O71
Uk8lTWlKU5rSlKY0pSnN/29pYLtgXkkAjfenGttXTKYx1m7OWsZOARyXtu12
OUgj5DD1jSWg4H1/Z82hb+K6NeJrSMJFGr2HbqeqONBQyO0a7NMrIM6f4+YM
blbKpHH6vWN9ja0Ij9pmFG1PEGHz1aJx8TNo5H6ruciSE0E+3GFtracIP9bK
b9SMp+GaRXXvOE+L60ar877eQiT3LE++5Utj3fCB33rkaRyxvsBYP1WAh6sv
+/4Ko9Fv7/mIFVY0rBZGPQ4R1x8kr3UrUTXaN4RG7YX5h9eCxqrqw/ccU8T1
2pg035YSAcLS90XtSKOwJY0uepZIE71W2ZE1P4dkcbA4lC+M2S3ActeFOi6r
KHDd6rwK+3ORxMifNzhcgCcM3Q/lDhQW/TwxqV2RjzEC4czmDCHW1bGHLlWk
iTxLMYnuc+QhzvTXgPHW4vroWB1/WjkFZus9Q8VEBt7W5D+/P5oHVurcfDmO
AMHDZ7pdr2uCRvkJw9OnOFAZ0Rut8IuPW5MD1V/0NePAhzepStpcDM63Sa+w
FYB5IpB+eqUFtU7Lz1T7cSG740/VojCyv5LUa5G4pP7K69I9BfePDbDyGeM9
4zEbVaFX7x7y5SNYZhVXNaYJ6+RtBmy15yClc0WeQzMfett67vlkNEP388/f
9/9wsFDZW33JMgFWL7Bpu5xTg5X9Ht1zPceCwQ9ZjncJD2fuNS2f2seAVpSs
idZqHqyL3z6+NYh8LgCJS1ovS+q1SNxpcvfTrN4mMPXatXCVgzi9/qKZ4npY
Uk7yV3yfj7ZtW5jYsHSYO/8YD3uG3jr0cYqQyMN0f8R0vWyG7EGWyx0ZLmLM
HZX2mggk5v+015LUd5E4yfP80x7sn17f9bd81z+9v1LG/kOcehELqokHEg+t
4UN9eJjClBtCMif0ZWplhB5/T3Gh6Tlhb72yeBxLGxdZmEKhhg65sHsWFzJT
5VwfJQlgnyLqf9ydIvou0notEif1M68redX6bDCNlryFld7tNPLtcysm7BKP
myEtMSo8Cu1yaVsyGTQSjtz1mmFH5jJ+hX9WP6PhOXr+CK3NIogYV5Lzr5P5
Vf8n254fpjFMvZJ/XTyOn9RUt9AUiO9zNiezF4XSWOOntrllBY3XPJ2SU9kC
RBsde1EfK54H3JtUHi4eVweX1Ll+3yf81+c10pSmNKUpTWlKU5rS/O/OBs8Y
1mIeC4197IszHP6nv/Ylp+X3hRjx7mSDi7guUcg99CCgjkKQoW9odhaN06+2
v+i6SaPwd3NR4g0aZxKdMnruCvHNbW5x5D4afY7j5ceWUdi65NcXu0t8ZAw4
dNBjs3jeKnh45IkMjTD1Va5Lv9IQjuAuuLWSgvzqMG/2GRqPsrYuvDZFBNZ4
+1NWMTQ2BZw9wz9Bw+bEz6l1G4QQHN3kYnuKRtDDoyZ8XRof74651OkrwEaz
b9qvPGh8r6z2KWqmUFig81wzk4+t7s5pbbv+Zx6uO1PhJYUxn0btnWvFR3VG
+MV0HxpaDt+2HpGlYRg4jDFFQwCZ3DUzrcNolDlo+ddZ0GA42d9Y/pXstUpH
fzlvcUD8c4THoJccCofc2UVRxXy8Dhrr6S+et3emdV6YLn5eWxwdMte7CBGr
P4jHs6aQzgi5cPYijUivJ4tea4vg4PKt48VtPpraszv2yFMwV13vzFhKw2Ge
I3fQWi7ohnCu23MBTl6Rd/I8SkGl6lfgaDYbxy0yY9UoPq7smntyXp8QYU80
Ii6MacHqz6o7NRZwsS+upm2WowAP5Yw+brRuhueaVaY5hRzcV0pixUwUSOyv
SLy+i3LS3dOMi8PeqlV+4cDcx3px9DQyJ/krSR+H5K9InqrzsLr51OAW/Ho2
ROn4IS7elXanJJ8WoMNH7rfc5kbYbvZXVKpk47rv76SL4vet0qY//HNWzbC7
qnZU4R0Hgn6KBX/GC0DzP91hi/9ex82xH+RK+dh3bKm8DSUk8n/aa/3Tvuu6
inZSdDUTb45o9buVz8Nu2cfrBloKifxKUlbhkyfNGK1eNLOzmwPv/s3dCRBI
zP9pr/Wf5rv+09aD/S3f9TRCdCLiYjPWvNmwzJgnvj7NtXcC9CW/DiT+6U8c
PaiMjezeC89zm/n4Ebtih9cvIVTkLFxHzhHfV1c6jr1WLB6fegQ7d4ylidzT
wX2DzmU+elYGBQztR0H2zLrFGw1pDOnkDL6aycP07WsmJpwWwnRbQHNEK0X0
XSR/RVo39eyO60FlIwr1DXoN4lss9K7P/OU0UUTkJH9F4voVlcH3r9NYfCPc
3d5chItulvq6USIM3dmmcS5IPA6e+bUtxlCET6/Hv98VTuYRLu8+Kov/D63o
B+pjtGi0ydzZ775ffH8e+xNTdtDwGOg3si6JwowadWbTRD5On4kYL3+QxsET
eRdO8il8WMrQKf/M/9fnO9KUpjSlKU1pSlOa0vzvyAk1obFO5S1ob39ysyqB
iy2tj+bE3xRgRPWF75NU2PDatHda+FE+7pf2e7flpRCdMt2fL2XRcHTbsKZ8
qwgjZqhmh90UEffrqVIfjExdaCx8nRh7+R2FRcGn4ws8+cTzjD4O2hcbGE8j
IF112btwGmF1n4zU/IR4PuyDXZ43DbtwQfp3fRHMl6Rne4SS9xeoJCr2XvSk
MTZJ/dh3JoWR13h77HL5OPN53fasvTQuRq59rPlBXD/oBmxf5s8HM9Z/wrdg
GpODU1PN5tNIPPd+lM1lAZZo7T6ZJa4nLn0/eVtHkcapCPmfM//nnKmCEI3A
x+L/Z4fs8kObRND79idEJ16EIc5zdivdpOFfB86COBpb9+w3VbohJPorw/WJ
6Y5XaawyOzA3dYUI+zU/jXeKFCEy4/x5qpSHqbnpTo8jhFjVozYju4sinoc1
c0tDYP69FsSku+/TE9dJD7UFXT8jBBL7KxI/mHluxJeyZtR7GY19PJyL3sns
9TnmZC6pd1JzqovcwW+Gt8tmt34aXAzSzHJ5sEFyr7Xy9QadnMVsqG74FLAs
jI9L2j9GJL0TEj0Vqa6X1F9J6rUkXa/1T+9PJPHpDLVsrxgeHAdUzOMcEuKN
4bFzBzkUkkMfP9AfzsFv4fBdhQMEaPg5NC9lGIVTC6x2VU5sgaHW/Lj3i7kI
Y26V69wl+Gv8v8WD/S3f9U/7MUk92EpLj4GnRC0YrGCWFpfKhdqtxlin+2RO
WodJ8ld/i5P8laR91Cd6zRu1gsXDpKkad99eF2J1XLoXT4bsu0j+6upULYx+
LUSU0pprVwxoHNs04KriT/LflbS/+p4Tx36erqKguO1oi30NDXtW4po48bhE
4tnvGXe6xePrub0py5s20zj9RFbfihIQ+Ql776aqEBrfg7e/fLyURrtJm22/
J2Tu8eDp4jx/GiPK3l9gLRJBMeXM/eIwEaoGM65MF4+DDr3X+xzNRJil72z8
54p0n6A0pSlNaUpTmtKUpjT/70nyQrt0dSZciGWj2zjtTFcuH3trk95MZwux
c73JY/M5FEawp8yvEM+nH47LFe7XIH/fqn9nxEddBxqTcmc9dL9BIXfexsth
CnyMmhAn2uBOw9OyP5UqnkeXrU1pP3aLjyc7zRuOH6VxK6bqtXofhWlDVN7u
GyzA/FDDEb/P01ixd5xAeRMN18OWB90Y4vrrRU+vXRCN4oeysc9n0+AxP2+o
DRLg9UpD9+unaMS/TR8hmiF+XkrffsQfF0Btl0d/nzM0rly4o+5vSGN63GvO
idsCDBrrbXT8BA2z+p8NYWriOqTpaPXcNQLo/niwZ28pjaCZHyYKnEVIu1yg
fO4uuZ9teNt2h6RWCpMOK7RN4tEYf6X8maO9iLgOjbTvwyRvTFeBmxA9FqNf
5ojrnPBXTU/3ieuMa7bH0xuGCrAha+3ZlSsoxIV0nm50Ev/+K7sBh5gsFJm/
zPPeykfL+N/Lk5PJ/urWxLYz9j4t0Mnq3vPNjYtllhdvpQf+H3iczZTJN5sx
2/3882utHOgfbPg8YrHkXovUT15Sf1Xnr7Yt510zylxbldbJcqHx4aOGw0oB
FpfsDtnRwETFdOtP1oU8TFVdtf+GFXm9E4mT/FWGwkutzRNY0C3tZzZcyMPX
gMTvB3b/817rb/kukteSlNe3zzf3ymGjxtJ62e4qPlKGLp/PbhUSOclrLVm8
e1XIHCEm1ci9NhVQWCm43x5UQBN52lk1Y+0GDgayt1dv8BHgfegS/5ANlMQ8
t+v0zf4eHNRVt7r6i9/Hz5JzDsydKTnPPJF5yFz8Pv6kNyJpJgSo+G5y5vds
6h9f9/Wfth7sb/kukteS9HNB4t7JrGgGOEjuyC6omyDA3aSRpg7jKLx3/r0+
L1F8Hx6lWpoWS2H4pNFnDKNoGIeG5DkMEeCour362uUUDKwULqWJ7/vJliqK
lt18uCkqj+QbUtjyq32rpXicK0txmSNzm8KjMQqOGq9pHHt01eKmiQiDDu9Z
YsoXYrfP0AuPN9JoKpk46fJAERb+0rFcdJ1CtFNjpMtLGq+v980cvExE/B6H
tD6K1FeKxIuLlox885XCr6TVo+9XisfJcoUZ/TaKMMmfnvw2kobi5i8hD8Tj
876MeHuZaUIiL12j/+XPRRojXT+2+26nkanr/Vy1nxCHO5PKNcS/37R23xGT
fTT+tDitfTVBiGf3RvTUiP+P9QaWW6oO0DjSNsajTk88Dm4O8+4+RGN5dRZ7
yVwRzs3QuPEtROqvpClNaUpTmtKUpjT/t6bBzTdbD05rwpptXdPOa3Awv77p
TW0mH4mqE0vYs1lQPL4k2/UnDypKd9X7uwnRxG2wNR/Ihs3l71be7nzIu2zw
tEsXIunhNJ79Gx6WjfKhNp4VYqCbar9Z7RSWHerw+36FQtKwXNvMpzTibE6M
MTYW4fPFuXOvhdEQHHSyaF5H49bHMTL8cgEC9eYwco/SeJUy6txEGRqsA18m
KovrlMGeBq1bxPXBz6KjafNTxfXzJmXZmAV87N8+SG3DNRpRAWpNzwNpuL9K
4bzZJkS08crz2ZdpvLdZptewl8Y6H1ashoZ4Xu1w/pOM+Oddyb+mbiuicHXL
qT8DvPnodB299JR4nvzBZl+i8ncKpzl1AstGPiat+NjX4U2j+0DAl4cDaTQ8
Ugxki+syO5Vq7YVnacj6nf0zyoRG4sMD8glPBYipOufHyaFQxfqMyI80et0d
KvtbiIh8WP7ZF2NzBMjOdKCfP6Dwbc6prLcJNAaszgp1LBbgsZKfzu7HFDp8
Bn4NuU3DLvOeb3CaEHvuivpm6ov/L/1ym+ofNLheiV+jDXhoueRcl2EkxAVl
G3/jQgpLVunNmerORcbigeVT34uvY4biy4uBFNFrkbik/orESX3dJfVaJE/V
InPxzRUOA2F3KFG5IQ/ringxL3oF6Gva029zAhvK7Y2bUt7xoS0wanzHEeLJ
oOPVwkEcDLn6Q1utj4+slNAUlhwlsb/6t7wWiZP6bv0t3xUZU8IM3sqCS3ZA
u/JwPnJqXDfe85WcS3o+2t/if8uP/dO+629x0vucxP+tdV+kdVCk+9jYr8vp
jfe4aNM5dXK6UIB2xQr1oqtkXmJoVjC7ho+k9Lhpc3QofK0UDZq9kYbKlNCG
d3MEmPtJZJJuR6H5xeWea57kvlIXhVflUjYLoNwY0TPBk8I03uyDNsdptBlN
8mugKMi/aZy6n01je7Dx1cKtIsx4HpTfvpjG4HanXzLKIqzKmvLg4REyJ/U5
V+wtm1wnHu+Kky/55QTREIZr3hvmKCRy3/Np3KnXaaRmHd806xKNntQhlg6B
ZG619d6mmmUU2i87PJgbTEOUkq/aN0lE5Iuumu8sEY9Xe4oGqM2NFY/vvWkM
1zjyumuSf4PziK694s9T1bKYSRfCacw1LjS5oCWCnPa4RUonabREqeeZT6FR
nSd8eHaX4F+fN0lTmtKUpjSlKU1pSvOfzcvX9qm72VSjn9uXyEJNFsx/b9fx
vcBDz8JrrFknKmHHejfDZzUTl7nXH14s4MFx9qqVpskshG5drHrYgI/W/HnN
npFCOM98kcabxIaphVfpghN8zLJy/2yRJST2p/IO/P3t+FAaXd7OiTM6aQS5
23ZkOpO/5z0+OYw76wiNiW10kmMHhQnh2yxeifhQT3vaqXmIxrMdy7Y/osXz
3OMOhk9q+dBpv++xbB+Fxyt/lMXE0YhSWXOKM1uEnxqfzSvP0HgQXLqDsYRG
1SDD6HF3BUQfdcnxgKnBVfE8fLZP/BLx35liHzXhmL4QC0oNDlw5S2PcwfTl
PstpbFD5nmn8QkA8/4jESd+zTwhSi/6gzQctMm0U5AuR9tR1bbQqjc+dWwp4
w3kQfoi0vjpViNCyyXzOi//DOYYEf0Xikvoru6e+Y8Ies3A8bfOGycZ8jFJ4
1rEoSojkS+1frb4w8Wm8fEHbGx5WvJllsGStUGJ/RfJUpHPtPwwN/zJHm4G9
dpXfk0q5SMp7NWR/lgBmS0Xne5Q5GHlryZxjgwW4Puh2i9lwyX3C31qX9be8
1t/yXSSvJSknnftmmtvjUL+Li3wGO+boOwFY7uG3i/wpIietV/y3OGkdCMmD
/a11X/9pfkxS30Xiku4/JfkrSb0WaTw6bPDzjH69ENvd355et5aGzJEhwtky
Isx7E6P22UCIkXO0OltFFFzmzZC3KKahsyHd43qwEGUb3F1LxtJovbzrZ14L
jcyms4blWjTuT0jJmyMrgvmJwhlLPUSI6lo1Y0o0jXaLB5VHfWnsqzTdaL5K
iMn5wlNbL9Jgbd/TrGRPY90W46Sy3wIiJz0OiReOMF+c+YCGyYPqI2/E441n
/p694bEiIk/tth8XuUX8OCk8rzeTRdh3x3hogj+Z6/HW3HEaSMH30s0bh8Wf
m9t+68/ZKvwf+i4SOOn6D7iuVlT5lMKn6uCFcwtoaKisvHXDTERc5/xvz6ek
KU1pSlOa0pSmNKX5d9Kz/vdYt6IqhDF3tk4UMJEdNmzf8Mvi+vhc3FnHvhp4
fDpwpiWOhczHpZ41FTzMndY2M3NWE4zTVRwNJ3Gweapj+e0sPizWrh6gYcBE
Qee3Rv5eHpC7epW6mhC/3CsnyeUyoRmkkGr1nAeHwdULx4rnzz0tHZFPprGx
pX9iHD+AD+H2gd+52ULieqHCJP7qOd9oXGv5RV13EeHAbfu50+6JiP3SRzZO
W/7YmUZcP//n5a8oHLmp9N5jM5/4fXf/T3YntG6I5+FZCindkTRGU29HmIQJ
YSQXFbYnm0LP8uYvMR9oxM4/3Fy+RgSblSPnBF2n8S79bkxEBI17amf6esR1
S05l1odHMTT2eqWXrAug0Y97qMLXRsx/dHgPNKMxQiZVxklNBO3RS5oUfUXE
eoe0r+SbHq97/SE+PP+sbRsqEqLRqEPhph6NyvAf3Y/O8xApXxxq7C6u014p
BhxnkP3V3/JaJD9D8lckTvJXkp4zSPJXbIHzyLYmFqjkYusTtnz4sxXXHbsr
RNjYlgtjNrPx/tfohJVxfGwx2L5Kt1QosdeSdF0WiX8N9Z52Y0YLZCearDi0
jAtF58JRQhdyHy1J+2v9075ruP0Ma3uaDY/EyorCH3xkPEy/2t2PIva5IvED
1jkXlu2i8Ku/cmeiuP4uu+MVdX6miMjV1ulfvLtBCN58/+TeXgolQx+b3/lC
/8fxv+XH9FcYpTqIP68eO85EPBTf/86UPdK5NlyIdZPVJhysF8BzZ5JClvi+
F2vyo23FfVpi/t/iwZY5On+Yms/DluKkTFnx/Trv2KOJxT8p4v2TxEl9orwU
l/ckKIvHsWErG0qqKbzTZbhOeU3mpNdr/ppLixadoDG7+OWIkDE0Nnu99g4z
E2Dv16Eei71plAbPWMXsR+NUrfKkewoCrBwaZth7Qcz3GsWlbKWRQL/5Oa9T
AMGzefsWx9JouP4qZ+ppGjG/btk+cBai+ntqup/47xounzrysKd4XDp7Ldto
JpmTztUlcdJ5viROOoflUUiS6fPtQrQue/94+yAaKU5F/kMqaFh3U2vPiPi4
oTLIddl8Ct+OnrWysyOfh0jygSvvrv3xkiWA44s8s31vKbwOPSg3PIXGvscm
FT9vCnGq6+nZL9NpvEgs010tpP/1+Zc0pSlNaUpTmtKUpjT/nzMsMiMq8BcL
IdcYd0t383Gaw97lnCqef68L05mpU43in9Nbe1VZ4AeqPWs6w4PMpgoL9zcN
iJpvELfwIRvKY3NfqXnzoVUbmPNElwHTngKHm1+4GNJz58+1bAESz61SW2bM
RntbFm0Yzkf7jtrBXwvEdVZp2NnCSAZUlxYlyCrw0NdRl8tpFs/b3/FrHhm0
QGnGeYtyMy6+v25cbSmep76Wvzztuwsb/JfhR7Yl8fErYXicTjn5XMI1T+L6
ttrTkHdSNT00VYTpz8qnG54U17krVNWMd9J4wu5qGfKAwkLVqJ+vdfkQHJBp
9I8Sz+OXr8gfLq4b+gYMNRm0TEhcT0XaVzi8V40OnErBhFIJm3mEhna8TbPP
GBGRT2pLW902isJ21I3+so8Ge9imDJ6yiNjnxCaetXZ6uQAn5M+WDX9Owfe3
R8PxuzRx/RXJX0m6LkvS78dJHiYrsOpa3yk2dlhEz09+xodjTWny0gby+ivn
rEdhphOZELX6zWraykMN793gvBFCoqdq9t1V2BfCwOpVrzodBvPg53XgeWs9
uW8VyV/9b/Nakq7vkpST/NUCxddXkkaIP/cHfW1+r6KwNTo8ydeZJvKAjt6U
JeLn1xH28aCfDwUXn7nx7EDJOWmdxr/F/2n/9rc82N/yYy92HjtYckAAzU5t
BeYJCpzoHXUap8l8WMZt/cjjAvwQzc8IC6awT62EoxQqfn25qtMzNAXQzk1c
vH4jBZmdxwoXupEfR883rc1wDB/yJvJ7L7wSwlPTZdIQZTJfXbrmyGZvHqLv
7lg1a6cQi9S95m8QjzM940ZWBySLx6F7wjx1BQryWtygEyZkDzbYdvJohIvv
l8dtX6pa09BpkP+qzBbgre1eDV1fGoYLhKoGcjRqBBaMzIkCKL5pm9Atfp/u
z7DoDZ4uvr8bX2vaclSAO7NG2T3xF1/3mzunqo2noTguY7HsZnI/xq9xy065
3aChULb6mIx4HCu38TvADRdCxVUm+mm1EIEfPo/ZZE7j+pLxHf37aCziL//w
xI7C++iMbUbi8W3TabMtm6eLEPeo+vvGTvF1CbaJUt5KI1fTwKZjCJlPrGQv
Y58XIv9e6B3fCTRG1rHkw1g0kZPWU5F46lAtRTk9Hp5pyZtYLhLPA9q0lg7J
p4h95kn+itSX7N+el0lTmtKUpjSlKU1p/m/PguFPy6IbmnHfwzxvy2guTt5e
b5+xToC15pkeOWlMHOeNiE55xIOPxakFv5YJ8eLmnXNmMY2Ykt7eXcxjY2ps
X89jcb2+z9D6/r1zdYhWOqvcMowN4UJf2/+pdwXHtlEWjQzErvv8VGshDzMD
XIK+/xbgybCcfnLFTNQVCkNXvOJhytGUKYdXCzHftiJZWYYBfmagdtcLLrbN
bSloSxWg5NTXFcuWM9BINT1ubRDX471+o4MLyPzi6JndNmO5WFbeELw5VoAX
zP4tb3ZTOK0xNl+wm4bBx4MNNeL59/1vA1wPBImI+/5IfUJIfTZIfTxI/TdI
+yY2Xy0aFy+uN3K/1VxkyYkgH+6wttaTvF+D9HczTrctydHiIfezcPDNeULQ
95OmL82hiP6KxJP62iK8NYUY8yk7vUX8s/PliDeTxNdl/HWbYSd0BFh6tEx2
kA2FN57KnDJ3yf1V9h/DBfkPWNjdqxO835AP695xlfFXyP2RHkceO9+VwsRu
fcb7rgc8ZBoJVeyXCsH26O896yUb3F8LB7/4ykdYXs6E8d+FEvsr0rmBJP5v
ea2/5bv+1r5FEucGhW6ecJyHx9vCR7U4CdE1XcGaqqeIfK5bicezbzwYHW3W
2yV+Hwwe9mSNbTeZm+c4//isz8OHuoWKAwyF+Nz/zf/F3p9H1fT+8d+4MiUS
oUGmCKFIkkw9DZlKmZJQokmFZBalgUhSyhQpKSopDeYhiVSGBhma59MZ9t5n
n5ISFfe512/9/rzW+p175ef9ub/nr+fycNbunL07e1/Xo9f1umxj35D5VdPL
06zyKPh/G7dGfbT4uO4L0nTNWCLvLj/2t3l3eTO7mQcT5icyOLC6ONt7Goty
Zt3CwSKWeP/52/VgJO9E6uNH8vmS+jHdk/04279QOPfbbaPXBCGG5llxz69h
iXVcJG4dP3Pzh5UsJjyozFceIQJf89OfxKMiIpe03onU50rS+j1J/85C+nsK
icess0q8/kQIbvC9Xtw8FpXjq7LmmJA56fyTni8kf/VsSYprJkUhcFvJtbN6
Qig7f9PNtCL//vzrcZk0pSlNaUpTmtKU5v/paWXSpliaWgP2jsytvU1cxKvv
kIuLpnD7UNiyfQlVeOV3YqCtDRezJ5YdMlpBwTj+1vRb5lXQnirr0bWYi2kn
nZUnzaFwRc08/k9IA3qcufppnbwAC3hLYlfW0rDIHTb9sy4Hn6If3ZznKMDI
I3nT1ykzoBib2QtncTEvtVppWSCFqU191D2yGfziDp617x0fz/3bdzX8pnFU
t2IP/4YQ5tnBh6ZYcDDvTPV1Aw8BEjrkLfTGMij3fx1aJWrAsU75KScWCOA+
aEeKTw8GPUWr5T+ubMAAq3mmmzh8nB1xx+KZeDxq/bBfEtegETkv1a/a/hSg
3PdoX2s3Brv7To1/M4QFXehXU97B4taD8v7HnUWYJjNzj5q7ePxf0DNTu0GI
/boJ219nUEhQ1vuz9jQLo3kTJpsZiRD84YHgT4gIO15obfJsZLAmuyqrczWL
sRmnZdplRTA1apzg7cBA/scPryFyLHbus70eW8IS6yjejHuxcd9gIU5EMvFf
XVic+Ozy8vlgEZwbojX3RFBgI288e9JbCK3CwlXqRiwqtGbaPr4qxPMs0QS3
Ryw2OQ0zLIOIuN6B5K9I/FtDoNc7IR+a7qNdqpQY9E4feSE3meyvSHzLDDt+
75V8sNXB/J2PaPhelLd3PyQk7sMVpawVF17GQeaBiTIx4vmfU99U816rJO/7
TfJXJD4vq9fskIF87Kv8WHn3Ag19h8tf39kJiV7rX9Vr/a/4LtI+C4atxzS+
K1JQpRmduocMzCu5/RcoskSeoqZwPmSfAH7f9I4c2cLgSP+aYY/Khd3GJfVd
/zVO8nh/24ORvJakvovEk1acP9IexELG5WzYEvF9dfWsy6kBZTTC+22eJTeT
QefRn5MgFOL2uItUWi5L5CSvTuqjTuKS1neR+hOGxd0sarnCwjdQdHWdL4uX
a6bN0tjIENe1kfwbiZPqnUhea0hlpsliTxYzdSs0aAPxed8fef/aGRGKzig7
740Vn3eL53MGm4mwypO7LidcROzHTvJURWtE2V0Dxc+54euVJv5kwbm1mOE5
iRDesf+ebzMN3bSi5iG5QizoXz20ZxqLqKZhgthAGj87fF6wQUKs3MMZcSCY
zLkT/Da8sqNwdrWSV4r4ORyZ3FI/aAqL4CtvbcO+8TFnvJlB6DAG2Vn379ml
CImc9Fz+1+M1aUpTmtKUpjSlKc3/U/JJcbZGU2IBTG8uLe1jWouHPlTxxgE0
PNVHze0YWQq0LZ6VfpmDY+O8+9xMFuCD9uGjK41K0Z5iNPBEPAd37DZdu5Ig
QO6y9ralPaqgKK+xtUSHi6Bjow/90aaw4dmLBQn7GrCKs/a++S8+jnwt2Zn7
lYbXcOvMO3I1MJoR1Ua95KJzb1rf7ScoHFS9MGiqsBYyx5+k1QfxsCn6z+vI
Lgr9dya9b3hXj22KDRsEV/mYvqJplXIUjZtnvyZFZDdinqyfgccKCk++3FBp
i2TwfGDQzCNmNVgYs2aRzWcualztT7WGUDAqOpEyjG6A87Iqm6L5AqT2+BzS
+JuG06zjF+5mNSDpgomBywQB5MLNNLuaaKTrjP8tO1YIJ9OJo2bsY5HjsJNe
qSLCg1uue5XmC1FVrVt9TDx/043SabcfQ16n88OroPbTLwYrJy7trWDDQtNm
3Mpx8iLo5XtHWnoxqO1YNW2UMosi04aajhoWWzsb935ZQuPbyOET5f/vOjBf
n5FWh8jzd88lWr3e8AXozOk/7Fk0g6TPkTuVZcmctG6F5KO6i8tXJYY1POGj
tCTjx8lWGobRpUutrgnx9tex3NVveNCu66u1fAcNx/THRromQoSpmY4dMJGH
4manYcWDaSwuCOnZZxjZq0jqrzorV5TfOM+DT8mGN3qraFyTScvwni38n/Fa
JC6p1+quPvMkLunPJfk6Ev/bPo3E/7Y3+695OUnr0EjrmkmctG6LxEk+x/jN
q96+11jMu3eK/yOQxd7ryp4z9zLYpV4cdPkSi2PjY+uj97P4lDOsSM2QIXoP
ktci1V+RPEwv/acl5lVCTBh8K2VwFYsRrXN3zLIUYQNncx81LyEK+rompMSx
MDj2q6RxJpk/T2ie8kxNiIPf+zWccGNxawT95cRQcn2vpH9HWF5bOWGs+L7L
pY5ya0+zGNS2RCdXU0TknJFhd3ffYHGx2EU7IpJFv4/M95QYhshJ153Uh4rE
HdVn65+5LT7/b42vOUUJka+bFPc1nLwPI8lfkfYxIXnIRa9Vf+bsFD83zIY9
yRrAIvhZ7f0d5dL6K2lKU5rSlKY0pSnN7k6X15wFk/YVwX9R6dzar7VY/czc
7F0NRVw3FzRhXm9DrwYcNb9r/vAPH+2tvZO6ymjMco5ydhpXivXJ5Qs2XuXg
XrzJ7fdJAgx6svzwUV4pah/PN1z/iwNBye2ZBsECKGR+X65hVYsOx9unYwx5
6BHMXxD0nsJC4xRfe7s6eGwIWzmukIczLi+Gd2nSmF5U0qjmVwlf681Lpspz
oaPVMLtAhYKa4w6tZ+51eHlQ/b5RCQ/vwo97FIjnFYOoqF+yHnVIzzcUMRU8
0LW9Qi5p0xg2J+tg2apa9FMMMv8+g4eaJdunZIvnV4taU51Xb6nAsRXuFQ8f
NcK7x9XxH7gCTDHRnHevvhyTU/ijcy80wtNXXqlfsQBzClrVnzlwMGq2mvJ5
PwGoMwreryYy+Pxw6HfeRwr3rb1pP00h0kPcmpxWs6i+82CS/A4K3vHTHtuI
x8UvWve3l+qw+E3dD+ydIp5/9+4RNkOPxZVOamtSE/nv8vV6ZcvY0eLPp3Bo
V+RqIRas4cRfcxXPmwL8itTv8iFfk2pezdK4P3rXXPtwIaa831E1ajQfGwIH
rOsfRePQ9ysym53JdTKydtUOU17x8W5qhd7MXzQ28jdaj7kuxKCykCYNZS4O
WrhMCD5EIbFQ5o3VE4boo0j7wg+yfcZ/tJ+Lx+kRo3onU/DUOBI/qoyB77j0
nIhZPDy8fuPMVHUaJ7eETb00nOyvSFzSeiFJvVZ3+a7/mteS1AtJ6p3aHCM+
RSVw0cu0K2TzOworZmR+Pyv+HkjKu2u/ub9dP/a/wiX1ciT+t32XpB6M5LW6
q789aX0i6fUp62Pev7vOYmzevpcOl1n4vfylcSqMwVZbLf2P+4WoTF25SyaG
xTADj1cjZ4iInLQ+7krpGU9elhCljUW4kM+ia9eWElkzMt9+7GjryVIhFK0P
1duUs7BpvGl6zYJcfyspJ3k/khci8YGiGa6ddQz2j2XXya5ikXniev/3MmSu
kJCRqjCHhuZ4hWPbbIWQlRmmZL+PhUvQNg+FEeLn8ITo4ad7iJDbtVnDdAfZ
l5Lq30j1hL39zF6+0xFC31g/t8KDhUljSdtCdWn9lTSlKU1pSlOa0pTm/9O8
fNGtvrk6H5Zr+dPU1GqhltfpuWgEjYGf6mcqHefh2qSRq74uobFpz90w0Qwh
sv1tLRK2ctFut2fO3RsUSqzOntxWTO4X5N9jGV/lSi3M5S17brbhIfnHktdb
6ihszf52f2tDHV5qHj43QJUP3ON7rllNQzeP0rEZWgf1+Kvv5GJ56Ixfbp8r
T6O+112uyfd6jHh1wHt1Oh+laQef/b5D45h+VpHn1Xo0qe6xOOvNR87ui+2f
ztLE4ysVFH9rba6FiiHv2KUQHtRSLzUYiuep452ndJ2sr0F26kZLr99cDPjO
Lv+dQMFkXsonxWXV2Lz0qUgvkIvxLzus6u0pePVO5k6ZXAnz4yttLZob8X5Q
z6P9+lG4emvCplu+9VAfqhbrt4cPu8uDHx/1p+GqrbGkqpkL06W5xq9aKKg1
RgZp9SSvs8v2XajTso4H56WCxBlTaKzc3cNRXVOI5DDmZ9TERoycMPr48yYB
vueN7zPHhcFl1fv3/7TxUEY9CrQ5RWOq/cvM2k1CBI0b4l1lw8eA6L4v/LJo
jOl68sjNSwjTuXN+zvnKx+ljvVWCejP4nbrUq+qWEJrv9j0qyhPP34//uLho
F41cKkbfxlSI8LCA5y7hPFwK8g/jrqFhPXh51fC5ZC9BNSsVyO7nIO/TMB2D
MwIUGdv7cLQZYl99kr8icZJnkNRrkeq1/nYdl6T1WiQuqdeStB/X3/Zg3eVb
5H7w+lx6KsBkW9Mx0ScZGFv71IV9E0rM+/QuCBzxW4C2Sfut3icxuLt/1qOF
/dj/HP+vebnu8l2S9jGTtA8/iUu6vySpb2HGmdkFs71Z7H+7wmX9CHHe2z/H
fS2N+H4rRrx3YlHT0HlS9qUQPtVBFaZ2FKoVmt7/2ifmU49v/dosvv+uGcVw
GyjiOnRJOanPYYtp3x6O01mUnpbbcmWACHmRrTsO7iVzktci1TWJbpj7H9lE
IeLn94UydQw8HffmL9cic5LXItVH/djNtzZ7xOCY9cj8OgMWz4x3HtzfwsK6
SqDqFs1iTXHZp/wr4p93Xn/Gh3ByXy8FNW5rSJIQlX7OncezWHTkZweVLBFh
7pqb9+wusVi2fI9eivjfbpoFo+wvkM/DiA1BhzvE13FxWQZ3np4IZ7RHXP8c
IPVU0pSmNKUpTWlKU5r/T1M9ZSwedhZg2tVR5+VtaxE3d8vcn71prCtc421k
Uo9vZbmvp6/lQ8+sfn/NXvF8/aPnF/uFHDwy/zb8ipsAW+XfWzeoM7DaXlnk
aiae3wpvz75exuCqwqbwxnHicfwu084ubRoj1F4d+LNBiLG3Oyv/uLF452uc
zn3egEs1I1wejBNgRcDDXnYiGnmDPH2Vf9Ug9LbTn/HieVXI/k0WLUkULsZl
5Kal1WGYep7Ojw4eDsvWdUSDhuXrX8FKZ+vgNtL+02IeD8G3m1PWzSD7qy0z
m49uLebBQLhWN1H8eZbKf9x33lyIsChfj2XhDWipezRQVlEAu2m5j4c20OjR
xDtU5VmPPrb0lwI3Pm6eOhJee5xG6NEhykXnarHlnmFekhUPZ1Oyky9VU+A5
fVawUa/DR8ojriuOh5eqI1dpKNDwH6izM6qyFiO+HJt78jgPyoO6whXaKWhb
vNysGNmAfpcbKx4MFkADW0pTODRxn7t9aY8tNp3mIMvgmPvSywJ85HS+U9Rn
YGBiqRc0jocfqw7FlyjSqLt4S6FsiBDR533qH7E88M5fXZXiR2OAOhJVrch8
S8qb4+/28dASPMZwxnwa+x9bheZPFUKraMze2s1c1CUv3vUrioLqijannCKy
Lxr75UufmHAOXD8eOSW4LsCjyLUfps9miJy0Tz3Ja3WX7+quOq7/Fa8laT/5
7uIkfyVpv/qC3jBxXyvA40sZZ7NMGbRQZZmXCoVE3iNQxsahDwXKJ/S8RxqD
wuePP/QbQK5v/Fe8uzzbv/Jy3fV+ust3zci8olYkvq8MmT7xxzeREM4ztOXN
3rISc0n7z8s1jCo54M9iQIi/K2cGi+8aKx0ehdDopzXScLAvi/rL6q9NxM/F
stdM0mkH8j59GysY3bMHWMwUqDI5P4TI/1HetbGFIvIP52x8FMXP1WtzLQ8d
rhBCZ0zi+ie3KWK/qagwBcFSdwYlol4Tnw9k0dTyLjG8goXaAvMBGooM1HdY
uheXCGHX0r6/7SmZk/bbJXGS1yKts/swrflLz5EUxvyYZbD4BYOp+n8WxA4h
c4Pgd1tScoRouvp7wPIiFhlerW2R5mTv5Lp2SktUCIsn+4ZsWLGJRcuJhUsu
ttB4NOD9pteHWWwKpu816YtgMu/ei92BIujvPHxRI5dF2NfkxnnbRDhnuqTr
1U1yn7F/Pb6TpjSlKU1pSlOa0vxfzSprD905jwqw/9K9CjnzWrTTbw879Kex
cnIc/0FQIdx26mmu8KtFn9eyG178oojjWyth37c9kih8Nq2crqwoxE7b4iN3
FovHbeMXbmrL4OJ3suOnHV8pmH6ywpNmBpuMsmeVqDdilY5S+RBKAPflT38Z
O4rnlztrOp7uEM9zPdubT50UIKWzznXEZDLP3epY/3ZuLZZlbnON1OLB0OuI
fN9XFIwtbO5vz6pBjezo2jGtXOTZMyPdYinY6dYZGi+sQ2rHiK2uz3noveJJ
dqUaLfH+ZUnXqyrfedUhz8/peXQ1D4lNEXenT6WhtsH/pr5OHb7d+XZ0SBoP
W30+xI4eQsMzauQ8pX5c7Fw+apS2O4W3hwQhrfcZaBWEVvt/4eLKde/xGQ0U
1n6eZhn7kyH2y5KUF8n/sB/f3gD3dVpOeksEOGfFZC/vyeC4wWqHkjH1mDtx
5rV3c/gI4mzu90M8b0oI/f5p9UcOCkbJ57SI539LMqfOnreSgffUocq7+nKg
xmp6fTET4ODgRTmucgxSL8lrWOhzcHdRvNKs7QJ4p6dP9BHPTz70KZvnTnNQ
bRD99VGBAL1328bKrid7qu7ikvouSb0Wif/tOq7uWp/4v+K7SOsio0LsnsnW
82F5SOml/gAGftPTA4pvk3nvIfcHxi6kkP392rm2YgbKZ9mgptHkvjfdxUl+
7L/Gu8uz3cixtxn0kkJYRB/lXcOFGKSVGeFsQuZ/23eR+CWVhc+CD4u/r0vH
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
XH/FaT7+gCZ6m7sBccaPbBl8W/gu1bY3i2T7PG+5ryyRS7p/1uGy2T51gRTk
m5yW2HQy4Brla54xJPPOkUPKfBIotN9mXqsrCCE/kX/i2CIyN84+820WzcOA
b4l1931oJNZb3KcthSj4fY3tXczFi66QR6/qKDRHLNl6sJ3pNq/VXb6ruzxY
d3mtmr1aHhd3N0Jr4J1SFzUKTrEb9jv5kvnf9l2SejASl7Qf/t/2V3+bk/zY
f82bdZcHk5RL6qncDI8+7VThoCvCtmX6BgGe3DBu/qXASMwl9Vek+0zqJXkN
C30O7i6KV5q1XQDv9PSJPioMVC3pNP0LjfjQf9CMkVMpmHcufXnvLJlHDb2i
ZLSuEYe22z9x6EchOkwwv+4QeZ04/0TghtFeAqRaBw+tt2fwc7LCemGVkMgl
rY+S1C+NirIccGwSjQWHivv2Ft/3M92VeMW7yNwoMOD1Fjkah9Rt1FcuFmL2
aoXQdDsyJ/mrodPd7VYeoPEnXPVotY8QJh9NilecIvfLInGSv4LjoJ8ua4Uo
XXhFIySYhZ5R7qKQiSIUJztP7xErfm6rKtiNeM7i6N1LZjcWkTmp71ZuHLVi
+mfx56tvF0Y5i99HrI3ehNsiIif10eJEeI/+7M9irH9KyvKZLG6eeTfU8ry0
f7s0pSlNaUpTmtL8++lh7+o47Hw+Xq9+y5zqU4sbk3f20xlLQ9vpw7YM7UI4
qPy5uV1UgQ8JPXoOyKKhFxRKxz4vxMz9J0t2XSlH6HkFu7DvNGZbWk9NbShA
/dIbQbKRlXip8rS2IY5Gn5NxBwy3FuD0Ew0P9y9VGCkTrPnxkHi+YHZHsdg/
H0fu1cgfrKzBPuylI8XjzgdbvBbNHlyA4osTt2iHVkNp8uj+AZtpLCo/R51J
/IIkptIzxKEBW2XOj/VVpBD8hO+/wf8Lpk64MGPj2gZ8N1FONx9Godo1IqLi
fAnuZo1ZN8yCA9efH2ZNey2A7aWw0X7RpfB7ZaZ5uYSDWUMnT1p+RYCIlVs5
L5dWIHW1vd7AtEZ0eE8dXlIvwH2vhim9Pn1F57OPh1JaG7A0vMt4cZ0AV7N2
pfAfloIqO2YcXM/B8AE7H729KEDDqrYH+k5V+DFBcWycCRfpfT5rjDIir1sk
reMj1VMtNE7xtberg8eGsJXjCnk44/JieJcmjbCY69GdN+tx/DeiPP35YFQt
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
LwfvPAfLUwny0oK801DzofZUFs87dnG/NqDhjqeZwmYC9wJ/ysjEUIPGB8tr
DZbvuiXz8mV/VxNYROrlnRdJaNi+yanZ1oIjG4MeWvLHp5qTxlemJlJo3R91
K06kVSAX5K/GT360+NstApP7npvljGzBx9CGra26w15rOA7H/8Z48EJaTqwf
A2OUvMqo6hps9/RWaa7kj8N70/xSrxZirIqUTHJ+NdYc5aQ5zydRFmIbd1aa
jsfKpy5uUK5ESLD7Ral0EkrBLLF1eXR0df5I8vJlY6LBp5Ix3STS45wKhUYx
kEzqEJsbWRB+q5cQKEHhzIu+zj8VRajmrJjqe7EW8Sez9vjGE3i7/u3U41JF
yFNL0LaeXYv3j96t+JxHYO4XceSdZmDP5b74e6waRMiOmkdUESi52tUTVsHA
h2O3Y/rFauHydOsybzqB9i2KbbuCi8C7a370+P5aHHL1t3iSTGCko6uL+pIi
ELV1m1hLapFvG2p98S2B77K3dc3414EXd2pTnlc5Crorz845SuHiH4OyH/sZ
aLorzPGQZULDIPfEb0sKd19KjNTXZ8B89Fqdno9MzDvc7/ViOYVx9THF14wZ
EGpOiuhMYML1wVcLHfDHx7Y7ElnWDNjYthpL72QinjVhOW0dhXnPLbhPUuhQ
M2ce7kpgQ8tNNmnydxIbbp+XrBBmwCFFQ+wjyYJm966NmRMomF/bl3EpjI6X
GRqJOm1sXBTvUoptIlGRu+5CsiQD3YY01d8JLJRz/JixMhTGT3uo1DqTf3/P
1RtZWrDgLGd08OVsCm3x8fLtFB3nRbsex81h42htnwdnNIVLXsEfdbfQMWc7
Oc7+cgXc5zufXcUgcVb6QYzSBAbsHjevX/CKBYlRS53o0hQsvz5Moa7zj/Oo
U+rbHzZml0W2GjeQMJWVYDUtp8P8XLdzVmEFRNTmeCvmkWi/7/Kr1YeOGcmL
Xn1TroCldOnMq9UkHBIis4NP0lE2sl3i8eoKmI/wX/yBTUJ99USlWTdpWDk3
r8VxBweac9o2i18m8Zs/BspMo8Hzy5R1XSer4Fa3X+PTbhKJ3pAnlWl4n5V5
dde+KhzY5LY5ZB+JbK1LauqPC3HKdtLXVs9q2JwiD6QsI9Ev67vH4X4hXuV8
38MMr4bGwdVfvLVIdB0zTC/qLMQT3Ye9j0qq8MLe6+COTfzrLBprFKJWDqVv
+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
ZhfWorJh//ITLAZsn2DeQl7f4N+Y8FxQvRYWDttX9t5lQL2elb9lmP8+fZkE
ObvgRw1MzF6ZU84zsHXBDS0BIYKvy1kNlXzoqIGMy9bJsUEMuBg3TmWIEHB1
3CY8R7AWnxQ20d0vMXD19KN79eMITH5cqiNFq0bz19PH53+no/3avo5nywiE
TbF5U7C+Gleu3ipvKaBj4Zl1jg0mBIJH196+a1MDL2/p1b2rGfD6+KGZJkug
PXLJ0eXHazESvHlwZRkDI8YbVT16WaAJv3/uItkAVlRxjfn0TpwfrjnKPMtC
jO770FU/62FTpi14UrgTd5QbT30/x4KDb3Php5Q6+Bo+GLC1ZWKh6dU+vVcs
TPZKEsl1qoWtz0HT9FcM7H6TcUyln4WbhSvebxOph8/3L2fmXGDius5optVD
/t4RsrzzE7cRgb5Wm7RvdOKGy2YbiWoWrNcSugafGLhseCbzzRIWNqlYbLk4
SEKvKuNBYCId6Xsslp4K7cH5dlfm4ij++zHx80Zu+CUnjR4ILJjklp3C61Oy
egVPeHD+uP/pXOs///8nJxzr93nrN9Eh8G4nvFOmmL1aQUDrUdzrmuj/Pf/b
8qt/S96VGzHbQKW1G8Jddg3b/EiUn1sVFL6Ng8S3B2ynvSIQHSsi6SHDwTSV
l7EuZtx/zFd+qLi6z5iFB+eOnrEzYmPGldfntD5wUDbUqzVo0APmp3Xtog9I
JKzuXyzmxd+nNVz6rCDZBR8r14WRvgQyaOPe7HzKhpLVi1pZ7W40/no4R3s2
CcWFabquszkQodspJw92wX54YLrPIK+OHNDOLBHm7xItWVJ18zshcqTv0UQu
C8ufRnbddh77utZxy3Y/S37HgtbBayqCkWwszL8hOTjI38e6z+Pv8uyJdxst
n3fC7L7DcLkRgRsX5wlqxI59XuJY86t2Tp/C7pEeTJy7u01Pjg1Tw3kvd+Tx
99/1nt0/5f9UrhXFvjYpawcJibbon/KeHCxkLTlqfYI7Zh8/I3/q3bUESgfi
ogZ511vyIvfCZ/nf5/xyqmUCreRHHwLmCavsRfrYMPRpF6IuG3t+9bvmcRmc
Cy/ZO5GEr6yt7KZ1HOhZiF3O3c8/1xp+wkm/1smr71yKiZcdvK9f/SJ4dOd/
udZ/x7/7eKe4OfMlg4PH95odqypJmKqtSli/uxP5Dt3F1HLec7p1q1cMr3+2
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
     "], {{0, 0}, {200, 
     200}}, {0, 1}], Epilog -> {
      PointSize[Large], 
      PointBox[{67.67081289614264, 167.79119976686778`}]}, Frame -> True, 
    FrameLabel -> {None, None}, FrameTicks -> {{{{199.5, 
         FormBox["1", TraditionalForm]}, {150.5, 
         FormBox["50", TraditionalForm]}, {100.5, 
         FormBox["100", TraditionalForm]}, {50.5, 
         FormBox["150", TraditionalForm]}, {0.5, 
         FormBox["200", TraditionalForm]}}, {{199.5, 
         FormBox["1", TraditionalForm]}, {150.5, 
         FormBox["50", TraditionalForm]}, {100.5, 
         FormBox["100", TraditionalForm]}, {50.5, 
         FormBox["150", TraditionalForm]}, {0.5, 
         FormBox["200", TraditionalForm]}}}, {{{0.5, 
         FormBox["1", TraditionalForm]}, {49.5, 
         FormBox["50", TraditionalForm]}, {99.5, 
         FormBox["100", TraditionalForm]}, {149.5, 
         FormBox["150", TraditionalForm]}, {199.5, 
         FormBox["200", TraditionalForm]}}, {{0.5, 
         FormBox["1", TraditionalForm]}, {49.5, 
         FormBox["50", TraditionalForm]}, {99.5, 
         FormBox["100", TraditionalForm]}, {149.5, 
         FormBox["150", TraditionalForm]}, {199.5, 
         FormBox["200", TraditionalForm]}}}}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], 
    Method -> {
     "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
      "RangePadding" -> Scaled[0.05]}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             RasterBox[CompressedData["
1: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
z6/4H5jQuMo=
              "], {{
                Rational[-15, 2], (-180)/GoldenRatio}, {
                Rational[15, 2], 180/GoldenRatio}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], (-180)/GoldenRatio}, {
                  Rational[-15, 2], (-180)/GoldenRatio}, {
                  Rational[-15, 2], 180/GoldenRatio}, {
                  Rational[15, 2], 180/GoldenRatio}, {
                  Rational[15, 2], (-180)/GoldenRatio}}, {{
                7.5, -111.24611797498106`}, {-7.5, -111.24611797498106`}, \
{-7.5, 111.24611797498106`}, {7.5, 111.24611797498106`}, {
                7.5, -111.24611797498106`}}]]}, {
              CapForm[None], {}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                
                LineBox[{{7.5, -111.24611797498106`}, {7.5, 
                 111.24611797498106`}}], 
                Directive[
                 AbsoluteThickness[0.2], 
                 Opacity[0.3], 
                 GrayLevel[0]], StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{7.5, -109.38186400880801`}, 
                    Offset[{4., 0}, {7.5, -109.38186400880801`}]}, {{
                    7.5, -32.38006975384059}, 
                    Offset[{4., 0}, {7.5, -32.38006975384059}]}, {{7.5, 
                    44.62172450112685}, 
                    Offset[{4., 0}, {7.5, 44.62172450112685}]}, {{7.5, 
                    78.00067914734639}, 
                    Offset[{4., 0}, {7.5, 78.00067914734639}]}, {{7.5, 
                    109.71068606125493`}, 
                    Offset[{4., 0}, {7.5, 109.71068606125493`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "38"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -109.38186400880801`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "19"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -32.38006975384059}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 44.62172450112685}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["20", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 78.00067914734639}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["39", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 109.71068606125493`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                   StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                 False], {
                 Directive[
                  AbsoluteThickness[0.2], 
                  GrayLevel[0.4]]}, StripOnInput -> False]}, "GraphicsAxes", 
              StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
            PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], ImageSize -> 
            NCache[{Automatic, 360/GoldenRatio}, {
              Automatic, 222.49223594996212`}], BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   
                   RowBox[{
                    "System`PlotThemeDump`$ThemeDefaultMatrix", ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.`", ",", "0.7137207791404012`"}], "}"}]}], "}"}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", 
             FractionBox["360", "GoldenRatio"]}], ",", 
           RowBox[{"Ticks", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"0.2529901196047844`", ",", 
                    RowBox[{"-", "19.`"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.5`", ",", "0.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.00598023920956885`", ",", 
                    RowBox[{"-", "38.`"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.6070745386474956`", ",", "20.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.7087953503626163`", ",", "39.`"}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"\"PinningPoint\"", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"\"SmoothRange\"", "\[Rule]", "False"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.783109506724449*^9, 3.7831127669966297`*^9, 
  3.783118137805834*^9, 3.783118322305501*^9, 3.7831183932267714`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"08d3fc48-2799-4570-9fe0-8e2a736abd72"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"MakeEarningsMatrix", "[", "\[IndentingNewLine]", 
    RowBox[{"datedPrices", ",", "\[IndentingNewLine]", 
     RowBox[{"First", "@", 
      RowBox[{"partitions", "[", 
       RowBox[{"[", "part", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Last", "@", 
      RowBox[{"partitions", "[", 
       RowBox[{"[", "part", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
     "200"}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"part", ",", "1", ",", 
     RowBox[{"Length", "[", "partitions", "]"}], ",", "1"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.782945383421146*^9, 3.7829453884606524`*^9}, {
  3.7830930302669487`*^9, 3.783093059369668*^9}, {3.783093096281206*^9, 
  3.783093164591864*^9}, {3.783093247043232*^9, 3.783093300526835*^9}, {
  3.783105310346084*^9, 3.783105310644353*^9}, {3.7831071107364607`*^9, 
  3.783107167914469*^9}, {3.7831073437870007`*^9, 3.783107343872418*^9}, {
  3.783109466559003*^9, 3.78310946691476*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"a9672b82-5551-4c22-b97f-4980159958dd"],

Cell[BoxData[
 RowBox[{"StrategyPlot", "[", 
  RowBox[{
   RowBox[{"Take", "[", 
    RowBox[{"datedPrices", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "252"}], "}"}]}], "]"}], ",", "10", ",", "40"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7830949387231693`*^9, 3.783094947563706*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"e03c2a69-b4ed-457f-9d87-7573b8485314"]
}, Closed]],

Cell[CellGroupData[{

Cell["Export animations", "Subtitle",
 CellChangeTimes->{{3.783107888413157*^9, 
  3.783107915981378*^9}},ExpressionUUID->"16dc4ea5-2a01-4bc7-b476-\
844d4b096327"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExportImages", "[", 
    RowBox[{"file_", ",", "frames_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"indexLength", ",", "directory", ",", "name"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"indexLength", " ", "=", " ", 
       RowBox[{"Length", "[", 
        RowBox[{"IntegerDigits", "[", 
         RowBox[{"Length", "[", "frames", "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"directory", " ", "=", " ", 
       RowBox[{"DirectoryName", "[", "file", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"name", " ", "=", " ", 
       RowBox[{"FileBaseName", "[", "file", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"MapIndexed", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Export", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"FileNameJoin", "[", 
            RowBox[{"{", 
             RowBox[{"directory", ",", 
              RowBox[{"StringJoin", "[", 
               RowBox[{"name", ",", 
                RowBox[{"IntegerString", "[", 
                 RowBox[{"#2", ",", "10", ",", "indexLength"}], "]"}], ",", 
                "\"\<.png\>\""}], "]"}]}], "}"}], "]"}], ",", 
           "\[IndentingNewLine]", "#1"}], "\[IndentingNewLine]", "]"}], "&"}],
         ",", "\[IndentingNewLine]", "frames"}], "\[IndentingNewLine]", 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.755269580353081*^9, 3.7552696262331333`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"84932bd7-af1f-4602-ac2e-88f7d24ad797"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"partitions", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"First", "[", "#", "]"}], ",", 
        RowBox[{"Last", "[", "#", "]"}]}], "}"}], "&"}], ",", 
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"20", ",", "1000"}], "]"}], ",", "401", ",", "1"}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plots", " ", "=", " ", 
   RowBox[{"ProgressTable", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"StrategyPlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Take", "[", 
        RowBox[{"datedPrices", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"First", "@", 
            RowBox[{"partitions", "[", 
             RowBox[{"[", "part", "]"}], "]"}]}], ",", 
           RowBox[{"Last", "@", 
            RowBox[{"partitions", "[", 
             RowBox[{"[", "part", "]"}], "]"}]}]}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", "20", ",", "40"}], "\[IndentingNewLine]", "]"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"part", ",", "1", ",", 
       RowBox[{"Length", "[", "partitions", "]"}], ",", "1"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7831079231660633`*^9, 3.783107961034189*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"524f7aaa-9a1b-475a-b4bc-0cbad54debd5"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"plots", "[", 
    RowBox[{"[", "i", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "plots", "]"}], ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7831091200018997`*^9, 3.783109135557165*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"75b1a803-5c48-426d-8690-63b9724fb25c"],

Cell[BoxData[
 RowBox[{"ExportImages", "[", 
  RowBox[{
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<Plots\>\"", ",", 
      "\"\<img.png\>\""}], "}"}], "]"}], ",", "plots"}], "]"}]], "Input",
 CellChangeTimes->{{3.783109164613345*^9, 3.7831092077595797`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"67733812-ed05-4dc4-9307-6affdeb80ea3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"partitions", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"First", "[", "#", "]"}], ",", 
        RowBox[{"Last", "[", "#", "]"}]}], "}"}], "&"}], ",", 
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"20", ",", "1000"}], "]"}], ",", "401", ",", "1"}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plots", " ", "=", " ", 
   RowBox[{"ProgressParallelTable", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"MakeEarningsMatrix", "[", "\[IndentingNewLine]", 
      RowBox[{"datedPrices", ",", "\[IndentingNewLine]", 
       RowBox[{"First", "@", 
        RowBox[{"partitions", "[", 
         RowBox[{"[", "part", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"Last", "@", 
        RowBox[{"partitions", "[", 
         RowBox[{"[", "part", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
       "200"}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"part", ",", "1", ",", 
       RowBox[{"Length", "[", "partitions", "]"}], ",", "1"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.783109570582243*^9, 3.7831096021016283`*^9}, {
  3.7831096344169683`*^9, 3.7831096353411427`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"2452a8a0-0f66-4656-b4fa-c76c44ec231b"],

Cell[BoxData[
 RowBox[{"ExportImages", "[", 
  RowBox[{
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<apple_window\>\"", 
      ",", "\"\<img.png\>\""}], "}"}], "]"}], ",", "plots"}], "]"}]], "Input",\

 CellChangeTimes->{{3.783111754233152*^9, 3.783111776860189*^9}, 
   3.783112816320487*^9, {3.783120707310069*^9, 3.783120709771146*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"f294464f-2f34-4cb1-856a-5a831d8b0d6a"]
}, Closed]]
}, Open  ]]
},
WindowSize->{1858, 1013},
WindowMargins->{{Automatic, 0}, {0, Automatic}},
FrontEndVersion->"12.0 for Linux x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"ReverseColor Nice.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 154, 3, 99, "Title",ExpressionUUID->"4a54942e-ffd0-4f7e-a6e5-2d237eed6905"],
Cell[CellGroupData[{
Cell[759, 29, 158, 3, 70, "Chapter",ExpressionUUID->"8a9ca2a5-c0f5-47dd-a8e8-0872618aa284"],
Cell[920, 34, 922, 26, 140, "Input",ExpressionUUID->"81215aad-53bf-40ab-b18d-a1a505c87309",
 InitializationCell->True],
Cell[1845, 62, 562, 14, 50, "Input",ExpressionUUID->"abbbb87b-4cd3-44b7-9e28-9da59c70ca1d",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[2432, 80, 158, 3, 55, "Subsection",ExpressionUUID->"68e346b3-259b-4e43-85f1-eb11ea932d84"],
Cell[2593, 85, 643, 15, 47, "Input",ExpressionUUID->"6f87622b-4f11-40a5-aec1-3d31827c73f9",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[3261, 104, 214, 3, 31, "Input",ExpressionUUID->"617a9cc4-32ac-4641-b104-8d6a2a69125f"],
Cell[3478, 109, 175, 2, 35, "Output",ExpressionUUID->"3113fb73-b50d-456c-81f6-527de11ef388"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3702, 117, 159, 3, 55, "Subsection",ExpressionUUID->"c6363a01-c59e-44cb-a829-2b0a11d4a26f"],
Cell[3864, 122, 486, 11, 31, "Input",ExpressionUUID->"ce2217f4-0c75-4e25-927e-293ac8bf0d45"],
Cell[CellGroupData[{
Cell[4375, 137, 148, 2, 31, "Input",ExpressionUUID->"3b9882e6-6908-41e5-a925-14da9e77ed87"],
Cell[4526, 141, 154, 2, 35, "Output",ExpressionUUID->"d9010f93-5c83-43bc-a99c-2451ad228ad6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4729, 149, 161, 3, 55, "Subsection",ExpressionUUID->"b70a467b-2966-49db-bba2-cd10279535b8"],
Cell[4893, 154, 1022, 28, 55, "Input",ExpressionUUID->"8b73b6c4-fd8e-49cd-86a3-62a277a9f070"],
Cell[5918, 184, 1375, 26, 71, "Input",ExpressionUUID->"92329e06-7ef4-4543-bea3-dc8346f4eea5",
 InitializationCell->True],
Cell[7296, 212, 324, 9, 47, "Input",ExpressionUUID->"9db3b944-0358-4ba2-aa6d-10165afdac04",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7669, 227, 267, 4, 70, "Chapter",ExpressionUUID->"26a427a5-bb3d-402a-9006-0200059e1618"],
Cell[7939, 233, 16560, 407, 1796, "Input",ExpressionUUID->"57419040-032d-42fa-a791-ce970ce8df9a",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[24524, 644, 313, 6, 31, "Input",ExpressionUUID->"f9cf9240-452b-4f11-8b07-fba30fa3a5f6"],
Cell[24840, 652, 10218, 178, 102, "PrintTemporary",ExpressionUUID->"8be7e683-5e83-431a-ab1a-3ffb1772d169"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[35107, 836, 269, 4, 70, "Chapter",ExpressionUUID->"63794d6f-cd52-4dac-8047-2dfc6064dfe0"],
Cell[35379, 842, 1051, 26, 70, "Input",ExpressionUUID->"de2f322f-eed4-4ad4-bd71-e71ea18c88e0"],
Cell[CellGroupData[{
Cell[36455, 872, 243, 5, 46, "Input",ExpressionUUID->"94dfce21-cd1a-4055-a333-ce5ef2f6eb56"],
Cell[36701, 879, 479, 9, 50, "Output",ExpressionUUID->"99e640c6-0354-427f-a7af-6b8d99c5f8c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37217, 893, 459, 13, 46, "Input",ExpressionUUID->"5eb7ecf8-7784-406d-a32a-862bbdbaa074"],
Cell[37679, 908, 409, 10, 50, "Output",ExpressionUUID->"c8333575-df04-457f-a661-89132f0e5f2f"]
}, Open  ]],
Cell[38103, 921, 275, 8, 31, "Input",ExpressionUUID->"ed0f1c8d-4c03-4455-bfc0-0686c3125ed9"],
Cell[CellGroupData[{
Cell[38403, 933, 997, 26, 46, "Input",ExpressionUUID->"185803b4-c1d0-4200-ad7a-9c8187c6f35c"],
Cell[39403, 961, 21031, 445, 255, "Output",ExpressionUUID->"429b7648-d0a2-4ae3-a6cd-093915cff718"]
}, Open  ]],
Cell[60449, 1409, 174, 4, 31, "Input",ExpressionUUID->"14aae606-40e8-4bc4-ad75-935f7e8cde62"],
Cell[CellGroupData[{
Cell[60648, 1417, 167, 3, 31, "Input",ExpressionUUID->"b9ddd3ec-0f38-4b2c-a56b-baf1ab046758"],
Cell[60818, 1422, 176, 2, 35, "Output",ExpressionUUID->"6f6bbe10-89cd-4bb2-980e-4375dbf443f9"]
}, Open  ]],
Cell[61009, 1427, 1156, 35, 71, "Input",ExpressionUUID->"db66d2cd-327f-4684-9824-73a28325379c",
 InitializationCell->True],
Cell[62168, 1464, 27593, 626, 2716, "Input",ExpressionUUID->"cf2da8d3-1706-472e-88f7-4efc37b36216",
 InitializationCell->True],
Cell[89764, 2092, 784, 19, 31, "Input",ExpressionUUID->"4d58366c-3218-406e-a795-57fdb667cff6"],
Cell[CellGroupData[{
Cell[90573, 2115, 627, 12, 147, "Input",ExpressionUUID->"4b0cf80c-9889-46b4-a266-4e10c8b6dd88"],
Cell[91203, 2129, 172156, 2869, 366, "Output",ExpressionUUID->"08d3fc48-2799-4570-9fe0-8e2a736abd72"]
}, Open  ]],
Cell[263374, 5001, 1191, 22, 216, "Input",ExpressionUUID->"a9672b82-5551-4c22-b97f-4980159958dd"],
Cell[264568, 5025, 372, 9, 31, "Input",ExpressionUUID->"e03c2a69-b4ed-457f-9d87-7573b8485314"]
}, Closed]],
Cell[CellGroupData[{
Cell[264977, 5039, 163, 3, 54, "Subtitle",ExpressionUUID->"16dc4ea5-2a01-4bc7-b476-844d4b096327"],
Cell[265143, 5044, 1726, 40, 324, "Input",ExpressionUUID->"84932bd7-af1f-4602-ac2e-88f7d24ad797",
 InitializationCell->True],
Cell[266872, 5086, 1479, 38, 193, "Input",ExpressionUUID->"524f7aaa-9a1b-475a-b4bc-0cbad54debd5"],
Cell[268354, 5126, 403, 10, 31, "Input",ExpressionUUID->"75b1a803-5c48-426d-8690-63b9724fb25c"],
Cell[268760, 5138, 416, 9, 31, "Input",ExpressionUUID->"67733812-ed05-4dc4-9307-6affdeb80ea3"],
Cell[269179, 5149, 1446, 34, 239, "Input",ExpressionUUID->"2452a8a0-0f66-4656-b4fa-c76c44ec231b"],
Cell[270628, 5185, 495, 11, 31, "Input",ExpressionUUID->"f294464f-2f34-4cb1-856a-5a831d8b0d6a"]
}, Closed]]
}, Open  ]]
}
]
*)

